{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_bankCapUSD",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_withdrawalLimitUSD",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_ethUsdPriceFeed",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "currentBalanceUSD",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "depositValueUSD",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "capUSD",
						"type": "uint256"
					}
				],
				"name": "KipuBank__BankCapExceeded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "KipuBank__FallbackNotAllowed",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "requiredAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "availableAmount",
						"type": "uint256"
					}
				],
				"name": "KipuBank__InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "priceFeed",
						"type": "address"
					}
				],
				"name": "KipuBank__InvalidPriceFeed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "KipuBank__MustUseDepositEth",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "KipuBank__TokenNotAllowed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "KipuBank__TransferFailed",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "withdrawValueUSD",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "limitUSD",
						"type": "uint256"
					}
				],
				"name": "KipuBank__WithdrawLimitExceeded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "KipuBank__ZeroAmount",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "SafeERC20FailedOperation",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "valueUSD",
						"type": "uint256"
					}
				],
				"name": "Deposited",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "priceFeed",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "decimals",
						"type": "uint8"
					}
				],
				"name": "TokenAllowed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newPriceFeed",
						"type": "address"
					}
				],
				"name": "TokenPriceFeedUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "valueUSD",
						"type": "uint256"
					}
				],
				"name": "Withdrawn",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "ETH_ADDRESS",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "USD_DECIMALS",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "USD_PRECISION",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_priceFeed",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "_decimals",
						"type": "uint8"
					}
				],
				"name": "allowToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositEth",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "depositToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "emergencyWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "getTokenConfig",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "priceFeed",
								"type": "address"
							},
							{
								"internalType": "uint8",
								"name": "decimals",
								"type": "uint8"
							}
						],
						"internalType": "struct KipuBank.TokenConfig",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "getTokenValueUSD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "i_bankCapUSD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "i_withdrawalLimitUSD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "s_balances",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "s_depositCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "s_tokenConfig",
				"outputs": [
					{
						"internalType": "address",
						"name": "priceFeed",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "decimals",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "s_totalBankValueUSD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "s_withdrawalCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_newPriceFeed",
						"type": "address"
					}
				],
				"name": "updateTokenPriceFeed",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"author": "Facundo Criado",
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"SafeERC20FailedOperation(address)": [
					{
						"details": "An operation with an ERC-20 token failed."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"allowToken(address,address,uint8)": {
					"params": {
						"_decimals": "Los decimales del token.",
						"_priceFeed": "La direccion del oraculo de precio.",
						"_token": "La direccion del contrato ERC-20."
					}
				},
				"constructor": {
					"params": {
						"_bankCapUSD": "Limite de capitalizacion del banco en USD.",
						"_ethUsdPriceFeed": "Direccion del oraculo ETH/USD de Chainlink.",
						"_withdrawalLimitUSD": "Limite de retiro por tx en USD."
					}
				},
				"depositEth()": {
					"details": "Usa `msg.value` como la cantidad a depositar."
				},
				"depositToken(address,uint256)": {
					"details": "El usuario debe haber aprobado al contrato previamente.",
					"params": {
						"_amount": "La cantidad de tokens a depositar (en la unidad mas pequeña del token).",
						"_token": "La direccion del contrato ERC-20."
					}
				},
				"emergencyWithdraw(address,uint256)": {
					"details": "No actualiza `s_totalBankValueUSD` intencionalmente, ya que es una funcion de emergencia."
				},
				"getTokenValueUSD(address,uint256)": {
					"params": {
						"_amount": "La cantidad del token.",
						"_token": "La direccion del token."
					},
					"returns": {
						"_0": "valueUSD El valor equivalente en USD (con 8 decimales)."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"withdraw(address,uint256)": {
					"params": {
						"_amount": "La cantidad a retirar (en la unidad mas pequeña del token).",
						"_token": "La direccion del token a retirar (usar `address(0)` para ETH)."
					}
				}
			},
			"stateVariables": {
				"s_balances": {
					"details": "(tokenAddress => userAddress => balance)"
				}
			},
			"title": "Contrato bancario",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"ETH_ADDRESS()": {
					"notice": "Direccion reservada para representar Ether nativo."
				},
				"USD_DECIMALS()": {
					"notice": "Los decimales estandar para los precios en USD de Chainlink."
				},
				"USD_PRECISION()": {
					"notice": "Precision para calculos con USD (10**8)."
				},
				"allowToken(address,address,uint8)": {
					"notice": "(Owner) Permite un nuevo token ERC-20 en el banco."
				},
				"depositEth()": {
					"notice": "Permite a un usuario depositar Ether nativo."
				},
				"depositToken(address,uint256)": {
					"notice": "Permite a un usuario depositar tokens ERC-20 permitidos."
				},
				"emergencyWithdraw(address,uint256)": {
					"notice": "(Owner) Permite retirar fondos de emergencia."
				},
				"getBalance(address,address)": {
					"notice": "Obtiene el saldo de un usuario para un token especifico."
				},
				"getTokenConfig(address)": {
					"notice": "Obtiene la configuracion de un token permitido."
				},
				"getTokenValueUSD(address,uint256)": {
					"notice": "Funcion de conversion de valor. Obtiene el valor en USD de una cantidad de token."
				},
				"i_bankCapUSD()": {
					"notice": "Limite de capitalizacion del banco en USD (con 8 decimales)."
				},
				"i_withdrawalLimitUSD()": {
					"notice": "Limite de retiro por transaccion en USD (con 8 decimales)."
				},
				"s_balances(address,address)": {
					"notice": "Mapping anidado para la contabilidad multi-token."
				},
				"s_depositCount()": {
					"notice": "Cantidad de depositos que se realizaron en el contrato."
				},
				"s_tokenConfig(address)": {
					"notice": "Mapping para almacenar la configuracion (price feed y decimales) de cada token permitido."
				},
				"s_totalBankValueUSD()": {
					"notice": "Valor total de todos los activos en el banco, en USD (con 8 decimales)."
				},
				"s_withdrawalCount()": {
					"notice": "Cantidad de retiros que se realizaron en el contrato."
				},
				"updateTokenPriceFeed(address,address)": {
					"notice": "(Owner) Actualiza el oraculo de un token."
				},
				"withdraw(address,uint256)": {
					"notice": "Permite a un usuario retirar sus fondos (Ether o ERC-20)."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/kipu-bankV2.sol": "KipuBank"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
			"keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
			"license": "MIT",
			"urls": [
				"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
				"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
			]
		},
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC1363.sol": {
			"keccak256": "0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d",
			"license": "MIT",
			"urls": [
				"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100",
				"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC165.sol": {
			"keccak256": "0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc",
			"license": "MIT",
			"urls": [
				"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037",
				"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC20.sol": {
			"keccak256": "0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44",
			"license": "MIT",
			"urls": [
				"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d",
				"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
			"license": "MIT",
			"urls": [
				"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
				"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
			"license": "MIT",
			"urls": [
				"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
				"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
			"license": "MIT",
			"urls": [
				"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
				"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
			]
		},
		"contracts/kipu-bankV2.sol": {
			"keccak256": "0x04651fd2149dbb84a84b50b611a8a3aaa525d27f54b30c5e5cd87c3cd05fc135",
			"license": "MIT",
			"urls": [
				"bzz-raw://d569ca214812450cb6ac0bdbf5e51cd12dbf4ae1af87f4bab746e777f2eaab1c",
				"dweb:/ipfs/QmRK9jodDn5na1Vk2cYJoaFeFomByKJtBbNSPoyzm4w7Nn"
			]
		}
	},
	"version": 1
}