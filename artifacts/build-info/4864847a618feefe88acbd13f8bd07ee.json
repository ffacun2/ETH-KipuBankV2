{
	"id": "4864847a618feefe88acbd13f8bd07ee",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/kipu-bankV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.30;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\n\r\n/**\r\n * @title Contrato bancario\r\n * @author Facundo Criado\r\n*/\r\ncontract KipuBank is Ownable {\r\n\r\n    using SafeERC20 for IERC20;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            DECLARACIONES DE TIPOS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /**\r\n     * @notice Configuracion para cada token permitido en el banco.\r\n     * @param priceFeed La direccion del oraculo de Chainlink.\r\n     * @param decimals Los decimales del token.\r\n     */\r\n    struct TokenConfig {\r\n        address priceFeed;\r\n        uint8 decimals;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            VARIABLES CONSTANT\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Direccion reservada para representar Ether nativo.\r\n    address public constant ETH_ADDRESS = address(0);\r\n\r\n    /// @notice Los decimales estandar para los precios en USD de Chainlink.\r\n    uint8 public constant USD_DECIMALS = 8;\r\n\r\n    /// @notice Precision para calculos con USD (10**8).\r\n    uint256 public constant USD_PRECISION = 10**USD_DECIMALS;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            VARIABLES DE ESTADO\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Limite de capitalizacion del banco en USD (con 8 decimales).\r\n    uint256 public immutable i_bankCapUSD;\r\n\r\n    /// @notice Limite de retiro por transaccion en USD (con 8 decimales).\r\n    uint256 public immutable i_withdrawalLimitUSD;\r\n\r\n    /// @notice Valor total de todos los activos en el banco, en USD (con 8 decimales).\r\n    uint256 public s_totalBankValueUSD;\r\n\r\n    /// @notice Cantidad de depositos que se realizaron en el contrato.\r\n    uint256 public s_depositCount; \r\n\r\n    /// @notice Cantidad de retiros que se realizaron en el contrato.\r\n    uint256 public s_withdrawalCount; \r\n\r\n    /// @notice Mapping anidado para la contabilidad multi-token.\r\n    /// @dev (tokenAddress => userAddress => balance)\r\n    mapping(address => mapping(address => uint256)) public s_balances;\r\n\r\n    /// @notice Mapping para almacenar la configuracion (price feed y decimales) de cada token permitido.\r\n    mapping(address => TokenConfig) public s_tokenConfig;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                                EVENTOS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    event Deposited(\r\n        address indexed user,\r\n        address indexed token,\r\n        uint256 amount,\r\n        uint256 valueUSD\r\n    );\r\n    event Withdrawn(\r\n        address indexed user,\r\n        address indexed token,\r\n        uint256 amount,\r\n        uint256 valueUSD\r\n    );\r\n    event TokenAllowed(\r\n        address indexed token,\r\n        address indexed priceFeed,\r\n        uint8 decimals\r\n    );\r\n    event TokenPriceFeedUpdated(\r\n        address indexed token,\r\n        address indexed newPriceFeed\r\n    );\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                                ERRORES\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    error KipuBank__ZeroAmount();\r\n    error KipuBank__TokenNotAllowed(address token);\r\n    error KipuBank__InvalidPriceFeed(address priceFeed);\r\n    error KipuBank__BankCapExceeded(\r\n        uint256 currentBalanceUSD,\r\n        uint256 depositValueUSD,\r\n        uint256 capUSD\r\n    );\r\n    error KipuBank__WithdrawLimitExceeded(\r\n        uint256 withdrawValueUSD,\r\n        uint256 limitUSD\r\n    );\r\n    error KipuBank__InsufficientBalance(\r\n        uint256 requiredAmount,\r\n        uint256 availableAmount\r\n    );\r\n    error KipuBank__TransferFailed();\r\n    error KipuBank__MustUseDepositEth();\r\n    error KipuBank__FallbackNotAllowed();\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            MODIFICADORES\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @dev Modificador que asegura que el valor del parametro no es cero.\r\n    modifier nonZeroAmount(uint256 _amount) {\r\n        if (_amount == 0) revert KipuBank__ZeroAmount();\r\n        _;\r\n    }\r\n\r\n    /// @dev Modificador que asegura que el msg.value no es cero.\r\n    modifier nonZeroValue() {\r\n        if (msg.value == 0) revert KipuBank__ZeroAmount();\r\n        _;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                                CONSTRUCTOR\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /**\r\n     * @param _bankCapUSD Limite de capitalizacion del banco en USD.\r\n     * @param _withdrawalLimitUSD Limite de retiro por tx en USD.\r\n     * @param _ethUsdPriceFeed Direccion del oraculo ETH/USD de Chainlink.\r\n     */\r\n    constructor(\r\n        uint256 _bankCapUSD,\r\n        uint256 _withdrawalLimitUSD,\r\n        address _ethUsdPriceFeed\r\n    ) Ownable(msg.sender) {\r\n        if (_ethUsdPriceFeed == address(0)) {\r\n            revert KipuBank__InvalidPriceFeed(_ethUsdPriceFeed);\r\n        }\r\n\r\n        i_bankCapUSD = _bankCapUSD;\r\n        i_withdrawalLimitUSD = _withdrawalLimitUSD;\r\n\r\n        // Configurar ETH como primer token permitido\r\n        s_tokenConfig[ETH_ADDRESS] = TokenConfig({\r\n            priceFeed: _ethUsdPriceFeed,\r\n            decimals: 18 // ETH siempre tiene 18 decimales\r\n        });\r\n        emit TokenAllowed(ETH_ADDRESS, _ethUsdPriceFeed, 18);\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            FUNCIONES CORE\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /**\r\n     * @notice Permite a un usuario depositar Ether nativo.\r\n     * @dev Usa `msg.value` como la cantidad a depositar.\r\n     */\r\n    function depositEth() external payable nonZeroValue { \r\n        _handleDeposit(ETH_ADDRESS, msg.value);\r\n    }\r\n\r\n    /**\r\n     * @notice Permite a un usuario depositar tokens ERC-20 permitidos.\r\n     * @dev El usuario debe haber aprobado al contrato previamente.\r\n     * @param _token La direccion del contrato ERC-20.\r\n     * @param _amount La cantidad de tokens a depositar (en la unidad mas pequeña del token).\r\n     */\r\n    function depositToken(address _token, uint256 _amount) external nonZeroAmount(_amount) { \r\n        if (_token == ETH_ADDRESS) revert KipuBank__MustUseDepositEth();\r\n        _handleDeposit(_token, _amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Logica interna unificada para depositos.\r\n     */\r\n    function _handleDeposit(address _token, uint256 _amount) private {\r\n        // --- Checks ---\r\n        // El check de ZeroAmount es manejado por los modificadores en las funciones públicas\r\n        _checkTokenAllowed(_token);\r\n\r\n        uint256 depositValueUSD = getTokenValueUSD(_token, _amount);\r\n        uint256 newTotalBankValueUSD = s_totalBankValueUSD + depositValueUSD;\r\n\r\n        if (newTotalBankValueUSD > i_bankCapUSD) {\r\n            revert KipuBank__BankCapExceeded(\r\n                s_totalBankValueUSD,\r\n                depositValueUSD,\r\n                i_bankCapUSD\r\n            );\r\n        }\r\n\r\n        // --- Effects ---\r\n        s_balances[_token][msg.sender] += _amount;\r\n        s_totalBankValueUSD = newTotalBankValueUSD;\r\n        s_depositCount++; // <- AÑADIDO (Requisito Examen)\r\n\r\n        // --- Interactions ---\r\n        if (_token != ETH_ADDRESS) {\r\n            IERC20(_token).safeTransferFrom(\r\n                msg.sender,\r\n                address(this),\r\n                _amount\r\n            );\r\n        }\r\n\r\n        emit Deposited(msg.sender, _token, _amount, depositValueUSD);\r\n    }\r\n\r\n    /**\r\n     * @notice Permite a un usuario retirar sus fondos (Ether o ERC-20).\r\n     * @param _token La direccion del token a retirar (usar `address(0)` para ETH).\r\n     * @param _amount La cantidad a retirar (en la unidad mas pequeña del token).\r\n     */\r\n    function withdraw(address _token, uint256 _amount) external nonZeroAmount(_amount) {\r\n        // --- Checks ---\r\n        // El check de ZeroAmount es manejado por el modificador\r\n        _checkTokenAllowed(_token);\r\n\r\n        uint256 userBalance = s_balances[_token][msg.sender];\r\n        if (_amount > userBalance) {\r\n            revert KipuBank__InsufficientBalance(_amount, userBalance);\r\n        }\r\n\r\n        uint256 withdrawValueUSD = getTokenValueUSD(_token, _amount);\r\n        if (withdrawValueUSD > i_withdrawalLimitUSD) {\r\n            revert KipuBank__WithdrawLimitExceeded(\r\n                withdrawValueUSD,\r\n                i_withdrawalLimitUSD\r\n            );\r\n        }\r\n\r\n        // --- Effects (Checks-Effects-Interactions) ---\r\n        s_balances[_token][msg.sender] = userBalance - _amount;\r\n        s_totalBankValueUSD -= withdrawValueUSD;\r\n        s_withdrawalCount++; \r\n\r\n        // --- Interactions ---\r\n        if (_token == ETH_ADDRESS) {\r\n            (bool success, ) = msg.sender.call{value: _amount}(\"\");\r\n            if (!success) revert KipuBank__TransferFailed();\r\n        } else {\r\n            IERC20(_token).safeTransfer(msg.sender, _amount);\r\n        }\r\n\r\n        emit Withdrawn(msg.sender, _token, _amount, withdrawValueUSD);\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                        FUNCIONES DE CONVERSIÓN Y VISTA\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /**\r\n     * @notice Funcion de conversion de valor. Obtiene el valor en USD de una cantidad de token.\r\n     * @param _token La direccion del token.\r\n     * @param _amount La cantidad del token.\r\n     * @return valueUSD El valor equivalente en USD (con 8 decimales).\r\n     */\r\n    function getTokenValueUSD(\r\n        address _token,\r\n        uint256 _amount\r\n    ) public view returns (uint256) {\r\n        if (_amount == 0) return 0;\r\n\r\n        TokenConfig memory config = s_tokenConfig[_token];\r\n        if (config.priceFeed == address(0)) {\r\n            revert KipuBank__TokenNotAllowed(_token);\r\n        }\r\n\r\n        // 1. Obtener el precio del oraculo\r\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(config.priceFeed);\r\n        (, int256 price, , , ) = priceFeed.latestRoundData(); // Precio tiene 8 decimales\r\n\r\n        // 2. Convertir\r\n        // (amount * price) / 10**tokenDecimals\r\n        // El resultado ya queda expresado en USD con 8 decimales.\r\n        return\r\n            (_amount * uint256(price)) / (10**uint256(config.decimals));\r\n    }\r\n\r\n    /**\r\n     * @notice Obtiene el saldo de un usuario para un token especifico.\r\n     */\r\n    function getBalance(\r\n        address _token,\r\n        address _user\r\n    ) external view returns (uint256) {\r\n        return s_balances[_token][_user];\r\n    }\r\n\r\n    /**\r\n     * @notice Obtiene la configuracion de un token permitido.\r\n     */\r\n    function getTokenConfig(\r\n        address _token\r\n    ) external view returns (TokenConfig memory) {\r\n        return s_tokenConfig[_token];\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                        FUNCIONES DE CONTROL DE ACCESO\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /**\r\n     * @notice (Owner) Permite un nuevo token ERC-20 en el banco.\r\n     * @param _token La direccion del contrato ERC-20.\r\n     * @param _priceFeed La direccion del oraculo de precio.\r\n     * @param _decimals Los decimales del token.\r\n     */\r\n    function allowToken(\r\n        address _token,\r\n        address _priceFeed,\r\n        uint8 _decimals\r\n    ) external onlyOwner {\r\n        if (_token == ETH_ADDRESS) revert KipuBank__TokenNotAllowed(_token);\r\n        if (_priceFeed == address(0)) {\r\n            revert KipuBank__InvalidPriceFeed(_priceFeed);\r\n        }\r\n\r\n        s_tokenConfig[_token] = TokenConfig({\r\n            priceFeed: _priceFeed,\r\n            decimals: _decimals\r\n        });\r\n        emit TokenAllowed(_token, _priceFeed, _decimals);\r\n    }\r\n\r\n    /**\r\n     * @notice (Owner) Actualiza el oraculo de un token.\r\n     */\r\n    function updateTokenPriceFeed(\r\n        address _token,\r\n        address _newPriceFeed\r\n    ) external onlyOwner {\r\n        _checkTokenAllowed(_token);\r\n        if (_newPriceFeed == address(0)) {\r\n            revert KipuBank__InvalidPriceFeed(_newPriceFeed);\r\n        }\r\n\r\n        s_tokenConfig[_token].priceFeed = _newPriceFeed;\r\n        emit TokenPriceFeedUpdated(_token, _newPriceFeed);\r\n    }\r\n\r\n    /**\r\n     * @notice (Owner) Permite retirar fondos de emergencia.\r\n     * @dev No actualiza `s_totalBankValueUSD` intencionalmente, ya que es una funcion de emergencia.\r\n     */\r\n    function emergencyWithdraw(address _token, uint256 _amount) external onlyOwner {\r\n        if (_token == ETH_ADDRESS) {\r\n            (bool success, ) = msg.sender.call{value: _amount}(\"\");\r\n            if (!success) revert KipuBank__TransferFailed();\r\n        } else {\r\n            IERC20(_token).safeTransfer(msg.sender, _amount);\r\n        }\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            HELPERS INTERNOS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /**\r\n     * @dev Revisa si un token esta permitido (tiene un oraculo configurado).\r\n     */\r\n    function _checkTokenAllowed(address _token) private view {\r\n        if (s_tokenConfig[_token].priceFeed == address(0)) {\r\n            revert KipuBank__TokenNotAllowed(_token);\r\n        }\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            RECEIVE / FALLBACK\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /**\r\n     * @notice Permite depositos de ETH directos (sin llamar a `depositEth`).\r\n     */\r\n    receive() external payable nonZeroValue { \r\n        _handleDeposit(ETH_ADDRESS, msg.value);\r\n    }\r\n\r\n    /**\r\n     * @notice Rechaza cualquier llamada a funcion desconocida.\r\n     */\r\n    fallback() external payable {\r\n        revert KipuBank__FallbackNotAllowed();\r\n    }\r\n}"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/kipu-bankV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/kipu-bankV2.sol": {
				"KipuBank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bankCapUSD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_withdrawalLimitUSD",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_ethUsdPriceFeed",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "currentBalanceUSD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "depositValueUSD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "capUSD",
									"type": "uint256"
								}
							],
							"name": "KipuBank__BankCapExceeded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "KipuBank__FallbackNotAllowed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requiredAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableAmount",
									"type": "uint256"
								}
							],
							"name": "KipuBank__InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "priceFeed",
									"type": "address"
								}
							],
							"name": "KipuBank__InvalidPriceFeed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "KipuBank__MustUseDepositEth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "KipuBank__TokenNotAllowed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "KipuBank__TransferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "withdrawValueUSD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "limitUSD",
									"type": "uint256"
								}
							],
							"name": "KipuBank__WithdrawLimitExceeded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "KipuBank__ZeroAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "valueUSD",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "priceFeed",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"name": "TokenAllowed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newPriceFeed",
									"type": "address"
								}
							],
							"name": "TokenPriceFeedUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "valueUSD",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "ETH_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USD_DECIMALS",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USD_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeed",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "_decimals",
									"type": "uint8"
								}
							],
							"name": "allowToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositEth",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depositToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "getTokenConfig",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "priceFeed",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										}
									],
									"internalType": "struct KipuBank.TokenConfig",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getTokenValueUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "i_bankCapUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "i_withdrawalLimitUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_depositCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_tokenConfig",
							"outputs": [
								{
									"internalType": "address",
									"name": "priceFeed",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_totalBankValueUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_withdrawalCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_newPriceFeed",
									"type": "address"
								}
							],
							"name": "updateTokenPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "Facundo Criado",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"allowToken(address,address,uint8)": {
								"params": {
									"_decimals": "Los decimales del token.",
									"_priceFeed": "La direccion del oraculo de precio.",
									"_token": "La direccion del contrato ERC-20."
								}
							},
							"constructor": {
								"params": {
									"_bankCapUSD": "Limite de capitalizacion del banco en USD.",
									"_ethUsdPriceFeed": "Direccion del oraculo ETH/USD de Chainlink.",
									"_withdrawalLimitUSD": "Limite de retiro por tx en USD."
								}
							},
							"depositEth()": {
								"details": "Usa `msg.value` como la cantidad a depositar."
							},
							"depositToken(address,uint256)": {
								"details": "El usuario debe haber aprobado al contrato previamente.",
								"params": {
									"_amount": "La cantidad de tokens a depositar (en la unidad mas pequeña del token).",
									"_token": "La direccion del contrato ERC-20."
								}
							},
							"emergencyWithdraw(address,uint256)": {
								"details": "No actualiza `s_totalBankValueUSD` intencionalmente, ya que es una funcion de emergencia."
							},
							"getTokenValueUSD(address,uint256)": {
								"params": {
									"_amount": "La cantidad del token.",
									"_token": "La direccion del token."
								},
								"returns": {
									"_0": "valueUSD El valor equivalente en USD (con 8 decimales)."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address,uint256)": {
								"params": {
									"_amount": "La cantidad a retirar (en la unidad mas pequeña del token).",
									"_token": "La direccion del token a retirar (usar `address(0)` para ETH)."
								}
							}
						},
						"stateVariables": {
							"s_balances": {
								"details": "(tokenAddress => userAddress => balance)"
							}
						},
						"title": "Contrato bancario",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/kipu-bankV2.sol\":384:14368  contract KipuBank is Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/kipu-bankV2.sol\":5187:5840  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/kipu-bankV2.sol\":5317:5327  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/kipu-bankV2.sol\":5372:5373  0 */\n  0x00\n    /* \"contracts/kipu-bankV2.sol\":5344:5374  _ethUsdPriceFeed == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/kipu-bankV2.sol\":5344:5360  _ethUsdPriceFeed */\n  dup2\n    /* \"contracts/kipu-bankV2.sol\":5344:5374  _ethUsdPriceFeed == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/kipu-bankV2.sol\":5340:5454  if (_ethUsdPriceFeed == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"contracts/kipu-bankV2.sol\":5425:5441  _ethUsdPriceFeed */\n  dup1\n    /* \"contracts/kipu-bankV2.sol\":5398:5442  KipuBank__InvalidPriceFeed(_ethUsdPriceFeed) */\n  mload(0x40)\n  0x18378d8c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/kipu-bankV2.sol\":5340:5454  if (_ethUsdPriceFeed == address(0)) {... */\ntag_13:\n    /* \"contracts/kipu-bankV2.sol\":5481:5492  _bankCapUSD */\n  dup3\n    /* \"contracts/kipu-bankV2.sol\":5466:5492  i_bankCapUSD = _bankCapUSD */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/kipu-bankV2.sol\":5526:5545  _withdrawalLimitUSD */\n  dup2\n    /* \"contracts/kipu-bankV2.sol\":5503:5545  i_withdrawalLimitUSD = _withdrawalLimitUSD */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/kipu-bankV2.sol\":5642:5769  TokenConfig({... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/kipu-bankV2.sol\":5680:5696  _ethUsdPriceFeed */\n  dup3\n    /* \"contracts/kipu-bankV2.sol\":5642:5769  TokenConfig({... */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/kipu-bankV2.sol\":5721:5723  18 */\n  0x12\n    /* \"contracts/kipu-bankV2.sol\":5642:5769  TokenConfig({... */\n  0xff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/kipu-bankV2.sol\":5613:5626  s_tokenConfig */\n  0x05\n    /* \"contracts/kipu-bankV2.sol\":5613:5639  s_tokenConfig[ETH_ADDRESS] */\n  0x00\n    /* \"contracts/kipu-bankV2.sol\":1243:1244  0 */\n  0x00\n    /* \"contracts/kipu-bankV2.sol\":5613:5639  s_tokenConfig[ETH_ADDRESS] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/kipu-bankV2.sol\":5613:5769  s_tokenConfig[ETH_ADDRESS] = TokenConfig({... */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap1\n  pop\n  pop\n    /* \"contracts/kipu-bankV2.sol\":5811:5827  _ethUsdPriceFeed */\n  dup1\n    /* \"contracts/kipu-bankV2.sol\":5785:5832  TokenAllowed(ETH_ADDRESS, _ethUsdPriceFeed, 18) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/kipu-bankV2.sol\":1243:1244  0 */\n  0x00\n    /* \"contracts/kipu-bankV2.sol\":5785:5832  TokenAllowed(ETH_ADDRESS, _ethUsdPriceFeed, 18) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x6d28000829e988111dfd4f9075c2dc3f734e48013bc94e9ffbc8e523687314d7\n    /* \"contracts/kipu-bankV2.sol\":5829:5831  18 */\n  0x12\n    /* \"contracts/kipu-bankV2.sol\":5785:5832  TokenAllowed(ETH_ADDRESS, _ethUsdPriceFeed, 18) */\n  mload(0x40)\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/kipu-bankV2.sol\":5187:5840  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/kipu-bankV2.sol\":384:14368  contract KipuBank is Ownable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_20:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_22:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_23:\n    /* \"#utility.yul\":490:514   */\n  tag_41\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_42:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_24:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_44\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_23\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_25:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_26:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_47\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_25\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_27:\n    /* \"#utility.yul\":1001:1025   */\n  tag_49\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_26\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_50:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_28:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_52\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_27\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  0x00\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_55\n  tag_20\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1326:1445   */\ntag_54:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_56\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_57\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_24\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_58\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_28\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1992   */\ntag_29:\n    /* \"#utility.yul\":1961:1985   */\n  tag_60\n    /* \"#utility.yul\":1979:1984   */\n  dup2\n    /* \"#utility.yul\":1961:1985   */\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1956:1959   */\n  dup3\n    /* \"#utility.yul\":1949:1986   */\n  mstore\n    /* \"#utility.yul\":1874:1992   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1998:2220   */\ntag_9:\n    /* \"#utility.yul\":2091:2095   */\n  0x00\n    /* \"#utility.yul\":2129:2131   */\n  0x20\n    /* \"#utility.yul\":2118:2127   */\n  dup3\n    /* \"#utility.yul\":2114:2132   */\n  add\n    /* \"#utility.yul\":2106:2132   */\n  swap1\n  pop\n    /* \"#utility.yul\":2142:2213   */\n  tag_62\n    /* \"#utility.yul\":2210:2211   */\n  0x00\n    /* \"#utility.yul\":2199:2208   */\n  dup4\n    /* \"#utility.yul\":2195:2212   */\n  add\n    /* \"#utility.yul\":2186:2192   */\n  dup5\n    /* \"#utility.yul\":2142:2213   */\n  tag_29\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1998:2220   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2226:2312   */\ntag_30:\n    /* \"#utility.yul\":2272:2279   */\n  0x00\n    /* \"#utility.yul\":2301:2306   */\n  dup2\n    /* \"#utility.yul\":2290:2306   */\n  swap1\n  pop\n    /* \"#utility.yul\":2226:2312   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2318:2404   */\ntag_31:\n    /* \"#utility.yul\":2353:2360   */\n  0x00\n    /* \"#utility.yul\":2393:2397   */\n  0xff\n    /* \"#utility.yul\":2386:2391   */\n  dup3\n    /* \"#utility.yul\":2382:2398   */\n  and\n    /* \"#utility.yul\":2371:2398   */\n  swap1\n  pop\n    /* \"#utility.yul\":2318:2404   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2410:2470   */\ntag_32:\n    /* \"#utility.yul\":2438:2441   */\n  0x00\n    /* \"#utility.yul\":2459:2464   */\n  dup2\n    /* \"#utility.yul\":2452:2464   */\n  swap1\n  pop\n    /* \"#utility.yul\":2410:2470   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2476:2632   */\ntag_33:\n    /* \"#utility.yul\":2533:2542   */\n  0x00\n    /* \"#utility.yul\":2566:2626   */\n  tag_67\n    /* \"#utility.yul\":2582:2625   */\n  tag_68\n    /* \"#utility.yul\":2591:2624   */\n  tag_69\n    /* \"#utility.yul\":2618:2623   */\n  dup5\n    /* \"#utility.yul\":2591:2624   */\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2582:2625   */\n  tag_32\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2566:2626   */\n  tag_31\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2553:2626   */\n  swap1\n  pop\n    /* \"#utility.yul\":2476:2632   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2638:2783   */\ntag_34:\n    /* \"#utility.yul\":2732:2776   */\n  tag_71\n    /* \"#utility.yul\":2770:2775   */\n  dup2\n    /* \"#utility.yul\":2732:2776   */\n  tag_33\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2727:2730   */\n  dup3\n    /* \"#utility.yul\":2720:2777   */\n  mstore\n    /* \"#utility.yul\":2638:2783   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2789:3025   */\ntag_16:\n    /* \"#utility.yul\":2889:2893   */\n  0x00\n    /* \"#utility.yul\":2927:2929   */\n  0x20\n    /* \"#utility.yul\":2916:2925   */\n  dup3\n    /* \"#utility.yul\":2912:2930   */\n  add\n    /* \"#utility.yul\":2904:2930   */\n  swap1\n  pop\n    /* \"#utility.yul\":2940:3018   */\n  tag_73\n    /* \"#utility.yul\":3015:3016   */\n  0x00\n    /* \"#utility.yul\":3004:3013   */\n  dup4\n    /* \"#utility.yul\":3000:3017   */\n  add\n    /* \"#utility.yul\":2991:2997   */\n  dup5\n    /* \"#utility.yul\":2940:3018   */\n  tag_34\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2789:3025   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/kipu-bankV2.sol\":384:14368  contract KipuBank is Ownable {... */\ntag_17:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0344bbb4e8632aa15d8a069bcbd225e8c78f94ca35b4d1de1da43fb9c1323e48\")\n  0x00\n  assignImmutable(\"0xf2290fd0e22f8570f68b7114eeb23b8e9ea5ade789a40d0e03867eea96c90726\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/kipu-bankV2.sol\":384:14368  contract KipuBank is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa734f06e\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xdccd58e3\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xdccd58e3\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xedd2f190\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xfc5c96ee\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xfee4aaeb\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0xa734f06e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb2343b1c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcac2e25f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xcb67e3b1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd4fac45d\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x4bfdfa6f\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x4bfdfa6f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6b251a0b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x82d2f5b1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95ccea67\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x0ccee433\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2a6daba3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f6ee695\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x338b5dea\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x439370b1\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/kipu-bankV2.sol\":4709:4710  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":4696:4705  msg.value */\n      callvalue\n        /* \"contracts/kipu-bankV2.sol\":4696:4710  msg.value == 0 */\n      sub\n        /* \"contracts/kipu-bankV2.sol\":4692:4741  if (msg.value == 0) revert KipuBank__ZeroAmount() */\n      tag_30\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":4719:4741  KipuBank__ZeroAmount() */\n      mload(0x40)\n      0x3f36295200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":4692:4741  if (msg.value == 0) revert KipuBank__ZeroAmount() */\n    tag_30:\n        /* \"contracts/kipu-bankV2.sol\":14144:14182  _handleDeposit(ETH_ADDRESS, msg.value) */\n      tag_32\n        /* \"contracts/kipu-bankV2.sol\":1243:1244  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":14172:14181  msg.value */\n      callvalue\n        /* \"contracts/kipu-bankV2.sol\":14144:14158  _handleDeposit */\n      tag_33\n        /* \"contracts/kipu-bankV2.sol\":14144:14182  _handleDeposit(ETH_ADDRESS, msg.value) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/kipu-bankV2.sol\":384:14368  contract KipuBank is Ownable {... */\n      stop\n    tag_2:\n        /* \"contracts/kipu-bankV2.sol\":14327:14357  KipuBank__FallbackNotAllowed() */\n      mload(0x40)\n      0x9437e2a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":1771:1808  uint256 public immutable i_bankCapUSD */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/kipu-bankV2.sol\":10035:10825  function getTokenValueUSD(... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/kipu-bankV2.sol\":1332:1370  uint8 public constant USD_DECIMALS = 8 */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      revert(0x00, 0x00)\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/kipu-bankV2.sol\":6602:6814  function depositToken(address _token, uint256 _amount) external nonZeroAmount(_amount) { ... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      revert(0x00, 0x00)\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/kipu-bankV2.sol\":6172:6282  function depositEth() external payable nonZeroValue { ... */\n    tag_7:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/kipu-bankV2.sol\":1437:1493  uint256 public constant USD_PRECISION = 10**USD_DECIMALS */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      revert(0x00, 0x00)\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/kipu-bankV2.sol\":1893:1938  uint256 public immutable i_withdrawalLimitUSD */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      revert(0x00, 0x00)\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      revert(0x00, 0x00)\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/kipu-bankV2.sol\":12376:12772  function updateTokenPriceFeed(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      revert(0x00, 0x00)\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      revert(0x00, 0x00)\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/kipu-bankV2.sol\":12963:13311  function emergencyWithdraw(address _token, uint256 _amount) external onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      revert(0x00, 0x00)\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/kipu-bankV2.sol\":1197:1245  address public constant ETH_ADDRESS = address(0) */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      revert(0x00, 0x00)\n    tag_83:\n      pop\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/kipu-bankV2.sol\":2262:2294  uint256 public s_withdrawalCount */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      revert(0x00, 0x00)\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/kipu-bankV2.sol\":2152:2181  uint256 public s_depositCount */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      revert(0x00, 0x00)\n    tag_91:\n      pop\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/kipu-bankV2.sol\":11173:11319  function getTokenConfig(... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      revert(0x00, 0x00)\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/kipu-bankV2.sol\":10924:11083  function getBalance(... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      revert(0x00, 0x00)\n    tag_102:\n      pop\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/kipu-bankV2.sol\":2426:2491  mapping(address => mapping(address => uint256)) public s_balances */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      revert(0x00, 0x00)\n    tag_107:\n      pop\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/kipu-bankV2.sol\":2036:2070  uint256 public s_totalBankValueUSD */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      revert(0x00, 0x00)\n    tag_112:\n      pop\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      revert(0x00, 0x00)\n    tag_116:\n      pop\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      stop\n        /* \"contracts/kipu-bankV2.sol\":8281:9547  function withdraw(address _token, uint256 _amount) external nonZeroAmount(_amount) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      revert(0x00, 0x00)\n    tag_120:\n      pop\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      stop\n        /* \"contracts/kipu-bankV2.sol\":2607:2659  mapping(address => TokenConfig) public s_tokenConfig */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      revert(0x00, 0x00)\n    tag_124:\n      pop\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_128\n      swap3\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/kipu-bankV2.sol\":11778:12292  function allowToken(... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      revert(0x00, 0x00)\n    tag_130:\n      pop\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      tag_134\n      jump\t// in\n    tag_131:\n      stop\n        /* \"contracts/kipu-bankV2.sol\":6897:8012  function _handleDeposit(address _token, uint256 _amount) private {... */\n    tag_33:\n        /* \"contracts/kipu-bankV2.sol\":7096:7122  _checkTokenAllowed(_token) */\n      tag_136\n        /* \"contracts/kipu-bankV2.sol\":7115:7121  _token */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":7096:7114  _checkTokenAllowed */\n      tag_137\n        /* \"contracts/kipu-bankV2.sol\":7096:7122  _checkTokenAllowed(_token) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/kipu-bankV2.sol\":7135:7158  uint256 depositValueUSD */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":7161:7194  getTokenValueUSD(_token, _amount) */\n      tag_138\n        /* \"contracts/kipu-bankV2.sol\":7178:7184  _token */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":7186:7193  _amount */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":7161:7177  getTokenValueUSD */\n      tag_45\n        /* \"contracts/kipu-bankV2.sol\":7161:7194  getTokenValueUSD(_token, _amount) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/kipu-bankV2.sol\":7135:7194  uint256 depositValueUSD = getTokenValueUSD(_token, _amount) */\n      swap1\n      pop\n        /* \"contracts/kipu-bankV2.sol\":7205:7233  uint256 newTotalBankValueUSD */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":7258:7273  depositValueUSD */\n      dup2\n        /* \"contracts/kipu-bankV2.sol\":7236:7255  s_totalBankValueUSD */\n      sload(0x01)\n        /* \"contracts/kipu-bankV2.sol\":7236:7273  s_totalBankValueUSD + depositValueUSD */\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"contracts/kipu-bankV2.sol\":7205:7273  uint256 newTotalBankValueUSD = s_totalBankValueUSD + depositValueUSD */\n      swap1\n      pop\n        /* \"contracts/kipu-bankV2.sol\":7313:7325  i_bankCapUSD */\n      immutable(\"0xf2290fd0e22f8570f68b7114eeb23b8e9ea5ade789a40d0e03867eea96c90726\")\n        /* \"contracts/kipu-bankV2.sol\":7290:7310  newTotalBankValueUSD */\n      dup2\n        /* \"contracts/kipu-bankV2.sol\":7290:7325  newTotalBankValueUSD > i_bankCapUSD */\n      gt\n        /* \"contracts/kipu-bankV2.sol\":7286:7504  if (newTotalBankValueUSD > i_bankCapUSD) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":7393:7412  s_totalBankValueUSD */\n      sload(0x01)\n        /* \"contracts/kipu-bankV2.sol\":7431:7446  depositValueUSD */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":7465:7477  i_bankCapUSD */\n      immutable(\"0xf2290fd0e22f8570f68b7114eeb23b8e9ea5ade789a40d0e03867eea96c90726\")\n        /* \"contracts/kipu-bankV2.sol\":7349:7492  KipuBank__BankCapExceeded(... */\n      mload(0x40)\n      0xc4a0472300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":7286:7504  if (newTotalBankValueUSD > i_bankCapUSD) {... */\n    tag_141:\n        /* \"contracts/kipu-bankV2.sol\":7578:7585  _amount */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":7544:7554  s_balances */\n      0x04\n        /* \"contracts/kipu-bankV2.sol\":7544:7562  s_balances[_token] */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":7555:7561  _token */\n      dup7\n        /* \"contracts/kipu-bankV2.sol\":7544:7562  s_balances[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/kipu-bankV2.sol\":7544:7574  s_balances[_token][msg.sender] */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":7563:7573  msg.sender */\n      caller\n        /* \"contracts/kipu-bankV2.sol\":7544:7574  s_balances[_token][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":7544:7585  s_balances[_token][msg.sender] += _amount */\n      dup3\n      dup3\n      sload\n      tag_144\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_144:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/kipu-bankV2.sol\":7618:7638  newTotalBankValueUSD */\n      dup1\n        /* \"contracts/kipu-bankV2.sol\":7596:7615  s_totalBankValueUSD */\n      0x01\n        /* \"contracts/kipu-bankV2.sol\":7596:7638  s_totalBankValueUSD = newTotalBankValueUSD */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/kipu-bankV2.sol\":7649:7663  s_depositCount */\n      0x02\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":7649:7665  s_depositCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/kipu-bankV2.sol\":1243:1244  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":7749:7770  _token != ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":7749:7755  _token */\n      dup5\n        /* \"contracts/kipu-bankV2.sol\":7749:7770  _token != ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/kipu-bankV2.sol\":7745:7932  if (_token != ETH_ADDRESS) {... */\n      tag_147\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":7787:7920  IERC20(_token).safeTransferFrom(... */\n      tag_148\n        /* \"contracts/kipu-bankV2.sol\":7837:7847  msg.sender */\n      caller\n        /* \"contracts/kipu-bankV2.sol\":7874:7878  this */\n      address\n        /* \"contracts/kipu-bankV2.sol\":7898:7905  _amount */\n      dup6\n        /* \"contracts/kipu-bankV2.sol\":7794:7800  _token */\n      dup8\n        /* \"contracts/kipu-bankV2.sol\":7787:7818  IERC20(_token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_149\n      swap1\n        /* \"contracts/kipu-bankV2.sol\":7787:7920  IERC20(_token).safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"contracts/kipu-bankV2.sol\":7745:7932  if (_token != ETH_ADDRESS) {... */\n    tag_147:\n        /* \"contracts/kipu-bankV2.sol\":7971:7977  _token */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":7949:8004  Deposited(msg.sender, _token, _amount, depositValueUSD) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":7959:7969  msg.sender */\n      caller\n        /* \"contracts/kipu-bankV2.sol\":7949:8004  Deposited(msg.sender, _token, _amount, depositValueUSD) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf5681f9d0db1b911ac18ee83d515a1cf1051853a9eae418316a2fdf7dea427c5\n        /* \"contracts/kipu-bankV2.sol\":7979:7986  _amount */\n      dup6\n        /* \"contracts/kipu-bankV2.sol\":7988:8003  depositValueUSD */\n      dup6\n        /* \"contracts/kipu-bankV2.sol\":7949:8004  Deposited(msg.sender, _token, _amount, depositValueUSD) */\n      mload(0x40)\n      tag_150\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/kipu-bankV2.sol\":6962:8012  {... */\n      pop\n      pop\n        /* \"contracts/kipu-bankV2.sol\":6897:8012  function _handleDeposit(address _token, uint256 _amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":1771:1808  uint256 public immutable i_bankCapUSD */\n    tag_38:\n      immutable(\"0xf2290fd0e22f8570f68b7114eeb23b8e9ea5ade789a40d0e03867eea96c90726\")\n      dup2\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":10035:10825  function getTokenValueUSD(... */\n    tag_45:\n        /* \"contracts/kipu-bankV2.sol\":10140:10147  uint256 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":10175:10176  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":10164:10171  _amount */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":10164:10176  _amount == 0 */\n      sub\n        /* \"contracts/kipu-bankV2.sol\":10160:10186  if (_amount == 0) return 0 */\n      tag_153\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":10185:10186  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":10178:10186  return 0 */\n      swap1\n      pop\n      jump(tag_152)\n        /* \"contracts/kipu-bankV2.sol\":10160:10186  if (_amount == 0) return 0 */\n    tag_153:\n        /* \"contracts/kipu-bankV2.sol\":10199:10224  TokenConfig memory config */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":10227:10240  s_tokenConfig */\n      0x05\n        /* \"contracts/kipu-bankV2.sol\":10227:10248  s_tokenConfig[_token] */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":10241:10247  _token */\n      dup6\n        /* \"contracts/kipu-bankV2.sol\":10227:10248  s_tokenConfig[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/kipu-bankV2.sol\":10199:10248  TokenConfig memory config = s_tokenConfig[_token] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/kipu-bankV2.sol\":10291:10292  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":10263:10293  config.priceFeed == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":10263:10269  config */\n      dup2\n        /* \"contracts/kipu-bankV2.sol\":10263:10279  config.priceFeed */\n      0x00\n      add\n      mload\n        /* \"contracts/kipu-bankV2.sol\":10263:10293  config.priceFeed == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/kipu-bankV2.sol\":10259:10362  if (config.priceFeed == address(0)) {... */\n      tag_154\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":10343:10349  _token */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":10317:10350  KipuBank__TokenNotAllowed(_token) */\n      mload(0x40)\n      0xfb21d4aa00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":10259:10362  if (config.priceFeed == address(0)) {... */\n    tag_154:\n        /* \"contracts/kipu-bankV2.sol\":10419:10450  AggregatorV3Interface priceFeed */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":10475:10481  config */\n      dup2\n        /* \"contracts/kipu-bankV2.sol\":10475:10491  config.priceFeed */\n      0x00\n      add\n      mload\n        /* \"contracts/kipu-bankV2.sol\":10419:10492  AggregatorV3Interface priceFeed = AggregatorV3Interface(config.priceFeed) */\n      swap1\n      pop\n        /* \"contracts/kipu-bankV2.sol\":10506:10518  int256 price */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":10528:10537  priceFeed */\n      dup2\n        /* \"contracts/kipu-bankV2.sol\":10528:10553  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/kipu-bankV2.sol\":10528:10555  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"contracts/kipu-bankV2.sol\":10503:10555  (, int256 price, , , ) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/kipu-bankV2.sol\":10800:10806  config */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":10800:10815  config.decimals */\n      0x20\n      add\n      mload\n        /* \"contracts/kipu-bankV2.sol\":10792:10816  uint256(config.decimals) */\n      0xff\n      and\n        /* \"contracts/kipu-bankV2.sol\":10788:10790  10 */\n      0x0a\n        /* \"contracts/kipu-bankV2.sol\":10788:10816  10**uint256(config.decimals) */\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"contracts/kipu-bankV2.sol\":10777:10782  price */\n      dup2\n        /* \"contracts/kipu-bankV2.sol\":10759:10766  _amount */\n      dup7\n        /* \"contracts/kipu-bankV2.sol\":10759:10783  _amount * uint256(price) */\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"contracts/kipu-bankV2.sol\":10758:10817  (_amount * uint256(price)) / (10**uint256(config.decimals)) */\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"contracts/kipu-bankV2.sol\":10738:10817  return... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/kipu-bankV2.sol\":10035:10825  function getTokenValueUSD(... */\n    tag_152:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":1332:1370  uint8 public constant USD_DECIMALS = 8 */\n    tag_49:\n        /* \"contracts/kipu-bankV2.sol\":1369:1370  8 */\n      0x08\n        /* \"contracts/kipu-bankV2.sol\":1332:1370  uint8 public constant USD_DECIMALS = 8 */\n      dup2\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":6602:6814  function depositToken(address _token, uint256 _amount) external nonZeroAmount(_amount) { ... */\n    tag_55:\n        /* \"contracts/kipu-bankV2.sol\":6680:6687  _amount */\n      dup1\n        /* \"contracts/kipu-bankV2.sol\":4530:4531  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":4519:4526  _amount */\n      dup2\n        /* \"contracts/kipu-bankV2.sol\":4519:4531  _amount == 0 */\n      sub\n        /* \"contracts/kipu-bankV2.sol\":4515:4562  if (_amount == 0) revert KipuBank__ZeroAmount() */\n      tag_167\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":4540:4562  KipuBank__ZeroAmount() */\n      mload(0x40)\n      0x3f36295200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":4515:4562  if (_amount == 0) revert KipuBank__ZeroAmount() */\n    tag_167:\n        /* \"contracts/kipu-bankV2.sol\":1243:1244  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":6705:6726  _token == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":6705:6711  _token */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":6705:6726  _token == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/kipu-bankV2.sol\":6701:6764  if (_token == ETH_ADDRESS) revert KipuBank__MustUseDepositEth() */\n      tag_169\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":6735:6764  KipuBank__MustUseDepositEth() */\n      mload(0x40)\n      0x633bfff400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":6701:6764  if (_token == ETH_ADDRESS) revert KipuBank__MustUseDepositEth() */\n    tag_169:\n        /* \"contracts/kipu-bankV2.sol\":6775:6806  _handleDeposit(_token, _amount) */\n      tag_170\n        /* \"contracts/kipu-bankV2.sol\":6790:6796  _token */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":6798:6805  _amount */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":6775:6789  _handleDeposit */\n      tag_33\n        /* \"contracts/kipu-bankV2.sol\":6775:6806  _handleDeposit(_token, _amount) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/kipu-bankV2.sol\":6602:6814  function depositToken(address _token, uint256 _amount) external nonZeroAmount(_amount) { ... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":6172:6282  function depositEth() external payable nonZeroValue { ... */\n    tag_57:\n        /* \"contracts/kipu-bankV2.sol\":4709:4710  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":4696:4705  msg.value */\n      callvalue\n        /* \"contracts/kipu-bankV2.sol\":4696:4710  msg.value == 0 */\n      sub\n        /* \"contracts/kipu-bankV2.sol\":4692:4741  if (msg.value == 0) revert KipuBank__ZeroAmount() */\n      tag_172\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":4719:4741  KipuBank__ZeroAmount() */\n      mload(0x40)\n      0x3f36295200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":4692:4741  if (msg.value == 0) revert KipuBank__ZeroAmount() */\n    tag_172:\n        /* \"contracts/kipu-bankV2.sol\":6236:6274  _handleDeposit(ETH_ADDRESS, msg.value) */\n      tag_174\n        /* \"contracts/kipu-bankV2.sol\":1243:1244  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":6264:6273  msg.value */\n      callvalue\n        /* \"contracts/kipu-bankV2.sol\":6236:6250  _handleDeposit */\n      tag_33\n        /* \"contracts/kipu-bankV2.sol\":6236:6274  _handleDeposit(ETH_ADDRESS, msg.value) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/kipu-bankV2.sol\":6172:6282  function depositEth() external payable nonZeroValue { ... */\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":1437:1493  uint256 public constant USD_PRECISION = 10**USD_DECIMALS */\n    tag_60:\n        /* \"contracts/kipu-bankV2.sol\":1369:1370  8 */\n      0x08\n        /* \"contracts/kipu-bankV2.sol\":1477:1479  10 */\n      0x0a\n        /* \"contracts/kipu-bankV2.sol\":1477:1493  10**USD_DECIMALS */\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"contracts/kipu-bankV2.sol\":1437:1493  uint256 public constant USD_PRECISION = 10**USD_DECIMALS */\n      dup2\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":1893:1938  uint256 public immutable i_withdrawalLimitUSD */\n    tag_64:\n      immutable(\"0x0344bbb4e8632aa15d8a069bcbd225e8c78f94ca35b4d1de1da43fb9c1323e48\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":12376:12772  function updateTokenPriceFeed(... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/kipu-bankV2.sol\":12500:12526  _checkTokenAllowed(_token) */\n      tag_186\n        /* \"contracts/kipu-bankV2.sol\":12519:12525  _token */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":12500:12518  _checkTokenAllowed */\n      tag_137\n        /* \"contracts/kipu-bankV2.sol\":12500:12526  _checkTokenAllowed(_token) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/kipu-bankV2.sol\":12566:12567  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":12541:12568  _newPriceFeed == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":12541:12554  _newPriceFeed */\n      dup2\n        /* \"contracts/kipu-bankV2.sol\":12541:12568  _newPriceFeed == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/kipu-bankV2.sol\":12537:12645  if (_newPriceFeed == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":12619:12632  _newPriceFeed */\n      dup1\n        /* \"contracts/kipu-bankV2.sol\":12592:12633  KipuBank__InvalidPriceFeed(_newPriceFeed) */\n      mload(0x40)\n      0x18378d8c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":12537:12645  if (_newPriceFeed == address(0)) {... */\n    tag_187:\n        /* \"contracts/kipu-bankV2.sol\":12691:12704  _newPriceFeed */\n      dup1\n        /* \"contracts/kipu-bankV2.sol\":12657:12670  s_tokenConfig */\n      0x05\n        /* \"contracts/kipu-bankV2.sol\":12657:12678  s_tokenConfig[_token] */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":12671:12677  _token */\n      dup5\n        /* \"contracts/kipu-bankV2.sol\":12657:12678  s_tokenConfig[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/kipu-bankV2.sol\":12657:12688  s_tokenConfig[_token].priceFeed */\n      0x00\n      add\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":12657:12704  s_tokenConfig[_token].priceFeed = _newPriceFeed */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/kipu-bankV2.sol\":12750:12763  _newPriceFeed */\n      dup1\n        /* \"contracts/kipu-bankV2.sol\":12720:12764  TokenPriceFeedUpdated(_token, _newPriceFeed) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":12742:12748  _token */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":12720:12764  TokenPriceFeedUpdated(_token, _newPriceFeed) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbdc29f691f539931aac0eb61b6040016944303cd36b1493f9bc5d3f74e10c8e2\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/kipu-bankV2.sol\":12376:12772  function updateTokenPriceFeed(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":12963:13311  function emergencyWithdraw(address _token, uint256 _amount) external onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/kipu-bankV2.sol\":1243:1244  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":13057:13078  _token == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":13057:13063  _token */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":13057:13078  _token == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/kipu-bankV2.sol\":13053:13304  if (_token == ETH_ADDRESS) {... */\n      tag_193\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":13096:13108  bool success */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":13114:13124  msg.sender */\n      caller\n        /* \"contracts/kipu-bankV2.sol\":13114:13129  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":13137:13144  _amount */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":13114:13149  msg.sender.call{value: _amount}(\"\") */\n      mload(0x40)\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_198\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_197)\n    tag_198:\n      0x60\n      swap2\n      pop\n    tag_197:\n      pop\n        /* \"contracts/kipu-bankV2.sol\":13095:13149  (bool success, ) = msg.sender.call{value: _amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/kipu-bankV2.sol\":13169:13176  success */\n      dup1\n        /* \"contracts/kipu-bankV2.sol\":13164:13211  if (!success) revert KipuBank__TransferFailed() */\n      tag_199\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":13185:13211  KipuBank__TransferFailed() */\n      mload(0x40)\n      0x2ae871a500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":13164:13211  if (!success) revert KipuBank__TransferFailed() */\n    tag_199:\n        /* \"contracts/kipu-bankV2.sol\":13080:13223  {... */\n      pop\n        /* \"contracts/kipu-bankV2.sol\":13053:13304  if (_token == ETH_ADDRESS) {... */\n      jump(tag_200)\n    tag_193:\n        /* \"contracts/kipu-bankV2.sol\":13244:13292  IERC20(_token).safeTransfer(msg.sender, _amount) */\n      tag_201\n        /* \"contracts/kipu-bankV2.sol\":13272:13282  msg.sender */\n      caller\n        /* \"contracts/kipu-bankV2.sol\":13284:13291  _amount */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":13251:13257  _token */\n      dup5\n        /* \"contracts/kipu-bankV2.sol\":13244:13271  IERC20(_token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_202\n      swap1\n        /* \"contracts/kipu-bankV2.sol\":13244:13292  IERC20(_token).safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"contracts/kipu-bankV2.sol\":13053:13304  if (_token == ETH_ADDRESS) {... */\n    tag_200:\n        /* \"contracts/kipu-bankV2.sol\":12963:13311  function emergencyWithdraw(address _token, uint256 _amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":1197:1245  address public constant ETH_ADDRESS = address(0) */\n    tag_85:\n        /* \"contracts/kipu-bankV2.sol\":1243:1244  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":1197:1245  address public constant ETH_ADDRESS = address(0) */\n      dup2\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":2262:2294  uint256 public s_withdrawalCount */\n    tag_89:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":2152:2181  uint256 public s_depositCount */\n    tag_93:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":11173:11319  function getTokenConfig(... */\n    tag_99:\n        /* \"contracts/kipu-bankV2.sol\":11252:11270  TokenConfig memory */\n      tag_203\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"contracts/kipu-bankV2.sol\":11290:11303  s_tokenConfig */\n      0x05\n        /* \"contracts/kipu-bankV2.sol\":11290:11311  s_tokenConfig[_token] */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":11304:11310  _token */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":11290:11311  s_tokenConfig[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/kipu-bankV2.sol\":11283:11311  return s_tokenConfig[_token] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/kipu-bankV2.sol\":11173:11319  function getTokenConfig(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":10924:11083  function getBalance(... */\n    tag_105:\n        /* \"contracts/kipu-bankV2.sol\":11023:11030  uint256 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":11050:11060  s_balances */\n      0x04\n        /* \"contracts/kipu-bankV2.sol\":11050:11068  s_balances[_token] */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":11061:11067  _token */\n      dup5\n        /* \"contracts/kipu-bankV2.sol\":11050:11068  s_balances[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/kipu-bankV2.sol\":11050:11075  s_balances[_token][_user] */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":11069:11074  _user */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":11050:11075  s_balances[_token][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/kipu-bankV2.sol\":11043:11075  return s_balances[_token][_user] */\n      swap1\n      pop\n        /* \"contracts/kipu-bankV2.sol\":10924:11083  function getBalance(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":2426:2491  mapping(address => mapping(address => uint256)) public s_balances */\n    tag_110:\n      mstore(0x20, 0x04)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":2036:2070  uint256 public s_totalBankValueUSD */\n    tag_114:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":8281:9547  function withdraw(address _token, uint256 _amount) external nonZeroAmount(_amount) {... */\n    tag_123:\n        /* \"contracts/kipu-bankV2.sol\":8355:8362  _amount */\n      dup1\n        /* \"contracts/kipu-bankV2.sol\":4530:4531  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":4519:4526  _amount */\n      dup2\n        /* \"contracts/kipu-bankV2.sol\":4519:4531  _amount == 0 */\n      sub\n        /* \"contracts/kipu-bankV2.sol\":4515:4562  if (_amount == 0) revert KipuBank__ZeroAmount() */\n      tag_214\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":4540:4562  KipuBank__ZeroAmount() */\n      mload(0x40)\n      0x3f36295200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":4515:4562  if (_amount == 0) revert KipuBank__ZeroAmount() */\n    tag_214:\n        /* \"contracts/kipu-bankV2.sol\":8468:8494  _checkTokenAllowed(_token) */\n      tag_216\n        /* \"contracts/kipu-bankV2.sol\":8487:8493  _token */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":8468:8486  _checkTokenAllowed */\n      tag_137\n        /* \"contracts/kipu-bankV2.sol\":8468:8494  _checkTokenAllowed(_token) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/kipu-bankV2.sol\":8507:8526  uint256 userBalance */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":8529:8539  s_balances */\n      0x04\n        /* \"contracts/kipu-bankV2.sol\":8529:8547  s_balances[_token] */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":8540:8546  _token */\n      dup6\n        /* \"contracts/kipu-bankV2.sol\":8529:8547  s_balances[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/kipu-bankV2.sol\":8529:8559  s_balances[_token][msg.sender] */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":8548:8558  msg.sender */\n      caller\n        /* \"contracts/kipu-bankV2.sol\":8529:8559  s_balances[_token][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/kipu-bankV2.sol\":8507:8559  uint256 userBalance = s_balances[_token][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/kipu-bankV2.sol\":8584:8595  userBalance */\n      dup1\n        /* \"contracts/kipu-bankV2.sol\":8574:8581  _amount */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":8574:8595  _amount > userBalance */\n      gt\n        /* \"contracts/kipu-bankV2.sol\":8570:8682  if (_amount > userBalance) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":8649:8656  _amount */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":8658:8669  userBalance */\n      dup2\n        /* \"contracts/kipu-bankV2.sol\":8619:8670  KipuBank__InsufficientBalance(_amount, userBalance) */\n      mload(0x40)\n      0x61965c4e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":8570:8682  if (_amount > userBalance) {... */\n    tag_217:\n        /* \"contracts/kipu-bankV2.sol\":8694:8718  uint256 withdrawValueUSD */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":8721:8754  getTokenValueUSD(_token, _amount) */\n      tag_219\n        /* \"contracts/kipu-bankV2.sol\":8738:8744  _token */\n      dup6\n        /* \"contracts/kipu-bankV2.sol\":8746:8753  _amount */\n      dup6\n        /* \"contracts/kipu-bankV2.sol\":8721:8737  getTokenValueUSD */\n      tag_45\n        /* \"contracts/kipu-bankV2.sol\":8721:8754  getTokenValueUSD(_token, _amount) */\n      jump\t// in\n    tag_219:\n        /* \"contracts/kipu-bankV2.sol\":8694:8754  uint256 withdrawValueUSD = getTokenValueUSD(_token, _amount) */\n      swap1\n      pop\n        /* \"contracts/kipu-bankV2.sol\":8788:8808  i_withdrawalLimitUSD */\n      immutable(\"0x0344bbb4e8632aa15d8a069bcbd225e8c78f94ca35b4d1de1da43fb9c1323e48\")\n        /* \"contracts/kipu-bankV2.sol\":8769:8785  withdrawValueUSD */\n      dup2\n        /* \"contracts/kipu-bankV2.sol\":8769:8808  withdrawValueUSD > i_withdrawalLimitUSD */\n      gt\n        /* \"contracts/kipu-bankV2.sol\":8765:8964  if (withdrawValueUSD > i_withdrawalLimitUSD) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":8882:8898  withdrawValueUSD */\n      dup1\n        /* \"contracts/kipu-bankV2.sol\":8917:8937  i_withdrawalLimitUSD */\n      immutable(\"0x0344bbb4e8632aa15d8a069bcbd225e8c78f94ca35b4d1de1da43fb9c1323e48\")\n        /* \"contracts/kipu-bankV2.sol\":8832:8952  KipuBank__WithdrawLimitExceeded(... */\n      mload(0x40)\n      0x8672a83200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":8765:8964  if (withdrawValueUSD > i_withdrawalLimitUSD) {... */\n    tag_220:\n        /* \"contracts/kipu-bankV2.sol\":9081:9088  _amount */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":9067:9078  userBalance */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":9067:9088  userBalance - _amount */\n      tag_222\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"contracts/kipu-bankV2.sol\":9034:9044  s_balances */\n      0x04\n        /* \"contracts/kipu-bankV2.sol\":9034:9052  s_balances[_token] */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":9045:9051  _token */\n      dup8\n        /* \"contracts/kipu-bankV2.sol\":9034:9052  s_balances[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/kipu-bankV2.sol\":9034:9064  s_balances[_token][msg.sender] */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":9053:9063  msg.sender */\n      caller\n        /* \"contracts/kipu-bankV2.sol\":9034:9064  s_balances[_token][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/kipu-bankV2.sol\":9034:9088  s_balances[_token][msg.sender] = userBalance - _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/kipu-bankV2.sol\":9122:9138  withdrawValueUSD */\n      dup1\n        /* \"contracts/kipu-bankV2.sol\":9099:9118  s_totalBankValueUSD */\n      0x01\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":9099:9138  s_totalBankValueUSD -= withdrawValueUSD */\n      dup3\n      dup3\n      sload\n      tag_224\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_224:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/kipu-bankV2.sol\":9149:9166  s_withdrawalCount */\n      0x03\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":9149:9168  s_withdrawalCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_225\n      swap1\n      tag_146\n      jump\t// in\n    tag_225:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/kipu-bankV2.sol\":1243:1244  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":9219:9240  _token == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":9219:9225  _token */\n      dup6\n        /* \"contracts/kipu-bankV2.sol\":9219:9240  _token == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/kipu-bankV2.sol\":9215:9466  if (_token == ETH_ADDRESS) {... */\n      tag_226\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":9258:9270  bool success */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":9276:9286  msg.sender */\n      caller\n        /* \"contracts/kipu-bankV2.sol\":9276:9291  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":9299:9306  _amount */\n      dup6\n        /* \"contracts/kipu-bankV2.sol\":9276:9311  msg.sender.call{value: _amount}(\"\") */\n      mload(0x40)\n      tag_227\n      swap1\n      tag_195\n      jump\t// in\n    tag_227:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_230\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_229)\n    tag_230:\n      0x60\n      swap2\n      pop\n    tag_229:\n      pop\n        /* \"contracts/kipu-bankV2.sol\":9257:9311  (bool success, ) = msg.sender.call{value: _amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/kipu-bankV2.sol\":9331:9338  success */\n      dup1\n        /* \"contracts/kipu-bankV2.sol\":9326:9373  if (!success) revert KipuBank__TransferFailed() */\n      tag_231\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":9347:9373  KipuBank__TransferFailed() */\n      mload(0x40)\n      0x2ae871a500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":9326:9373  if (!success) revert KipuBank__TransferFailed() */\n    tag_231:\n        /* \"contracts/kipu-bankV2.sol\":9242:9385  {... */\n      pop\n        /* \"contracts/kipu-bankV2.sol\":9215:9466  if (_token == ETH_ADDRESS) {... */\n      jump(tag_232)\n    tag_226:\n        /* \"contracts/kipu-bankV2.sol\":9406:9454  IERC20(_token).safeTransfer(msg.sender, _amount) */\n      tag_233\n        /* \"contracts/kipu-bankV2.sol\":9434:9444  msg.sender */\n      caller\n        /* \"contracts/kipu-bankV2.sol\":9446:9453  _amount */\n      dup6\n        /* \"contracts/kipu-bankV2.sol\":9413:9419  _token */\n      dup8\n        /* \"contracts/kipu-bankV2.sol\":9406:9433  IERC20(_token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_202\n      swap1\n        /* \"contracts/kipu-bankV2.sol\":9406:9454  IERC20(_token).safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/kipu-bankV2.sol\":9215:9466  if (_token == ETH_ADDRESS) {... */\n    tag_232:\n        /* \"contracts/kipu-bankV2.sol\":9505:9511  _token */\n      dup5\n        /* \"contracts/kipu-bankV2.sol\":9483:9539  Withdrawn(msg.sender, _token, _amount, withdrawValueUSD) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":9493:9503  msg.sender */\n      caller\n        /* \"contracts/kipu-bankV2.sol\":9483:9539  Withdrawn(msg.sender, _token, _amount, withdrawValueUSD) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x91fb9d98b786c57d74c099ccd2beca1739e9f6a81fb49001ca465c4b7591bbe2\n        /* \"contracts/kipu-bankV2.sol\":9513:9520  _amount */\n      dup7\n        /* \"contracts/kipu-bankV2.sol\":9522:9538  withdrawValueUSD */\n      dup5\n        /* \"contracts/kipu-bankV2.sol\":9483:9539  Withdrawn(msg.sender, _token, _amount, withdrawValueUSD) */\n      mload(0x40)\n      tag_234\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/kipu-bankV2.sol\":8364:9547  {... */\n      pop\n      pop\n        /* \"contracts/kipu-bankV2.sol\":8281:9547  function withdraw(address _token, uint256 _amount) external nonZeroAmount(_amount) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":2607:2659  mapping(address => TokenConfig) public s_tokenConfig */\n    tag_127:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":11778:12292  function allowToken(... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_236:\n        /* \"contracts/kipu-bankV2.sol\":1243:1244  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":11919:11940  _token == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":11919:11925  _token */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":11919:11940  _token == ETH_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/kipu-bankV2.sol\":11915:11982  if (_token == ETH_ADDRESS) revert KipuBank__TokenNotAllowed(_token) */\n      tag_238\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":11975:11981  _token */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":11949:11982  KipuBank__TokenNotAllowed(_token) */\n      mload(0x40)\n      0xfb21d4aa00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":11915:11982  if (_token == ETH_ADDRESS) revert KipuBank__TokenNotAllowed(_token) */\n    tag_238:\n        /* \"contracts/kipu-bankV2.sol\":12019:12020  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":11997:12021  _priceFeed == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":11997:12007  _priceFeed */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":11997:12021  _priceFeed == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/kipu-bankV2.sol\":11993:12095  if (_priceFeed == address(0)) {... */\n      tag_240\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":12072:12082  _priceFeed */\n      dup2\n        /* \"contracts/kipu-bankV2.sol\":12045:12083  KipuBank__InvalidPriceFeed(_priceFeed) */\n      mload(0x40)\n      0x18378d8c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":11993:12095  if (_priceFeed == address(0)) {... */\n    tag_240:\n        /* \"contracts/kipu-bankV2.sol\":12131:12225  TokenConfig({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/kipu-bankV2.sol\":12169:12179  _priceFeed */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":12131:12225  TokenConfig({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/kipu-bankV2.sol\":12204:12213  _decimals */\n      dup3\n        /* \"contracts/kipu-bankV2.sol\":12131:12225  TokenConfig({... */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/kipu-bankV2.sol\":12107:12120  s_tokenConfig */\n      0x05\n        /* \"contracts/kipu-bankV2.sol\":12107:12128  s_tokenConfig[_token] */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":12121:12127  _token */\n      dup6\n        /* \"contracts/kipu-bankV2.sol\":12107:12128  s_tokenConfig[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/kipu-bankV2.sol\":12107:12225  s_tokenConfig[_token] = TokenConfig({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/kipu-bankV2.sol\":12262:12272  _priceFeed */\n      dup2\n        /* \"contracts/kipu-bankV2.sol\":12241:12284  TokenAllowed(_token, _priceFeed, _decimals) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":12254:12260  _token */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":12241:12284  TokenAllowed(_token, _priceFeed, _decimals) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6d28000829e988111dfd4f9075c2dc3f734e48013bc94e9ffbc8e523687314d7\n        /* \"contracts/kipu-bankV2.sol\":12274:12283  _decimals */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":12241:12284  TokenAllowed(_token, _priceFeed, _decimals) */\n      mload(0x40)\n      tag_242\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/kipu-bankV2.sol\":11778:12292  function allowToken(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/kipu-bankV2.sol\":13604:13797  function _checkTokenAllowed(address _token) private view {... */\n    tag_137:\n        /* \"contracts/kipu-bankV2.sol\":13719:13720  0 */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":13676:13721  s_tokenConfig[_token].priceFeed == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":13676:13689  s_tokenConfig */\n      0x05\n        /* \"contracts/kipu-bankV2.sol\":13676:13697  s_tokenConfig[_token] */\n      0x00\n        /* \"contracts/kipu-bankV2.sol\":13690:13696  _token */\n      dup4\n        /* \"contracts/kipu-bankV2.sol\":13676:13697  s_tokenConfig[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/kipu-bankV2.sol\":13676:13707  s_tokenConfig[_token].priceFeed */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/kipu-bankV2.sol\":13676:13721  s_tokenConfig[_token].priceFeed == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/kipu-bankV2.sol\":13672:13790  if (s_tokenConfig[_token].priceFeed == address(0)) {... */\n      tag_244\n      jumpi\n        /* \"contracts/kipu-bankV2.sol\":13771:13777  _token */\n      dup1\n        /* \"contracts/kipu-bankV2.sol\":13745:13778  KipuBank__TokenNotAllowed(_token) */\n      mload(0x40)\n      0xfb21d4aa00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/kipu-bankV2.sol\":13672:13790  if (s_tokenConfig[_token].priceFeed == address(0)) {... */\n    tag_244:\n        /* \"contracts/kipu-bankV2.sol\":13604:13797  function _checkTokenAllowed(address _token) private view {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_248\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_261\n      swap3\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_266)\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_204:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_270:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_271:\n        /* \"#utility.yul\":177:201   */\n      tag_307\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_270\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_40:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_309\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_271\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_273:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      0x00\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_275:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_276:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_315\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_275\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_277:\n        /* \"#utility.yul\":1076:1100   */\n      tag_317\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_276\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      0x00\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_318:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_278:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_320\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_277\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_279:\n        /* \"#utility.yul\":1349:1373   */\n      tag_322\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_270\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      0x00\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_323:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_280:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_325\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_279\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:2023   */\n    tag_44:\n        /* \"#utility.yul\":1617:1623   */\n      0x00\n        /* \"#utility.yul\":1625:1631   */\n      0x00\n        /* \"#utility.yul\":1674:1676   */\n      0x40\n        /* \"#utility.yul\":1662:1671   */\n      dup4\n        /* \"#utility.yul\":1653:1660   */\n      dup6\n        /* \"#utility.yul\":1649:1672   */\n      sub\n        /* \"#utility.yul\":1645:1677   */\n      slt\n        /* \"#utility.yul\":1642:1761   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":1680:1759   */\n      tag_328\n      tag_273\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1642:1761   */\n    tag_327:\n        /* \"#utility.yul\":1800:1801   */\n      0x00\n        /* \"#utility.yul\":1825:1878   */\n      tag_329\n        /* \"#utility.yul\":1870:1877   */\n      dup6\n        /* \"#utility.yul\":1861:1867   */\n      dup3\n        /* \"#utility.yul\":1850:1859   */\n      dup7\n        /* \"#utility.yul\":1846:1868   */\n      add\n        /* \"#utility.yul\":1825:1878   */\n      tag_278\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":1815:1878   */\n      swap3\n      pop\n        /* \"#utility.yul\":1771:1888   */\n      pop\n        /* \"#utility.yul\":1927:1929   */\n      0x20\n        /* \"#utility.yul\":1953:2006   */\n      tag_330\n        /* \"#utility.yul\":1998:2005   */\n      dup6\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup7\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_280\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1943:2006   */\n      swap2\n      pop\n        /* \"#utility.yul\":1898:2016   */\n      pop\n        /* \"#utility.yul\":1549:2023   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2115   */\n    tag_281:\n        /* \"#utility.yul\":2064:2071   */\n      0x00\n        /* \"#utility.yul\":2104:2108   */\n      0xff\n        /* \"#utility.yul\":2097:2102   */\n      dup3\n        /* \"#utility.yul\":2093:2109   */\n      and\n        /* \"#utility.yul\":2082:2109   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2121:2233   */\n    tag_282:\n        /* \"#utility.yul\":2204:2226   */\n      tag_333\n        /* \"#utility.yul\":2220:2225   */\n      dup2\n        /* \"#utility.yul\":2204:2226   */\n      tag_281\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2199:2202   */\n      dup3\n        /* \"#utility.yul\":2192:2227   */\n      mstore\n        /* \"#utility.yul\":2121:2233   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2239:2453   */\n    tag_51:\n        /* \"#utility.yul\":2328:2332   */\n      0x00\n        /* \"#utility.yul\":2366:2368   */\n      0x20\n        /* \"#utility.yul\":2355:2364   */\n      dup3\n        /* \"#utility.yul\":2351:2369   */\n      add\n        /* \"#utility.yul\":2343:2369   */\n      swap1\n      pop\n        /* \"#utility.yul\":2379:2446   */\n      tag_335\n        /* \"#utility.yul\":2443:2444   */\n      0x00\n        /* \"#utility.yul\":2432:2441   */\n      dup4\n        /* \"#utility.yul\":2428:2445   */\n      add\n        /* \"#utility.yul\":2419:2425   */\n      dup5\n        /* \"#utility.yul\":2379:2446   */\n      tag_282\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2239:2453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2459:2933   */\n    tag_72:\n        /* \"#utility.yul\":2527:2533   */\n      0x00\n        /* \"#utility.yul\":2535:2541   */\n      0x00\n        /* \"#utility.yul\":2584:2586   */\n      0x40\n        /* \"#utility.yul\":2572:2581   */\n      dup4\n        /* \"#utility.yul\":2563:2570   */\n      dup6\n        /* \"#utility.yul\":2559:2582   */\n      sub\n        /* \"#utility.yul\":2555:2587   */\n      slt\n        /* \"#utility.yul\":2552:2671   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":2590:2669   */\n      tag_338\n      tag_273\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":2552:2671   */\n    tag_337:\n        /* \"#utility.yul\":2710:2711   */\n      0x00\n        /* \"#utility.yul\":2735:2788   */\n      tag_339\n        /* \"#utility.yul\":2780:2787   */\n      dup6\n        /* \"#utility.yul\":2771:2777   */\n      dup3\n        /* \"#utility.yul\":2760:2769   */\n      dup7\n        /* \"#utility.yul\":2756:2778   */\n      add\n        /* \"#utility.yul\":2735:2788   */\n      tag_278\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2725:2788   */\n      swap3\n      pop\n        /* \"#utility.yul\":2681:2798   */\n      pop\n        /* \"#utility.yul\":2837:2839   */\n      0x20\n        /* \"#utility.yul\":2863:2916   */\n      tag_340\n        /* \"#utility.yul\":2908:2915   */\n      dup6\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup7\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_278\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2853:2916   */\n      swap2\n      pop\n        /* \"#utility.yul\":2808:2926   */\n      pop\n        /* \"#utility.yul\":2459:2933   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2939:3057   */\n    tag_283:\n        /* \"#utility.yul\":3026:3050   */\n      tag_342\n        /* \"#utility.yul\":3044:3049   */\n      dup2\n        /* \"#utility.yul\":3026:3050   */\n      tag_276\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":3021:3024   */\n      dup3\n        /* \"#utility.yul\":3014:3051   */\n      mstore\n        /* \"#utility.yul\":2939:3057   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3063:3285   */\n    tag_78:\n        /* \"#utility.yul\":3156:3160   */\n      0x00\n        /* \"#utility.yul\":3194:3196   */\n      0x20\n        /* \"#utility.yul\":3183:3192   */\n      dup3\n        /* \"#utility.yul\":3179:3197   */\n      add\n        /* \"#utility.yul\":3171:3197   */\n      swap1\n      pop\n        /* \"#utility.yul\":3207:3278   */\n      tag_344\n        /* \"#utility.yul\":3275:3276   */\n      0x00\n        /* \"#utility.yul\":3264:3273   */\n      dup4\n        /* \"#utility.yul\":3260:3277   */\n      add\n        /* \"#utility.yul\":3251:3257   */\n      dup5\n        /* \"#utility.yul\":3207:3278   */\n      tag_283\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3063:3285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3291:3620   */\n    tag_98:\n        /* \"#utility.yul\":3350:3356   */\n      0x00\n        /* \"#utility.yul\":3399:3401   */\n      0x20\n        /* \"#utility.yul\":3387:3396   */\n      dup3\n        /* \"#utility.yul\":3378:3385   */\n      dup5\n        /* \"#utility.yul\":3374:3397   */\n      sub\n        /* \"#utility.yul\":3370:3402   */\n      slt\n        /* \"#utility.yul\":3367:3486   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":3405:3484   */\n      tag_347\n      tag_273\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3367:3486   */\n    tag_346:\n        /* \"#utility.yul\":3525:3526   */\n      0x00\n        /* \"#utility.yul\":3550:3603   */\n      tag_348\n        /* \"#utility.yul\":3595:3602   */\n      dup5\n        /* \"#utility.yul\":3586:3592   */\n      dup3\n        /* \"#utility.yul\":3575:3584   */\n      dup6\n        /* \"#utility.yul\":3571:3593   */\n      add\n        /* \"#utility.yul\":3550:3603   */\n      tag_278\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3540:3603   */\n      swap2\n      pop\n        /* \"#utility.yul\":3496:3613   */\n      pop\n        /* \"#utility.yul\":3291:3620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3626:3734   */\n    tag_284:\n        /* \"#utility.yul\":3703:3727   */\n      tag_350\n        /* \"#utility.yul\":3721:3726   */\n      dup2\n        /* \"#utility.yul\":3703:3727   */\n      tag_276\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3698:3701   */\n      dup3\n        /* \"#utility.yul\":3691:3728   */\n      mstore\n        /* \"#utility.yul\":3626:3734   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3740:3842   */\n    tag_285:\n        /* \"#utility.yul\":3813:3835   */\n      tag_352\n        /* \"#utility.yul\":3829:3834   */\n      dup2\n        /* \"#utility.yul\":3813:3835   */\n      tag_281\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3808:3811   */\n      dup3\n        /* \"#utility.yul\":3801:3836   */\n      mstore\n        /* \"#utility.yul\":3740:3842   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3914:4432   */\n    tag_286:\n        /* \"#utility.yul\":4067:4071   */\n      0x40\n        /* \"#utility.yul\":4062:4065   */\n      dup3\n        /* \"#utility.yul\":4058:4072   */\n      add\n        /* \"#utility.yul\":4159:4163   */\n      0x00\n        /* \"#utility.yul\":4152:4157   */\n      dup3\n        /* \"#utility.yul\":4148:4164   */\n      add\n        /* \"#utility.yul\":4142:4165   */\n      mload\n        /* \"#utility.yul\":4178:4241   */\n      tag_354\n        /* \"#utility.yul\":4235:4239   */\n      0x00\n        /* \"#utility.yul\":4230:4233   */\n      dup6\n        /* \"#utility.yul\":4226:4240   */\n      add\n        /* \"#utility.yul\":4212:4224   */\n      dup3\n        /* \"#utility.yul\":4178:4241   */\n      tag_284\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4082:4251   */\n      pop\n        /* \"#utility.yul\":4337:4341   */\n      0x20\n        /* \"#utility.yul\":4330:4335   */\n      dup3\n        /* \"#utility.yul\":4326:4342   */\n      add\n        /* \"#utility.yul\":4320:4343   */\n      mload\n        /* \"#utility.yul\":4356:4415   */\n      tag_355\n        /* \"#utility.yul\":4409:4413   */\n      0x20\n        /* \"#utility.yul\":4404:4407   */\n      dup6\n        /* \"#utility.yul\":4400:4414   */\n      add\n        /* \"#utility.yul\":4386:4398   */\n      dup3\n        /* \"#utility.yul\":4356:4415   */\n      tag_285\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4261:4425   */\n      pop\n        /* \"#utility.yul\":4036:4432   */\n      pop\n        /* \"#utility.yul\":3914:4432   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4438:4772   */\n    tag_101:\n        /* \"#utility.yul\":4587:4591   */\n      0x00\n        /* \"#utility.yul\":4625:4627   */\n      0x40\n        /* \"#utility.yul\":4614:4623   */\n      dup3\n        /* \"#utility.yul\":4610:4628   */\n      add\n        /* \"#utility.yul\":4602:4628   */\n      swap1\n      pop\n        /* \"#utility.yul\":4638:4765   */\n      tag_357\n        /* \"#utility.yul\":4762:4763   */\n      0x00\n        /* \"#utility.yul\":4751:4760   */\n      dup4\n        /* \"#utility.yul\":4747:4764   */\n      add\n        /* \"#utility.yul\":4738:4744   */\n      dup5\n        /* \"#utility.yul\":4638:4765   */\n      tag_286\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4438:4772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4778:5102   */\n    tag_129:\n        /* \"#utility.yul\":4895:4899   */\n      0x00\n        /* \"#utility.yul\":4933:4935   */\n      0x40\n        /* \"#utility.yul\":4922:4931   */\n      dup3\n        /* \"#utility.yul\":4918:4936   */\n      add\n        /* \"#utility.yul\":4910:4936   */\n      swap1\n      pop\n        /* \"#utility.yul\":4946:5017   */\n      tag_359\n        /* \"#utility.yul\":5014:5015   */\n      0x00\n        /* \"#utility.yul\":5003:5012   */\n      dup4\n        /* \"#utility.yul\":4999:5016   */\n      add\n        /* \"#utility.yul\":4990:4996   */\n      dup6\n        /* \"#utility.yul\":4946:5017   */\n      tag_283\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5027:5095   */\n      tag_360\n        /* \"#utility.yul\":5091:5093   */\n      0x20\n        /* \"#utility.yul\":5080:5089   */\n      dup4\n        /* \"#utility.yul\":5076:5094   */\n      add\n        /* \"#utility.yul\":5067:5073   */\n      dup5\n        /* \"#utility.yul\":5027:5095   */\n      tag_282\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4778:5102   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5108:5226   */\n    tag_287:\n        /* \"#utility.yul\":5179:5201   */\n      tag_362\n        /* \"#utility.yul\":5195:5200   */\n      dup2\n        /* \"#utility.yul\":5179:5201   */\n      tag_281\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5172:5177   */\n      dup2\n        /* \"#utility.yul\":5169:5202   */\n      eq\n        /* \"#utility.yul\":5159:5220   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":5216:5217   */\n      0x00\n        /* \"#utility.yul\":5213:5214   */\n      0x00\n        /* \"#utility.yul\":5206:5218   */\n      revert\n        /* \"#utility.yul\":5159:5220   */\n    tag_363:\n        /* \"#utility.yul\":5108:5226   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5232:5367   */\n    tag_288:\n        /* \"#utility.yul\":5276:5281   */\n      0x00\n        /* \"#utility.yul\":5314:5320   */\n      dup2\n        /* \"#utility.yul\":5301:5321   */\n      calldataload\n        /* \"#utility.yul\":5292:5321   */\n      swap1\n      pop\n        /* \"#utility.yul\":5330:5361   */\n      tag_365\n        /* \"#utility.yul\":5355:5360   */\n      dup2\n        /* \"#utility.yul\":5330:5361   */\n      tag_287\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5232:5367   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5373:5988   */\n    tag_133:\n        /* \"#utility.yul\":5448:5454   */\n      0x00\n        /* \"#utility.yul\":5456:5462   */\n      0x00\n        /* \"#utility.yul\":5464:5470   */\n      0x00\n        /* \"#utility.yul\":5513:5515   */\n      0x60\n        /* \"#utility.yul\":5501:5510   */\n      dup5\n        /* \"#utility.yul\":5492:5499   */\n      dup7\n        /* \"#utility.yul\":5488:5511   */\n      sub\n        /* \"#utility.yul\":5484:5516   */\n      slt\n        /* \"#utility.yul\":5481:5600   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":5519:5598   */\n      tag_368\n      tag_273\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5481:5600   */\n    tag_367:\n        /* \"#utility.yul\":5639:5640   */\n      0x00\n        /* \"#utility.yul\":5664:5717   */\n      tag_369\n        /* \"#utility.yul\":5709:5716   */\n      dup7\n        /* \"#utility.yul\":5700:5706   */\n      dup3\n        /* \"#utility.yul\":5689:5698   */\n      dup8\n        /* \"#utility.yul\":5685:5707   */\n      add\n        /* \"#utility.yul\":5664:5717   */\n      tag_278\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":5654:5717   */\n      swap4\n      pop\n        /* \"#utility.yul\":5610:5727   */\n      pop\n        /* \"#utility.yul\":5766:5768   */\n      0x20\n        /* \"#utility.yul\":5792:5845   */\n      tag_370\n        /* \"#utility.yul\":5837:5844   */\n      dup7\n        /* \"#utility.yul\":5828:5834   */\n      dup3\n        /* \"#utility.yul\":5817:5826   */\n      dup8\n        /* \"#utility.yul\":5813:5835   */\n      add\n        /* \"#utility.yul\":5792:5845   */\n      tag_278\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5782:5845   */\n      swap3\n      pop\n        /* \"#utility.yul\":5737:5855   */\n      pop\n        /* \"#utility.yul\":5894:5896   */\n      0x40\n        /* \"#utility.yul\":5920:5971   */\n      tag_371\n        /* \"#utility.yul\":5963:5970   */\n      dup7\n        /* \"#utility.yul\":5954:5960   */\n      dup3\n        /* \"#utility.yul\":5943:5952   */\n      dup8\n        /* \"#utility.yul\":5939:5961   */\n      add\n        /* \"#utility.yul\":5920:5971   */\n      tag_288\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":5910:5971   */\n      swap2\n      pop\n        /* \"#utility.yul\":5865:5981   */\n      pop\n        /* \"#utility.yul\":5373:5988   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5994:6174   */\n    tag_289:\n        /* \"#utility.yul\":6042:6119   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6039:6040   */\n      0x00\n        /* \"#utility.yul\":6032:6120   */\n      mstore\n        /* \"#utility.yul\":6139:6143   */\n      0x11\n        /* \"#utility.yul\":6136:6137   */\n      0x04\n        /* \"#utility.yul\":6129:6144   */\n      mstore\n        /* \"#utility.yul\":6163:6167   */\n      0x24\n        /* \"#utility.yul\":6160:6161   */\n      0x00\n        /* \"#utility.yul\":6153:6168   */\n      revert\n        /* \"#utility.yul\":6180:6371   */\n    tag_140:\n        /* \"#utility.yul\":6220:6223   */\n      0x00\n        /* \"#utility.yul\":6239:6259   */\n      tag_374\n        /* \"#utility.yul\":6257:6258   */\n      dup3\n        /* \"#utility.yul\":6239:6259   */\n      tag_270\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":6234:6259   */\n      swap2\n      pop\n        /* \"#utility.yul\":6273:6293   */\n      tag_375\n        /* \"#utility.yul\":6291:6292   */\n      dup4\n        /* \"#utility.yul\":6273:6293   */\n      tag_270\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6268:6293   */\n      swap3\n      pop\n        /* \"#utility.yul\":6316:6317   */\n      dup3\n        /* \"#utility.yul\":6313:6314   */\n      dup3\n        /* \"#utility.yul\":6309:6318   */\n      add\n        /* \"#utility.yul\":6302:6318   */\n      swap1\n      pop\n        /* \"#utility.yul\":6337:6340   */\n      dup1\n        /* \"#utility.yul\":6334:6335   */\n      dup3\n        /* \"#utility.yul\":6331:6341   */\n      gt\n        /* \"#utility.yul\":6328:6364   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":6344:6362   */\n      tag_377\n      tag_289\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6328:6364   */\n    tag_376:\n        /* \"#utility.yul\":6180:6371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6377:6819   */\n    tag_143:\n        /* \"#utility.yul\":6526:6530   */\n      0x00\n        /* \"#utility.yul\":6564:6566   */\n      0x60\n        /* \"#utility.yul\":6553:6562   */\n      dup3\n        /* \"#utility.yul\":6549:6567   */\n      add\n        /* \"#utility.yul\":6541:6567   */\n      swap1\n      pop\n        /* \"#utility.yul\":6577:6648   */\n      tag_379\n        /* \"#utility.yul\":6645:6646   */\n      0x00\n        /* \"#utility.yul\":6634:6643   */\n      dup4\n        /* \"#utility.yul\":6630:6647   */\n      add\n        /* \"#utility.yul\":6621:6627   */\n      dup7\n        /* \"#utility.yul\":6577:6648   */\n      tag_271\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6658:6730   */\n      tag_380\n        /* \"#utility.yul\":6726:6728   */\n      0x20\n        /* \"#utility.yul\":6715:6724   */\n      dup4\n        /* \"#utility.yul\":6711:6729   */\n      add\n        /* \"#utility.yul\":6702:6708   */\n      dup6\n        /* \"#utility.yul\":6658:6730   */\n      tag_271\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":6740:6812   */\n      tag_381\n        /* \"#utility.yul\":6808:6810   */\n      0x40\n        /* \"#utility.yul\":6797:6806   */\n      dup4\n        /* \"#utility.yul\":6793:6811   */\n      add\n        /* \"#utility.yul\":6784:6790   */\n      dup5\n        /* \"#utility.yul\":6740:6812   */\n      tag_271\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":6377:6819   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6825:7058   */\n    tag_146:\n        /* \"#utility.yul\":6864:6867   */\n      0x00\n        /* \"#utility.yul\":6887:6911   */\n      tag_383\n        /* \"#utility.yul\":6905:6910   */\n      dup3\n        /* \"#utility.yul\":6887:6911   */\n      tag_270\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":6878:6911   */\n      swap2\n      pop\n        /* \"#utility.yul\":6933:6999   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6926:6931   */\n      dup3\n        /* \"#utility.yul\":6923:7000   */\n      sub\n        /* \"#utility.yul\":6920:7023   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":7003:7021   */\n      tag_385\n      tag_289\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":6920:7023   */\n    tag_384:\n        /* \"#utility.yul\":7050:7051   */\n      0x01\n        /* \"#utility.yul\":7043:7048   */\n      dup3\n        /* \"#utility.yul\":7039:7052   */\n      add\n        /* \"#utility.yul\":7032:7052   */\n      swap1\n      pop\n        /* \"#utility.yul\":6825:7058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7064:7396   */\n    tag_151:\n        /* \"#utility.yul\":7185:7189   */\n      0x00\n        /* \"#utility.yul\":7223:7225   */\n      0x40\n        /* \"#utility.yul\":7212:7221   */\n      dup3\n        /* \"#utility.yul\":7208:7226   */\n      add\n        /* \"#utility.yul\":7200:7226   */\n      swap1\n      pop\n        /* \"#utility.yul\":7236:7307   */\n      tag_387\n        /* \"#utility.yul\":7304:7305   */\n      0x00\n        /* \"#utility.yul\":7293:7302   */\n      dup4\n        /* \"#utility.yul\":7289:7306   */\n      add\n        /* \"#utility.yul\":7280:7286   */\n      dup6\n        /* \"#utility.yul\":7236:7307   */\n      tag_271\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7317:7389   */\n      tag_388\n        /* \"#utility.yul\":7385:7387   */\n      0x20\n        /* \"#utility.yul\":7374:7383   */\n      dup4\n        /* \"#utility.yul\":7370:7388   */\n      add\n        /* \"#utility.yul\":7361:7367   */\n      dup5\n        /* \"#utility.yul\":7317:7389   */\n      tag_271\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":7064:7396   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7402:7507   */\n    tag_290:\n        /* \"#utility.yul\":7438:7445   */\n      0x00\n        /* \"#utility.yul\":7478:7500   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":7471:7476   */\n      dup3\n        /* \"#utility.yul\":7467:7501   */\n      and\n        /* \"#utility.yul\":7456:7501   */\n      swap1\n      pop\n        /* \"#utility.yul\":7402:7507   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7513:7633   */\n    tag_291:\n        /* \"#utility.yul\":7585:7608   */\n      tag_391\n        /* \"#utility.yul\":7602:7607   */\n      dup2\n        /* \"#utility.yul\":7585:7608   */\n      tag_290\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7578:7583   */\n      dup2\n        /* \"#utility.yul\":7575:7609   */\n      eq\n        /* \"#utility.yul\":7565:7627   */\n      tag_392\n      jumpi\n        /* \"#utility.yul\":7623:7624   */\n      0x00\n        /* \"#utility.yul\":7620:7621   */\n      0x00\n        /* \"#utility.yul\":7613:7625   */\n      revert\n        /* \"#utility.yul\":7565:7627   */\n    tag_392:\n        /* \"#utility.yul\":7513:7633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7639:7780   */\n    tag_292:\n        /* \"#utility.yul\":7695:7700   */\n      0x00\n        /* \"#utility.yul\":7726:7732   */\n      dup2\n        /* \"#utility.yul\":7720:7733   */\n      mload\n        /* \"#utility.yul\":7711:7733   */\n      swap1\n      pop\n        /* \"#utility.yul\":7742:7774   */\n      tag_394\n        /* \"#utility.yul\":7768:7773   */\n      dup2\n        /* \"#utility.yul\":7742:7774   */\n      tag_291\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":7639:7780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7786:7862   */\n    tag_293:\n        /* \"#utility.yul\":7822:7829   */\n      0x00\n        /* \"#utility.yul\":7851:7856   */\n      dup2\n        /* \"#utility.yul\":7840:7856   */\n      swap1\n      pop\n        /* \"#utility.yul\":7786:7862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7868:7988   */\n    tag_294:\n        /* \"#utility.yul\":7940:7963   */\n      tag_397\n        /* \"#utility.yul\":7957:7962   */\n      dup2\n        /* \"#utility.yul\":7940:7963   */\n      tag_293\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7933:7938   */\n      dup2\n        /* \"#utility.yul\":7930:7964   */\n      eq\n        /* \"#utility.yul\":7920:7982   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":7978:7979   */\n      0x00\n        /* \"#utility.yul\":7975:7976   */\n      0x00\n        /* \"#utility.yul\":7968:7980   */\n      revert\n        /* \"#utility.yul\":7920:7982   */\n    tag_398:\n        /* \"#utility.yul\":7868:7988   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7994:8135   */\n    tag_295:\n        /* \"#utility.yul\":8050:8055   */\n      0x00\n        /* \"#utility.yul\":8081:8087   */\n      dup2\n        /* \"#utility.yul\":8075:8088   */\n      mload\n        /* \"#utility.yul\":8066:8088   */\n      swap1\n      pop\n        /* \"#utility.yul\":8097:8129   */\n      tag_400\n        /* \"#utility.yul\":8123:8128   */\n      dup2\n        /* \"#utility.yul\":8097:8129   */\n      tag_294\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":7994:8135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8141:8284   */\n    tag_296:\n        /* \"#utility.yul\":8198:8203   */\n      0x00\n        /* \"#utility.yul\":8229:8235   */\n      dup2\n        /* \"#utility.yul\":8223:8236   */\n      mload\n        /* \"#utility.yul\":8214:8236   */\n      swap1\n      pop\n        /* \"#utility.yul\":8245:8278   */\n      tag_402\n        /* \"#utility.yul\":8272:8277   */\n      dup2\n        /* \"#utility.yul\":8245:8278   */\n      tag_279\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":8141:8284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8290:9261   */\n    tag_159:\n        /* \"#utility.yul\":8393:8399   */\n      0x00\n        /* \"#utility.yul\":8401:8407   */\n      0x00\n        /* \"#utility.yul\":8409:8415   */\n      0x00\n        /* \"#utility.yul\":8417:8423   */\n      0x00\n        /* \"#utility.yul\":8425:8431   */\n      0x00\n        /* \"#utility.yul\":8474:8477   */\n      0xa0\n        /* \"#utility.yul\":8462:8471   */\n      dup7\n        /* \"#utility.yul\":8453:8460   */\n      dup9\n        /* \"#utility.yul\":8449:8472   */\n      sub\n        /* \"#utility.yul\":8445:8478   */\n      slt\n        /* \"#utility.yul\":8442:8562   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":8481:8560   */\n      tag_405\n      tag_273\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":8442:8562   */\n    tag_404:\n        /* \"#utility.yul\":8601:8602   */\n      0x00\n        /* \"#utility.yul\":8626:8689   */\n      tag_406\n        /* \"#utility.yul\":8681:8688   */\n      dup9\n        /* \"#utility.yul\":8672:8678   */\n      dup3\n        /* \"#utility.yul\":8661:8670   */\n      dup10\n        /* \"#utility.yul\":8657:8679   */\n      add\n        /* \"#utility.yul\":8626:8689   */\n      tag_292\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":8616:8689   */\n      swap6\n      pop\n        /* \"#utility.yul\":8572:8699   */\n      pop\n        /* \"#utility.yul\":8738:8740   */\n      0x20\n        /* \"#utility.yul\":8764:8827   */\n      tag_407\n        /* \"#utility.yul\":8819:8826   */\n      dup9\n        /* \"#utility.yul\":8810:8816   */\n      dup3\n        /* \"#utility.yul\":8799:8808   */\n      dup10\n        /* \"#utility.yul\":8795:8817   */\n      add\n        /* \"#utility.yul\":8764:8827   */\n      tag_295\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8754:8827   */\n      swap5\n      pop\n        /* \"#utility.yul\":8709:8837   */\n      pop\n        /* \"#utility.yul\":8876:8878   */\n      0x40\n        /* \"#utility.yul\":8902:8966   */\n      tag_408\n        /* \"#utility.yul\":8958:8965   */\n      dup9\n        /* \"#utility.yul\":8949:8955   */\n      dup3\n        /* \"#utility.yul\":8938:8947   */\n      dup10\n        /* \"#utility.yul\":8934:8956   */\n      add\n        /* \"#utility.yul\":8902:8966   */\n      tag_296\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8892:8966   */\n      swap4\n      pop\n        /* \"#utility.yul\":8847:8976   */\n      pop\n        /* \"#utility.yul\":9015:9017   */\n      0x60\n        /* \"#utility.yul\":9041:9105   */\n      tag_409\n        /* \"#utility.yul\":9097:9104   */\n      dup9\n        /* \"#utility.yul\":9088:9094   */\n      dup3\n        /* \"#utility.yul\":9077:9086   */\n      dup10\n        /* \"#utility.yul\":9073:9095   */\n      add\n        /* \"#utility.yul\":9041:9105   */\n      tag_296\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9031:9105   */\n      swap3\n      pop\n        /* \"#utility.yul\":8986:9115   */\n      pop\n        /* \"#utility.yul\":9154:9157   */\n      0x80\n        /* \"#utility.yul\":9181:9244   */\n      tag_410\n        /* \"#utility.yul\":9236:9243   */\n      dup9\n        /* \"#utility.yul\":9227:9233   */\n      dup3\n        /* \"#utility.yul\":9216:9225   */\n      dup10\n        /* \"#utility.yul\":9212:9234   */\n      add\n        /* \"#utility.yul\":9181:9244   */\n      tag_292\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":9171:9244   */\n      swap2\n      pop\n        /* \"#utility.yul\":9125:9254   */\n      pop\n        /* \"#utility.yul\":8290:9261   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9267:9369   */\n    tag_297:\n        /* \"#utility.yul\":9309:9317   */\n      0x00\n        /* \"#utility.yul\":9356:9361   */\n      dup2\n        /* \"#utility.yul\":9353:9354   */\n      0x01\n        /* \"#utility.yul\":9349:9362   */\n      shr\n        /* \"#utility.yul\":9328:9362   */\n      swap1\n      pop\n        /* \"#utility.yul\":9267:9369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9375:10223   */\n    tag_298:\n        /* \"#utility.yul\":9436:9441   */\n      0x00\n        /* \"#utility.yul\":9443:9447   */\n      0x00\n        /* \"#utility.yul\":9467:9473   */\n      dup3\n        /* \"#utility.yul\":9458:9473   */\n      swap2\n      pop\n        /* \"#utility.yul\":9491:9496   */\n      dup4\n        /* \"#utility.yul\":9482:9496   */\n      swap1\n      pop\n        /* \"#utility.yul\":9505:10217   */\n    tag_413:\n        /* \"#utility.yul\":9526:9527   */\n      0x01\n        /* \"#utility.yul\":9516:9524   */\n      dup6\n        /* \"#utility.yul\":9513:9528   */\n      gt\n        /* \"#utility.yul\":9505:10217   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":9621:9625   */\n      dup1\n        /* \"#utility.yul\":9616:9619   */\n      dup7\n        /* \"#utility.yul\":9612:9626   */\n      div\n        /* \"#utility.yul\":9606:9610   */\n      dup2\n        /* \"#utility.yul\":9603:9627   */\n      gt\n        /* \"#utility.yul\":9600:9650   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":9630:9648   */\n      tag_417\n      tag_289\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":9600:9650   */\n    tag_416:\n        /* \"#utility.yul\":9680:9681   */\n      0x01\n        /* \"#utility.yul\":9670:9678   */\n      dup6\n        /* \"#utility.yul\":9666:9682   */\n      and\n        /* \"#utility.yul\":9663:10114   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":10095:10099   */\n      dup1\n        /* \"#utility.yul\":10088:10093   */\n      dup3\n        /* \"#utility.yul\":10084:10100   */\n      mul\n        /* \"#utility.yul\":10075:10100   */\n      swap2\n      pop\n        /* \"#utility.yul\":9663:10114   */\n    tag_418:\n        /* \"#utility.yul\":10145:10149   */\n      dup1\n        /* \"#utility.yul\":10139:10143   */\n      dup2\n        /* \"#utility.yul\":10135:10150   */\n      mul\n        /* \"#utility.yul\":10127:10150   */\n      swap1\n      pop\n        /* \"#utility.yul\":10175:10207   */\n      tag_419\n        /* \"#utility.yul\":10198:10206   */\n      dup6\n        /* \"#utility.yul\":10175:10207   */\n      tag_297\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":10163:10207   */\n      swap5\n      pop\n        /* \"#utility.yul\":9505:10217   */\n      jump(tag_413)\n    tag_415:\n        /* \"#utility.yul\":9375:10223   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10229:11302   */\n    tag_299:\n        /* \"#utility.yul\":10283:10288   */\n      0x00\n        /* \"#utility.yul\":10474:10482   */\n      dup3\n        /* \"#utility.yul\":10464:10504   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":10495:10496   */\n      0x01\n        /* \"#utility.yul\":10486:10496   */\n      swap1\n      pop\n        /* \"#utility.yul\":10497:10502   */\n      jump(tag_420)\n        /* \"#utility.yul\":10464:10504   */\n    tag_421:\n        /* \"#utility.yul\":10523:10527   */\n      dup2\n        /* \"#utility.yul\":10513:10549   */\n      tag_422\n      jumpi\n        /* \"#utility.yul\":10540:10541   */\n      0x00\n        /* \"#utility.yul\":10531:10541   */\n      swap1\n      pop\n        /* \"#utility.yul\":10542:10547   */\n      jump(tag_420)\n        /* \"#utility.yul\":10513:10549   */\n    tag_422:\n        /* \"#utility.yul\":10609:10613   */\n      dup2\n        /* \"#utility.yul\":10657:10658   */\n      0x01\n        /* \"#utility.yul\":10652:10679   */\n      dup2\n      eq\n      tag_424\n      jumpi\n        /* \"#utility.yul\":10693:10694   */\n      0x02\n        /* \"#utility.yul\":10688:10879   */\n      dup2\n      eq\n      tag_425\n      jumpi\n        /* \"#utility.yul\":10602:10879   */\n      jump(tag_423)\n        /* \"#utility.yul\":10652:10679   */\n    tag_424:\n        /* \"#utility.yul\":10670:10671   */\n      0x01\n        /* \"#utility.yul\":10661:10671   */\n      swap2\n      pop\n        /* \"#utility.yul\":10672:10677   */\n      pop\n      jump(tag_420)\n        /* \"#utility.yul\":10688:10879   */\n    tag_425:\n        /* \"#utility.yul\":10733:10736   */\n      0xff\n        /* \"#utility.yul\":10723:10731   */\n      dup5\n        /* \"#utility.yul\":10720:10737   */\n      gt\n        /* \"#utility.yul\":10717:10760   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":10740:10758   */\n      tag_427\n      tag_289\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":10717:10760   */\n    tag_426:\n        /* \"#utility.yul\":10789:10797   */\n      dup4\n        /* \"#utility.yul\":10786:10787   */\n      0x02\n        /* \"#utility.yul\":10782:10798   */\n      exp\n        /* \"#utility.yul\":10773:10798   */\n      swap2\n      pop\n        /* \"#utility.yul\":10824:10827   */\n      dup5\n        /* \"#utility.yul\":10817:10822   */\n      dup3\n        /* \"#utility.yul\":10814:10828   */\n      gt\n        /* \"#utility.yul\":10811:10851   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":10831:10849   */\n      tag_429\n      tag_289\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":10811:10851   */\n    tag_428:\n        /* \"#utility.yul\":10864:10869   */\n      pop\n      jump(tag_420)\n        /* \"#utility.yul\":10602:10879   */\n    tag_423:\n      pop\n        /* \"#utility.yul\":10988:10990   */\n      0x20\n        /* \"#utility.yul\":10978:10986   */\n      dup4\n        /* \"#utility.yul\":10975:10991   */\n      lt\n        /* \"#utility.yul\":10969:10972   */\n      0x0133\n        /* \"#utility.yul\":10963:10967   */\n      dup4\n        /* \"#utility.yul\":10960:10973   */\n      lt\n        /* \"#utility.yul\":10956:10992   */\n      and\n        /* \"#utility.yul\":10938:10940   */\n      0x4e\n        /* \"#utility.yul\":10928:10936   */\n      dup5\n        /* \"#utility.yul\":10925:10941   */\n      lt\n        /* \"#utility.yul\":10920:10922   */\n      0x0b\n        /* \"#utility.yul\":10914:10918   */\n      dup5\n        /* \"#utility.yul\":10911:10923   */\n      lt\n        /* \"#utility.yul\":10907:10942   */\n      and\n        /* \"#utility.yul\":10891:11002   */\n      or\n        /* \"#utility.yul\":10888:11134   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":11044:11052   */\n      dup3\n        /* \"#utility.yul\":11038:11042   */\n      dup3\n        /* \"#utility.yul\":11034:11053   */\n      exp\n        /* \"#utility.yul\":11025:11053   */\n      swap1\n      pop\n        /* \"#utility.yul\":11079:11082   */\n      dup4\n        /* \"#utility.yul\":11072:11077   */\n      dup2\n        /* \"#utility.yul\":11069:11083   */\n      gt\n        /* \"#utility.yul\":11066:11106   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":11086:11104   */\n      tag_432\n      tag_289\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":11066:11106   */\n    tag_431:\n        /* \"#utility.yul\":11119:11124   */\n      jump(tag_420)\n        /* \"#utility.yul\":10888:11134   */\n    tag_430:\n        /* \"#utility.yul\":11159:11201   */\n      tag_433\n        /* \"#utility.yul\":11197:11200   */\n      dup5\n        /* \"#utility.yul\":11187:11195   */\n      dup5\n        /* \"#utility.yul\":11181:11185   */\n      dup5\n        /* \"#utility.yul\":11178:11179   */\n      0x01\n        /* \"#utility.yul\":11159:11201   */\n      tag_298\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":11144:11201   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":11233:11237   */\n      dup2\n        /* \"#utility.yul\":11228:11231   */\n      dup5\n        /* \"#utility.yul\":11224:11238   */\n      div\n        /* \"#utility.yul\":11217:11222   */\n      dup2\n        /* \"#utility.yul\":11214:11239   */\n      gt\n        /* \"#utility.yul\":11211:11262   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":11242:11260   */\n      tag_435\n      tag_289\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":11211:11262   */\n    tag_434:\n        /* \"#utility.yul\":11291:11295   */\n      dup2\n        /* \"#utility.yul\":11284:11289   */\n      dup2\n        /* \"#utility.yul\":11280:11296   */\n      mul\n        /* \"#utility.yul\":11271:11296   */\n      swap1\n      pop\n        /* \"#utility.yul\":10229:11302   */\n    tag_420:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11308:11593   */\n    tag_161:\n        /* \"#utility.yul\":11368:11373   */\n      0x00\n        /* \"#utility.yul\":11392:11415   */\n      tag_437\n        /* \"#utility.yul\":11410:11414   */\n      dup3\n        /* \"#utility.yul\":11392:11415   */\n      tag_270\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":11384:11415   */\n      swap2\n      pop\n        /* \"#utility.yul\":11436:11463   */\n      tag_438\n        /* \"#utility.yul\":11454:11462   */\n      dup4\n        /* \"#utility.yul\":11436:11463   */\n      tag_270\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":11424:11463   */\n      swap3\n      pop\n        /* \"#utility.yul\":11482:11586   */\n      tag_439\n        /* \"#utility.yul\":11519:11585   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11509:11517   */\n      dup5\n        /* \"#utility.yul\":11503:11507   */\n      dup5\n        /* \"#utility.yul\":11482:11586   */\n      tag_299\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":11473:11586   */\n      swap1\n      pop\n        /* \"#utility.yul\":11308:11593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11599:12009   */\n    tag_163:\n        /* \"#utility.yul\":11639:11646   */\n      0x00\n        /* \"#utility.yul\":11662:11682   */\n      tag_441\n        /* \"#utility.yul\":11680:11681   */\n      dup3\n        /* \"#utility.yul\":11662:11682   */\n      tag_270\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11657:11682   */\n      swap2\n      pop\n        /* \"#utility.yul\":11696:11716   */\n      tag_442\n        /* \"#utility.yul\":11714:11715   */\n      dup4\n        /* \"#utility.yul\":11696:11716   */\n      tag_270\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11691:11716   */\n      swap3\n      pop\n        /* \"#utility.yul\":11751:11752   */\n      dup3\n        /* \"#utility.yul\":11748:11749   */\n      dup3\n        /* \"#utility.yul\":11744:11753   */\n      mul\n        /* \"#utility.yul\":11773:11803   */\n      tag_443\n        /* \"#utility.yul\":11791:11802   */\n      dup2\n        /* \"#utility.yul\":11773:11803   */\n      tag_270\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":11762:11803   */\n      swap2\n      pop\n        /* \"#utility.yul\":11952:11953   */\n      dup3\n        /* \"#utility.yul\":11943:11950   */\n      dup3\n        /* \"#utility.yul\":11939:11954   */\n      div\n        /* \"#utility.yul\":11936:11937   */\n      dup5\n        /* \"#utility.yul\":11933:11955   */\n      eq\n        /* \"#utility.yul\":11913:11914   */\n      dup4\n        /* \"#utility.yul\":11906:11915   */\n      iszero\n        /* \"#utility.yul\":11886:11969   */\n      or\n        /* \"#utility.yul\":11863:12002   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":11982:12000   */\n      tag_445\n      tag_289\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11863:12002   */\n    tag_444:\n        /* \"#utility.yul\":11647:12009   */\n      pop\n        /* \"#utility.yul\":11599:12009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12015:12195   */\n    tag_300:\n        /* \"#utility.yul\":12063:12140   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12060:12061   */\n      0x00\n        /* \"#utility.yul\":12053:12141   */\n      mstore\n        /* \"#utility.yul\":12160:12164   */\n      0x12\n        /* \"#utility.yul\":12157:12158   */\n      0x04\n        /* \"#utility.yul\":12150:12165   */\n      mstore\n        /* \"#utility.yul\":12184:12188   */\n      0x24\n        /* \"#utility.yul\":12181:12182   */\n      0x00\n        /* \"#utility.yul\":12174:12189   */\n      revert\n        /* \"#utility.yul\":12201:12386   */\n    tag_165:\n        /* \"#utility.yul\":12241:12242   */\n      0x00\n        /* \"#utility.yul\":12258:12278   */\n      tag_448\n        /* \"#utility.yul\":12276:12277   */\n      dup3\n        /* \"#utility.yul\":12258:12278   */\n      tag_270\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":12253:12278   */\n      swap2\n      pop\n        /* \"#utility.yul\":12292:12312   */\n      tag_449\n        /* \"#utility.yul\":12310:12311   */\n      dup4\n        /* \"#utility.yul\":12292:12312   */\n      tag_270\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":12287:12312   */\n      swap3\n      pop\n        /* \"#utility.yul\":12331:12332   */\n      dup3\n        /* \"#utility.yul\":12321:12356   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":12336:12354   */\n      tag_451\n      tag_300\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":12321:12356   */\n    tag_450:\n        /* \"#utility.yul\":12378:12379   */\n      dup3\n        /* \"#utility.yul\":12375:12376   */\n      dup3\n        /* \"#utility.yul\":12371:12380   */\n      div\n        /* \"#utility.yul\":12366:12380   */\n      swap1\n      pop\n        /* \"#utility.yul\":12201:12386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12392:12673   */\n    tag_176:\n        /* \"#utility.yul\":12450:12455   */\n      0x00\n        /* \"#utility.yul\":12474:12497   */\n      tag_453\n        /* \"#utility.yul\":12492:12496   */\n      dup3\n        /* \"#utility.yul\":12474:12497   */\n      tag_270\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12466:12497   */\n      swap2\n      pop\n        /* \"#utility.yul\":12518:12543   */\n      tag_454\n        /* \"#utility.yul\":12534:12542   */\n      dup4\n        /* \"#utility.yul\":12518:12543   */\n      tag_281\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12506:12543   */\n      swap3\n      pop\n        /* \"#utility.yul\":12562:12666   */\n      tag_455\n        /* \"#utility.yul\":12599:12665   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12589:12597   */\n      dup5\n        /* \"#utility.yul\":12583:12587   */\n      dup5\n        /* \"#utility.yul\":12562:12666   */\n      tag_299\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":12553:12666   */\n      swap1\n      pop\n        /* \"#utility.yul\":12392:12673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12679:12826   */\n    tag_301:\n        /* \"#utility.yul\":12780:12791   */\n      0x00\n        /* \"#utility.yul\":12817:12820   */\n      dup2\n        /* \"#utility.yul\":12802:12820   */\n      swap1\n      pop\n        /* \"#utility.yul\":12679:12826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12832:12946   */\n    tag_302:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12952:13350   */\n    tag_303:\n        /* \"#utility.yul\":13111:13114   */\n      0x00\n        /* \"#utility.yul\":13132:13215   */\n      tag_459\n        /* \"#utility.yul\":13213:13214   */\n      0x00\n        /* \"#utility.yul\":13208:13211   */\n      dup4\n        /* \"#utility.yul\":13132:13215   */\n      tag_301\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13125:13215   */\n      swap2\n      pop\n        /* \"#utility.yul\":13224:13317   */\n      tag_460\n        /* \"#utility.yul\":13313:13316   */\n      dup3\n        /* \"#utility.yul\":13224:13317   */\n      tag_302\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":13342:13343   */\n      0x00\n        /* \"#utility.yul\":13337:13340   */\n      dup3\n        /* \"#utility.yul\":13333:13344   */\n      add\n        /* \"#utility.yul\":13326:13344   */\n      swap1\n      pop\n        /* \"#utility.yul\":12952:13350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13356:13735   */\n    tag_195:\n        /* \"#utility.yul\":13540:13543   */\n      0x00\n        /* \"#utility.yul\":13562:13709   */\n      tag_462\n        /* \"#utility.yul\":13705:13708   */\n      dup3\n        /* \"#utility.yul\":13562:13709   */\n      tag_303\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":13555:13709   */\n      swap2\n      pop\n        /* \"#utility.yul\":13726:13729   */\n      dup2\n        /* \"#utility.yul\":13719:13729   */\n      swap1\n      pop\n        /* \"#utility.yul\":13356:13735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13741:13935   */\n    tag_223:\n        /* \"#utility.yul\":13781:13785   */\n      0x00\n        /* \"#utility.yul\":13801:13821   */\n      tag_464\n        /* \"#utility.yul\":13819:13820   */\n      dup3\n        /* \"#utility.yul\":13801:13821   */\n      tag_270\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":13796:13821   */\n      swap2\n      pop\n        /* \"#utility.yul\":13835:13855   */\n      tag_465\n        /* \"#utility.yul\":13853:13854   */\n      dup4\n        /* \"#utility.yul\":13835:13855   */\n      tag_270\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":13830:13855   */\n      swap3\n      pop\n        /* \"#utility.yul\":13879:13880   */\n      dup3\n        /* \"#utility.yul\":13876:13877   */\n      dup3\n        /* \"#utility.yul\":13872:13881   */\n      sub\n        /* \"#utility.yul\":13864:13881   */\n      swap1\n      pop\n        /* \"#utility.yul\":13903:13904   */\n      dup2\n        /* \"#utility.yul\":13897:13901   */\n      dup2\n        /* \"#utility.yul\":13894:13905   */\n      gt\n        /* \"#utility.yul\":13891:13928   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":13908:13926   */\n      tag_467\n      tag_289\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":13891:13928   */\n    tag_466:\n        /* \"#utility.yul\":13741:13935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13941:14383   */\n    tag_249:\n        /* \"#utility.yul\":14090:14094   */\n      0x00\n        /* \"#utility.yul\":14128:14130   */\n      0x60\n        /* \"#utility.yul\":14117:14126   */\n      dup3\n        /* \"#utility.yul\":14113:14131   */\n      add\n        /* \"#utility.yul\":14105:14131   */\n      swap1\n      pop\n        /* \"#utility.yul\":14141:14212   */\n      tag_469\n        /* \"#utility.yul\":14209:14210   */\n      0x00\n        /* \"#utility.yul\":14198:14207   */\n      dup4\n        /* \"#utility.yul\":14194:14211   */\n      add\n        /* \"#utility.yul\":14185:14191   */\n      dup7\n        /* \"#utility.yul\":14141:14212   */\n      tag_283\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":14222:14294   */\n      tag_470\n        /* \"#utility.yul\":14290:14292   */\n      0x20\n        /* \"#utility.yul\":14279:14288   */\n      dup4\n        /* \"#utility.yul\":14275:14293   */\n      add\n        /* \"#utility.yul\":14266:14272   */\n      dup6\n        /* \"#utility.yul\":14222:14294   */\n      tag_283\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":14304:14376   */\n      tag_471\n        /* \"#utility.yul\":14372:14374   */\n      0x40\n        /* \"#utility.yul\":14361:14370   */\n      dup4\n        /* \"#utility.yul\":14357:14375   */\n      add\n        /* \"#utility.yul\":14348:14354   */\n      dup5\n        /* \"#utility.yul\":14304:14376   */\n      tag_271\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13941:14383   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14389:14721   */\n    tag_262:\n        /* \"#utility.yul\":14510:14514   */\n      0x00\n        /* \"#utility.yul\":14548:14550   */\n      0x40\n        /* \"#utility.yul\":14537:14546   */\n      dup3\n        /* \"#utility.yul\":14533:14551   */\n      add\n        /* \"#utility.yul\":14525:14551   */\n      swap1\n      pop\n        /* \"#utility.yul\":14561:14632   */\n      tag_473\n        /* \"#utility.yul\":14629:14630   */\n      0x00\n        /* \"#utility.yul\":14618:14627   */\n      dup4\n        /* \"#utility.yul\":14614:14631   */\n      add\n        /* \"#utility.yul\":14605:14611   */\n      dup6\n        /* \"#utility.yul\":14561:14632   */\n      tag_283\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":14642:14714   */\n      tag_474\n        /* \"#utility.yul\":14710:14712   */\n      0x20\n        /* \"#utility.yul\":14699:14708   */\n      dup4\n        /* \"#utility.yul\":14695:14713   */\n      add\n        /* \"#utility.yul\":14686:14692   */\n      dup5\n        /* \"#utility.yul\":14642:14714   */\n      tag_271\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":14389:14721   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207e72c599d82903b29b1af61abf6b94663099371996f78837b10422a80ce169ec64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1078": {
									"entryPoint": null,
									"id": 1078,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 627,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_18_by_1_to_t_uint8_fromStack": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_18_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_18_by_1": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_18_by_1_to_t_uint8": {
									"entryPoint": 1115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3028:10",
										"nodeType": "YulBlock",
										"src": "0:3028:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:32:10",
													"nodeType": "YulBlock",
													"src": "379:32:10",
													"statements": [
														{
															"nativeSrc": "389:16:10",
															"nodeType": "YulAssignment",
															"src": "389:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:10",
																"nodeType": "YulIdentifier",
																"src": "400:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:77:10"
											},
											{
												"body": {
													"nativeSrc": "460:79:10",
													"nodeType": "YulBlock",
													"src": "460:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:10",
																"nodeType": "YulBlock",
																"src": "517:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:10",
																					"nodeType": "YulLiteral",
																					"src": "526:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:10",
																					"nodeType": "YulLiteral",
																					"src": "529:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:10"
																			},
																			"nativeSrc": "519:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:10"
																		},
																		"nativeSrc": "519:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:10"
																				},
																				"nativeSrc": "490:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:10"
																		},
																		"nativeSrc": "480:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:10"
																},
																"nativeSrc": "473:43:10",
																"nodeType": "YulFunctionCall",
																"src": "473:43:10"
															},
															"nativeSrc": "470:63:10",
															"nodeType": "YulIf",
															"src": "470:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:10",
														"nodeType": "YulTypedName",
														"src": "453:5:10",
														"type": ""
													}
												],
												"src": "417:122:10"
											},
											{
												"body": {
													"nativeSrc": "608:80:10",
													"nodeType": "YulBlock",
													"src": "608:80:10",
													"statements": [
														{
															"nativeSrc": "618:22:10",
															"nodeType": "YulAssignment",
															"src": "618:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:10"
																},
																"nativeSrc": "627:13:10",
																"nodeType": "YulFunctionCall",
																"src": "627:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:10"
																},
																"nativeSrc": "649:33:10",
																"nodeType": "YulFunctionCall",
																"src": "649:33:10"
															},
															"nativeSrc": "649:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:10",
														"nodeType": "YulTypedName",
														"src": "586:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:10",
														"nodeType": "YulTypedName",
														"src": "594:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:10",
														"nodeType": "YulTypedName",
														"src": "602:5:10",
														"type": ""
													}
												],
												"src": "545:143:10"
											},
											{
												"body": {
													"nativeSrc": "739:81:10",
													"nodeType": "YulBlock",
													"src": "739:81:10",
													"statements": [
														{
															"nativeSrc": "749:65:10",
															"nodeType": "YulAssignment",
															"src": "749:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:10",
																		"nodeType": "YulLiteral",
																		"src": "771:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:10"
																},
																"nativeSrc": "760:54:10",
																"nodeType": "YulFunctionCall",
																"src": "760:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:10",
														"nodeType": "YulTypedName",
														"src": "721:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:10",
														"nodeType": "YulTypedName",
														"src": "731:7:10",
														"type": ""
													}
												],
												"src": "694:126:10"
											},
											{
												"body": {
													"nativeSrc": "871:51:10",
													"nodeType": "YulBlock",
													"src": "871:51:10",
													"statements": [
														{
															"nativeSrc": "881:35:10",
															"nodeType": "YulAssignment",
															"src": "881:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "910:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "892:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:10"
																},
																"nativeSrc": "892:24:10",
																"nodeType": "YulFunctionCall",
																"src": "892:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "881:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "826:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "853:5:10",
														"nodeType": "YulTypedName",
														"src": "853:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "863:7:10",
														"nodeType": "YulTypedName",
														"src": "863:7:10",
														"type": ""
													}
												],
												"src": "826:96:10"
											},
											{
												"body": {
													"nativeSrc": "971:79:10",
													"nodeType": "YulBlock",
													"src": "971:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:10",
																"nodeType": "YulBlock",
																"src": "1028:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:10"
																			},
																			"nativeSrc": "1030:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:10"
																		},
																		"nativeSrc": "1030:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1001:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:10"
																				},
																				"nativeSrc": "1001:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:10"
																		},
																		"nativeSrc": "991:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:10"
																},
																"nativeSrc": "984:43:10",
																"nodeType": "YulFunctionCall",
																"src": "984:43:10"
															},
															"nativeSrc": "981:63:10",
															"nodeType": "YulIf",
															"src": "981:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "928:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:10",
														"nodeType": "YulTypedName",
														"src": "964:5:10",
														"type": ""
													}
												],
												"src": "928:122:10"
											},
											{
												"body": {
													"nativeSrc": "1119:80:10",
													"nodeType": "YulBlock",
													"src": "1119:80:10",
													"statements": [
														{
															"nativeSrc": "1129:22:10",
															"nodeType": "YulAssignment",
															"src": "1129:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:10"
																},
																"nativeSrc": "1138:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1160:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:10"
																},
																"nativeSrc": "1160:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:10"
															},
															"nativeSrc": "1160:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1056:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:10",
														"nodeType": "YulTypedName",
														"src": "1097:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:10",
														"nodeType": "YulTypedName",
														"src": "1105:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:10",
														"nodeType": "YulTypedName",
														"src": "1113:5:10",
														"type": ""
													}
												],
												"src": "1056:143:10"
											},
											{
												"body": {
													"nativeSrc": "1316:552:10",
													"nodeType": "YulBlock",
													"src": "1316:552:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:10",
																"nodeType": "YulBlock",
																"src": "1362:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:10"
																			},
																			"nativeSrc": "1364:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:10"
																		},
																		"nativeSrc": "1364:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:10"
																		},
																		"nativeSrc": "1333:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:10"
																},
																"nativeSrc": "1329:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:10"
															},
															"nativeSrc": "1326:119:10",
															"nodeType": "YulIf",
															"src": "1326:119:10"
														},
														{
															"nativeSrc": "1455:128:10",
															"nodeType": "YulBlock",
															"src": "1455:128:10",
															"statements": [
																{
																	"nativeSrc": "1470:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:10"
																				},
																				"nativeSrc": "1541:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1509:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:10"
																		},
																		"nativeSrc": "1509:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:10",
															"nodeType": "YulBlock",
															"src": "1593:129:10",
															"statements": [
																{
																	"nativeSrc": "1608:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:10"
																				},
																				"nativeSrc": "1680:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1648:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:10"
																		},
																		"nativeSrc": "1648:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:10",
															"nodeType": "YulBlock",
															"src": "1732:129:10",
															"statements": [
																{
																	"nativeSrc": "1747:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:10"
																				},
																				"nativeSrc": "1819:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1787:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:10"
																		},
																		"nativeSrc": "1787:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address_fromMemory",
												"nativeSrc": "1205:663:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:10",
														"nodeType": "YulTypedName",
														"src": "1270:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:10",
														"nodeType": "YulTypedName",
														"src": "1281:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:10",
														"nodeType": "YulTypedName",
														"src": "1293:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:10",
														"nodeType": "YulTypedName",
														"src": "1301:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:10",
														"nodeType": "YulTypedName",
														"src": "1309:6:10",
														"type": ""
													}
												],
												"src": "1205:663:10"
											},
											{
												"body": {
													"nativeSrc": "1939:53:10",
													"nodeType": "YulBlock",
													"src": "1939:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1956:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1979:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1979:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1961:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1961:17:10"
																		},
																		"nativeSrc": "1961:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1949:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:10"
																},
																"nativeSrc": "1949:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1949:37:10"
															},
															"nativeSrc": "1949:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1949:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1874:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1927:5:10",
														"nodeType": "YulTypedName",
														"src": "1927:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1934:3:10",
														"nodeType": "YulTypedName",
														"src": "1934:3:10",
														"type": ""
													}
												],
												"src": "1874:118:10"
											},
											{
												"body": {
													"nativeSrc": "2096:124:10",
													"nodeType": "YulBlock",
													"src": "2096:124:10",
													"statements": [
														{
															"nativeSrc": "2106:26:10",
															"nodeType": "YulAssignment",
															"src": "2106:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2118:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2118:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2129:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2114:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:10"
																},
																"nativeSrc": "2114:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2114:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2106:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2106:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2186:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2199:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2199:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2210:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2210:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2195:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:10"
																		},
																		"nativeSrc": "2195:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2142:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2142:43:10"
																},
																"nativeSrc": "2142:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2142:71:10"
															},
															"nativeSrc": "2142:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2142:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1998:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2068:9:10",
														"nodeType": "YulTypedName",
														"src": "2068:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2080:6:10",
														"nodeType": "YulTypedName",
														"src": "2080:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2091:4:10",
														"nodeType": "YulTypedName",
														"src": "2091:4:10",
														"type": ""
													}
												],
												"src": "1998:222:10"
											},
											{
												"body": {
													"nativeSrc": "2280:32:10",
													"nodeType": "YulBlock",
													"src": "2280:32:10",
													"statements": [
														{
															"nativeSrc": "2290:16:10",
															"nodeType": "YulAssignment",
															"src": "2290:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2301:5:10",
																"nodeType": "YulIdentifier",
																"src": "2301:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2290:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2290:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_18_by_1",
												"nativeSrc": "2226:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2262:5:10",
														"nodeType": "YulTypedName",
														"src": "2262:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2272:7:10",
														"nodeType": "YulTypedName",
														"src": "2272:7:10",
														"type": ""
													}
												],
												"src": "2226:86:10"
											},
											{
												"body": {
													"nativeSrc": "2361:43:10",
													"nodeType": "YulBlock",
													"src": "2361:43:10",
													"statements": [
														{
															"nativeSrc": "2371:27:10",
															"nodeType": "YulAssignment",
															"src": "2371:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2386:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2386:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2393:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2393:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2382:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2382:3:10"
																},
																"nativeSrc": "2382:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2382:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2371:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2371:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2318:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2343:5:10",
														"nodeType": "YulTypedName",
														"src": "2343:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2353:7:10",
														"nodeType": "YulTypedName",
														"src": "2353:7:10",
														"type": ""
													}
												],
												"src": "2318:86:10"
											},
											{
												"body": {
													"nativeSrc": "2442:28:10",
													"nodeType": "YulBlock",
													"src": "2442:28:10",
													"statements": [
														{
															"nativeSrc": "2452:12:10",
															"nodeType": "YulAssignment",
															"src": "2452:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "2459:5:10",
																"nodeType": "YulIdentifier",
																"src": "2459:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2452:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2452:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2410:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2428:5:10",
														"nodeType": "YulTypedName",
														"src": "2428:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2438:3:10",
														"nodeType": "YulTypedName",
														"src": "2438:3:10",
														"type": ""
													}
												],
												"src": "2410:60:10"
											},
											{
												"body": {
													"nativeSrc": "2543:89:10",
													"nodeType": "YulBlock",
													"src": "2543:89:10",
													"statements": [
														{
															"nativeSrc": "2553:73:10",
															"nodeType": "YulAssignment",
															"src": "2553:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2618:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2618:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_18_by_1",
																					"nativeSrc": "2591:26:10",
																					"nodeType": "YulIdentifier",
																					"src": "2591:26:10"
																				},
																				"nativeSrc": "2591:33:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2591:33:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2582:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "2582:8:10"
																		},
																		"nativeSrc": "2582:43:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2582:43:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "2566:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "2566:15:10"
																},
																"nativeSrc": "2566:60:10",
																"nodeType": "YulFunctionCall",
																"src": "2566:60:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2553:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2553:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_18_by_1_to_t_uint8",
												"nativeSrc": "2476:156:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2523:5:10",
														"nodeType": "YulTypedName",
														"src": "2523:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2533:9:10",
														"nodeType": "YulTypedName",
														"src": "2533:9:10",
														"type": ""
													}
												],
												"src": "2476:156:10"
											},
											{
												"body": {
													"nativeSrc": "2710:73:10",
													"nodeType": "YulBlock",
													"src": "2710:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2727:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2727:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2770:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2770:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_18_by_1_to_t_uint8",
																			"nativeSrc": "2732:37:10",
																			"nodeType": "YulIdentifier",
																			"src": "2732:37:10"
																		},
																		"nativeSrc": "2732:44:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2732:44:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2720:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2720:6:10"
																},
																"nativeSrc": "2720:57:10",
																"nodeType": "YulFunctionCall",
																"src": "2720:57:10"
															},
															"nativeSrc": "2720:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "2720:57:10"
														}
													]
												},
												"name": "abi_encode_t_rational_18_by_1_to_t_uint8_fromStack",
												"nativeSrc": "2638:145:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2698:5:10",
														"nodeType": "YulTypedName",
														"src": "2698:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2705:3:10",
														"nodeType": "YulTypedName",
														"src": "2705:3:10",
														"type": ""
													}
												],
												"src": "2638:145:10"
											},
											{
												"body": {
													"nativeSrc": "2894:131:10",
													"nodeType": "YulBlock",
													"src": "2894:131:10",
													"statements": [
														{
															"nativeSrc": "2904:26:10",
															"nodeType": "YulAssignment",
															"src": "2904:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2916:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2916:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2927:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2927:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2912:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2912:3:10"
																},
																"nativeSrc": "2912:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2912:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2904:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2904:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2991:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2991:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3004:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3004:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3015:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3015:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3000:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3000:3:10"
																		},
																		"nativeSrc": "3000:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3000:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_18_by_1_to_t_uint8_fromStack",
																	"nativeSrc": "2940:50:10",
																	"nodeType": "YulIdentifier",
																	"src": "2940:50:10"
																},
																"nativeSrc": "2940:78:10",
																"nodeType": "YulFunctionCall",
																"src": "2940:78:10"
															},
															"nativeSrc": "2940:78:10",
															"nodeType": "YulExpressionStatement",
															"src": "2940:78:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_18_by_1__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2789:236:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2866:9:10",
														"nodeType": "YulTypedName",
														"src": "2866:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2878:6:10",
														"nodeType": "YulTypedName",
														"src": "2878:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2889:4:10",
														"nodeType": "YulTypedName",
														"src": "2889:4:10",
														"type": ""
													}
												],
												"src": "2789:236:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_18_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_18_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_18_by_1(value)))\n    }\n\n    function abi_encode_t_rational_18_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_18_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_18_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_18_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b506040516126a83803806126a8833981810160405281019061003191906103c5565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610424565b60405180910390fd5b6100b18161027360201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361012257806040517f18378d8c0000000000000000000000000000000000000000000000000000000081526004016101199190610424565b60405180910390fd5b82608081815250508160a0818152505060405180604001604052808273ffffffffffffffffffffffffffffffffffffffff168152602001601260ff1681525060055f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548160ff021916908360ff1602179055509050508073ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f6d28000829e988111dfd4f9075c2dc3f734e48013bc94e9ffbc8e523687314d76012604051610263919061048b565b60405180910390a35050506104a4565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f819050919050565b61034a81610338565b8114610354575f5ffd5b50565b5f8151905061036581610341565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103948261036b565b9050919050565b6103a48161038a565b81146103ae575f5ffd5b50565b5f815190506103bf8161039b565b92915050565b5f5f5f606084860312156103dc576103db610334565b5b5f6103e986828701610357565b93505060206103fa86828701610357565b925050604061040b868287016103b1565b9150509250925092565b61041e8161038a565b82525050565b5f6020820190506104375f830184610415565b92915050565b5f819050919050565b5f60ff82169050919050565b5f819050919050565b5f61047561047061046b8461043d565b610452565b610446565b9050919050565b6104858161045b565b82525050565b5f60208201905061049e5f83018461047c565b92915050565b60805160a0516121c76104e15f395f8181610ab50152818161109501526110be01525f8181610594015281816105c0015261079901526121c75ff3fe608060405260043610610138575f3560e01c8063a734f06e116100aa578063dccd58e31161006e578063dccd58e314610450578063edd2f1901461048c578063f2fde38b146104b6578063f3fef3a3146104de578063fc5c96ee14610506578063fee4aaeb1461054357610182565b8063a734f06e1461035a578063b2343b1c14610384578063cac2e25f146103ae578063cb67e3b1146103d8578063d4fac45d1461041457610182565b80634bfdfa6f116100fc5780634bfdfa6f146102765780636b251a0b146102a0578063715018a6146102ca57806382d2f5b1146102e05780638da5cb5b1461030857806395ccea671461033257610182565b80630ccee433146101b45780632a6daba3146101de5780632f6ee6951461021a578063338b5dea14610244578063439370b11461026c57610182565b36610182575f3403610176576040517f3f36295200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101805f3461056b565b005b6040517f9437e2a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3480156101bf575f5ffd5b506101c8610797565b6040516101d591906119b7565b60405180910390f35b3480156101e9575f5ffd5b5061020460048036038101906101ff9190611a58565b6107bb565b60405161021191906119b7565b60405180910390f35b348015610225575f5ffd5b5061022e6109aa565b60405161023b9190611ab1565b60405180910390f35b34801561024f575f5ffd5b5061026a60048036038101906102659190611a58565b6109af565b005b610274610a5d565b005b348015610281575f5ffd5b5061028a610aa2565b60405161029791906119b7565b60405180910390f35b3480156102ab575f5ffd5b506102b4610ab3565b6040516102c191906119b7565b60405180910390f35b3480156102d5575f5ffd5b506102de610ad7565b005b3480156102eb575f5ffd5b5061030660048036038101906103019190611aca565b610aea565b005b348015610313575f5ffd5b5061031c610c46565b6040516103299190611b17565b60405180910390f35b34801561033d575f5ffd5b5061035860048036038101906103539190611a58565b610c6d565b005b348015610365575f5ffd5b5061036e610d7d565b60405161037b9190611b17565b60405180910390f35b34801561038f575f5ffd5b50610398610d81565b6040516103a591906119b7565b60405180910390f35b3480156103b9575f5ffd5b506103c2610d87565b6040516103cf91906119b7565b60405180910390f35b3480156103e3575f5ffd5b506103fe60048036038101906103f99190611b30565b610d8d565b60405161040b9190611ba6565b60405180910390f35b34801561041f575f5ffd5b5061043a60048036038101906104359190611aca565b610e54565b60405161044791906119b7565b60405180910390f35b34801561045b575f5ffd5b5061047660048036038101906104719190611aca565b610ed6565b60405161048391906119b7565b60405180910390f35b348015610497575f5ffd5b506104a0610ef6565b6040516104ad91906119b7565b60405180910390f35b3480156104c1575f5ffd5b506104dc60048036038101906104d79190611b30565b610efc565b005b3480156104e9575f5ffd5b5061050460048036038101906104ff9190611a58565b610f80565b005b348015610511575f5ffd5b5061052c60048036038101906105279190611b30565b611343565b60405161053a929190611bbf565b60405180910390f35b34801561054e575f5ffd5b5061056960048036038101906105649190611c10565b61138e565b005b610574826115b2565b5f61057f83836107bb565b90505f816001546105909190611c8d565b90507f000000000000000000000000000000000000000000000000000000000000000081111561061d57600154827f00000000000000000000000000000000000000000000000000000000000000006040517fc4a0472300000000000000000000000000000000000000000000000000000000815260040161061493929190611cc0565b60405180910390fd5b8260045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106a49190611c8d565b925050819055508060018190555060025f8154809291906106c490611cf5565b91905055505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461072a576107293330858773ffffffffffffffffffffffffffffffffffffffff16611683909392919063ffffffff16565b5b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff5681f9d0db1b911ac18ee83d515a1cf1051853a9eae418316a2fdf7dea427c58585604051610789929190611d3c565b60405180910390a350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f82036107cb575f90506109a4565b5f60055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900460ff1660ff1660ff168152505090505f73ffffffffffffffffffffffffffffffffffffffff16815f015173ffffffffffffffffffffffffffffffffffffffff16036108f957836040517ffb21d4aa0000000000000000000000000000000000000000000000000000000081526004016108f09190611b17565b60405180910390fd5b5f815f015190505f8173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561094a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061096e9190611de9565b505050915050826020015160ff16600a6109889190611f8f565b81866109949190611fd9565b61099e9190612047565b93505050505b92915050565b600881565b805f81036109e9576040517f3f36295200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a4e576040517f633bfff400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a58838361056b565b505050565b5f3403610a96576040517f3f36295200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610aa05f3461056b565b565b6008600a610ab09190612077565b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b610adf611705565b610ae85f61178c565b565b610af2611705565b610afb826115b2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b6b57806040517f18378d8c000000000000000000000000000000000000000000000000000000008152600401610b629190611b17565b60405180910390fd5b8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fbdc29f691f539931aac0eb61b6040016944303cd36b1493f9bc5d3f74e10c8e260405160405180910390a35050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c75611705565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d4d575f3373ffffffffffffffffffffffffffffffffffffffff1682604051610ccd906120ee565b5f6040518083038185875af1925050503d805f8114610d07576040519150601f19603f3d011682016040523d82523d5f602084013e610d0c565b606091505b5050905080610d47576040517f2ae871a500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610d79565b610d7833828473ffffffffffffffffffffffffffffffffffffffff1661184d9092919063ffffffff16565b5b5050565b5f81565b60035481565b60025481565b610d9561196e565b60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900460ff1660ff1660ff16815250509050919050565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6004602052815f5260405f20602052805f5260405f205f91509150505481565b60015481565b610f04611705565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f74575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f6b9190611b17565b60405180910390fd5b610f7d8161178c565b50565b805f8103610fba576040517f3f36295200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610fc3836115b2565b5f60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050808311156110865782816040517f61965c4e00000000000000000000000000000000000000000000000000000000815260040161107d929190611d3c565b60405180910390fd5b5f61109185856107bb565b90507f000000000000000000000000000000000000000000000000000000000000000081111561111a57807f00000000000000000000000000000000000000000000000000000000000000006040517f8672a832000000000000000000000000000000000000000000000000000000008152600401611111929190611d3c565b60405180910390fd5b83826111269190612102565b60045f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060015f8282546111b39190612102565b9250508190555060035f8154809291906111cc90611cf5565b91905055505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036112a9575f3373ffffffffffffffffffffffffffffffffffffffff1685604051611229906120ee565b5f6040518083038185875af1925050503d805f8114611263576040519150601f19603f3d011682016040523d82523d5f602084013e611268565b606091505b50509050806112a3576040517f2ae871a500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506112d5565b6112d433858773ffffffffffffffffffffffffffffffffffffffff1661184d9092919063ffffffff16565b5b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f91fb9d98b786c57d74c099ccd2beca1739e9f6a81fb49001ca465c4b7591bbe28684604051611334929190611d3c565b60405180910390a35050505050565b6005602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900460ff16905082565b611396611705565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361140657826040517ffb21d4aa0000000000000000000000000000000000000000000000000000000081526004016113fd9190611b17565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361147657816040517f18378d8c00000000000000000000000000000000000000000000000000000000815260040161146d9190611b17565b60405180910390fd5b60405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018260ff1681525060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548160ff021916908360ff1602179055509050508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f6d28000829e988111dfd4f9075c2dc3f734e48013bc94e9ffbc8e523687314d7836040516115a59190611ab1565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff1660055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361168057806040517ffb21d4aa0000000000000000000000000000000000000000000000000000000081526004016116779190611b17565b60405180910390fd5b50565b6116ff848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016116b893929190612135565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118cc565b50505050565b61170d611967565b73ffffffffffffffffffffffffffffffffffffffff1661172b610c46565b73ffffffffffffffffffffffffffffffffffffffff161461178a5761174e611967565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016117819190611b17565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6118c7838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161188092919061216a565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118cc565b505050565b5f5f60205f8451602086015f885af1806118eb576040513d5f823e3d81fd5b3d92505f519150505f821461190457600181141561191f565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561196157836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016119589190611b17565b60405180910390fd5b50505050565b5f33905090565b60405180604001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f60ff1681525090565b5f819050919050565b6119b18161199f565b82525050565b5f6020820190506119ca5f8301846119a8565b92915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119fd826119d4565b9050919050565b611a0d816119f3565b8114611a17575f5ffd5b50565b5f81359050611a2881611a04565b92915050565b611a378161199f565b8114611a41575f5ffd5b50565b5f81359050611a5281611a2e565b92915050565b5f5f60408385031215611a6e57611a6d6119d0565b5b5f611a7b85828601611a1a565b9250506020611a8c85828601611a44565b9150509250929050565b5f60ff82169050919050565b611aab81611a96565b82525050565b5f602082019050611ac45f830184611aa2565b92915050565b5f5f60408385031215611ae057611adf6119d0565b5b5f611aed85828601611a1a565b9250506020611afe85828601611a1a565b9150509250929050565b611b11816119f3565b82525050565b5f602082019050611b2a5f830184611b08565b92915050565b5f60208284031215611b4557611b446119d0565b5b5f611b5284828501611a1a565b91505092915050565b611b64816119f3565b82525050565b611b7381611a96565b82525050565b604082015f820151611b8d5f850182611b5b565b506020820151611ba06020850182611b6a565b50505050565b5f604082019050611bb95f830184611b79565b92915050565b5f604082019050611bd25f830185611b08565b611bdf6020830184611aa2565b9392505050565b611bef81611a96565b8114611bf9575f5ffd5b50565b5f81359050611c0a81611be6565b92915050565b5f5f5f60608486031215611c2757611c266119d0565b5b5f611c3486828701611a1a565b9350506020611c4586828701611a1a565b9250506040611c5686828701611bfc565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c978261199f565b9150611ca28361199f565b9250828201905080821115611cba57611cb9611c60565b5b92915050565b5f606082019050611cd35f8301866119a8565b611ce060208301856119a8565b611ced60408301846119a8565b949350505050565b5f611cff8261199f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d3157611d30611c60565b5b600182019050919050565b5f604082019050611d4f5f8301856119a8565b611d5c60208301846119a8565b9392505050565b5f69ffffffffffffffffffff82169050919050565b611d8181611d63565b8114611d8b575f5ffd5b50565b5f81519050611d9c81611d78565b92915050565b5f819050919050565b611db481611da2565b8114611dbe575f5ffd5b50565b5f81519050611dcf81611dab565b92915050565b5f81519050611de381611a2e565b92915050565b5f5f5f5f5f60a08688031215611e0257611e016119d0565b5b5f611e0f88828901611d8e565b9550506020611e2088828901611dc1565b9450506040611e3188828901611dd5565b9350506060611e4288828901611dd5565b9250506080611e5388828901611d8e565b9150509295509295909350565b5f8160011c9050919050565b5f5f8291508390505b6001851115611eb557808604811115611e9157611e90611c60565b5b6001851615611ea05780820291505b8081029050611eae85611e60565b9450611e75565b94509492505050565b5f82611ecd5760019050611f88565b81611eda575f9050611f88565b8160018114611ef05760028114611efa57611f29565b6001915050611f88565b60ff841115611f0c57611f0b611c60565b5b8360020a915084821115611f2357611f22611c60565b5b50611f88565b5060208310610133831016604e8410600b8410161715611f5e5782820a905083811115611f5957611f58611c60565b5b611f88565b611f6b8484846001611e6c565b92509050818404811115611f8257611f81611c60565b5b81810290505b9392505050565b5f611f998261199f565b9150611fa48361199f565b9250611fd17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611ebe565b905092915050565b5f611fe38261199f565b9150611fee8361199f565b9250828202611ffc8161199f565b9150828204841483151761201357612012611c60565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6120518261199f565b915061205c8361199f565b92508261206c5761206b61201a565b5b828204905092915050565b5f6120818261199f565b915061208c83611a96565b92506120b97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611ebe565b905092915050565b5f81905092915050565b50565b5f6120d95f836120c1565b91506120e4826120cb565b5f82019050919050565b5f6120f8826120ce565b9150819050919050565b5f61210c8261199f565b91506121178361199f565b925082820390508181111561212f5761212e611c60565b5b92915050565b5f6060820190506121485f830186611b08565b6121556020830185611b08565b61216260408301846119a8565b949350505050565b5f60408201905061217d5f830185611b08565b61218a60208301846119a8565b939250505056fea26469706673582212207e72c599d82903b29b1af61abf6b94663099371996f78837b10422a80ce169ec64736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x26A8 CODESIZE SUB DUP1 PUSH2 0x26A8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x3C5 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x273 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x122 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x18378D8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x12 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0x5 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6D28000829E988111DFD4F9075C2DC3F734E48013BC94E9FFBC8E523687314D7 PUSH1 0x12 PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x4A4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34A DUP2 PUSH2 0x338 JUMP JUMPDEST DUP2 EQ PUSH2 0x354 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x365 DUP2 PUSH2 0x341 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x394 DUP3 PUSH2 0x36B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A4 DUP2 PUSH2 0x38A JUMP JUMPDEST DUP2 EQ PUSH2 0x3AE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3BF DUP2 PUSH2 0x39B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3DC JUMPI PUSH2 0x3DB PUSH2 0x334 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3E9 DUP7 DUP3 DUP8 ADD PUSH2 0x357 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3FA DUP7 DUP3 DUP8 ADD PUSH2 0x357 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x40B DUP7 DUP3 DUP8 ADD PUSH2 0x3B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x41E DUP2 PUSH2 0x38A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x437 PUSH0 DUP4 ADD DUP5 PUSH2 0x415 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x475 PUSH2 0x470 PUSH2 0x46B DUP5 PUSH2 0x43D JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x485 DUP2 PUSH2 0x45B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49E PUSH0 DUP4 ADD DUP5 PUSH2 0x47C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x21C7 PUSH2 0x4E1 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xAB5 ADD MSTORE DUP2 DUP2 PUSH2 0x1095 ADD MSTORE PUSH2 0x10BE ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x594 ADD MSTORE DUP2 DUP2 PUSH2 0x5C0 ADD MSTORE PUSH2 0x799 ADD MSTORE PUSH2 0x21C7 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x138 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA734F06E GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xDCCD58E3 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDCCD58E3 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xEDD2F190 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xFC5C96EE EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xFEE4AAEB EQ PUSH2 0x543 JUMPI PUSH2 0x182 JUMP JUMPDEST DUP1 PUSH4 0xA734F06E EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xB2343B1C EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xCAC2E25F EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xCB67E3B1 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xD4FAC45D EQ PUSH2 0x414 JUMPI PUSH2 0x182 JUMP JUMPDEST DUP1 PUSH4 0x4BFDFA6F GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x4BFDFA6F EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x6B251A0B EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x82D2F5B1 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x332 JUMPI PUSH2 0x182 JUMP JUMPDEST DUP1 PUSH4 0xCCEE433 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x2A6DABA3 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x2F6EE695 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x338B5DEA EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x439370B1 EQ PUSH2 0x26C JUMPI PUSH2 0x182 JUMP JUMPDEST CALLDATASIZE PUSH2 0x182 JUMPI PUSH0 CALLVALUE SUB PUSH2 0x176 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x180 PUSH0 CALLVALUE PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9437E2A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH2 0xA5D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B4 PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2DE PUSH2 0xAD7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0xC6D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x36E PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x398 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3C2 PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x476 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4A0 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0xEFC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x504 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0xF80 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x511 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x52C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53A SWAP3 SWAP2 SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x569 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x564 SWAP2 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x138E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x574 DUP3 PUSH2 0x15B2 JUMP JUMPDEST PUSH0 PUSH2 0x57F DUP4 DUP4 PUSH2 0x7BB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x1 SLOAD PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x61D JUMPI PUSH1 0x1 SLOAD DUP3 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xC4A0472300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6C4 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x72A JUMPI PUSH2 0x729 CALLER ADDRESS DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1683 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5681F9D0DB1B911AC18EE83D515A1CF1051853A9EAE418316A2FDF7DEA427C5 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x789 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 DUP3 SUB PUSH2 0x7CB JUMPI PUSH0 SWAP1 POP PUSH2 0x9A4 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8F9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB21D4AA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F0 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH0 ADD MLOAD SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x94A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x96E SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND PUSH1 0xA PUSH2 0x988 SWAP2 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST DUP2 DUP7 PUSH2 0x994 SWAP2 SWAP1 PUSH2 0x1FD9 JUMP JUMPDEST PUSH2 0x99E SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x633BFFF400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA58 DUP4 DUP4 PUSH2 0x56B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLVALUE SUB PUSH2 0xA96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA0 PUSH0 CALLVALUE PUSH2 0x56B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0xA PUSH2 0xAB0 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xADF PUSH2 0x1705 JUMP JUMPDEST PUSH2 0xAE8 PUSH0 PUSH2 0x178C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAF2 PUSH2 0x1705 JUMP JUMPDEST PUSH2 0xAFB DUP3 PUSH2 0x15B2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB6B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x18378D8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBDC29F691F539931AAC0EB61B6040016944303CD36B1493F9BC5D3F74E10C8E2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC75 PUSH2 0x1705 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD4D JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xCCD SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD07 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2AE871A500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xD79 JUMP JUMPDEST PUSH2 0xD78 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x184D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD95 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF04 PUSH2 0x1705 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF74 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6B SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF7D DUP2 PUSH2 0x178C JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0xFBA JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC3 DUP4 PUSH2 0x15B2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0x1086 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0x61965C4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107D SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1091 DUP6 DUP6 PUSH2 0x7BB JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x111A JUMPI DUP1 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x8672A83200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1111 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH2 0x1126 SWAP2 SWAP1 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11B3 SWAP2 SWAP1 PUSH2 0x2102 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x11CC SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A9 JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1229 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2AE871A500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0x12D4 CALLER DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x184D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x91FB9D98B786C57D74C099CCD2BECA1739E9F6A81FB49001CA465C4B7591BBE2 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1334 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1396 PUSH2 0x1705 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1406 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xFB21D4AA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FD SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1476 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x18378D8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146D SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6D28000829E988111DFD4F9075C2DC3F734E48013BC94E9FFBC8E523687314D7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15A5 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1680 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xFB21D4AA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1677 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x16FF DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18CC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x170D PUSH2 0x1967 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172B PUSH2 0xC46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x178A JUMPI PUSH2 0x174E PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1781 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x18C7 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1880 SWAP3 SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x18EB JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1904 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x191F JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1961 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1958 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B1 DUP2 PUSH2 0x199F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19CA PUSH0 DUP4 ADD DUP5 PUSH2 0x19A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19FD DUP3 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0D DUP2 PUSH2 0x19F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A17 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A28 DUP2 PUSH2 0x1A04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A37 DUP2 PUSH2 0x199F JUMP JUMPDEST DUP2 EQ PUSH2 0x1A41 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A52 DUP2 PUSH2 0x1A2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6E JUMPI PUSH2 0x1A6D PUSH2 0x19D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A7B DUP6 DUP3 DUP7 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A8C DUP6 DUP3 DUP7 ADD PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AAB DUP2 PUSH2 0x1A96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AC4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE0 JUMPI PUSH2 0x1ADF PUSH2 0x19D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AED DUP6 DUP3 DUP7 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AFE DUP6 DUP3 DUP7 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B11 DUP2 PUSH2 0x19F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2A PUSH0 DUP4 ADD DUP5 PUSH2 0x1B08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B45 JUMPI PUSH2 0x1B44 PUSH2 0x19D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B52 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B64 DUP2 PUSH2 0x19F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B73 DUP2 PUSH2 0x1A96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1B8D PUSH0 DUP6 ADD DUP3 PUSH2 0x1B5B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1BA0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1B6A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BB9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BD2 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x1BDF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AA2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1BEF DUP2 PUSH2 0x1A96 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C0A DUP2 PUSH2 0x1BE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C27 JUMPI PUSH2 0x1C26 PUSH2 0x19D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C34 DUP7 DUP3 DUP8 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C45 DUP7 DUP3 DUP8 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C56 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C97 DUP3 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA2 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CBA JUMPI PUSH2 0x1CB9 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CD3 PUSH0 DUP4 ADD DUP7 PUSH2 0x19A8 JUMP JUMPDEST PUSH2 0x1CE0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19A8 JUMP JUMPDEST PUSH2 0x1CED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19A8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CFF DUP3 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1D31 JUMPI PUSH2 0x1D30 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D4F PUSH0 DUP4 ADD DUP6 PUSH2 0x19A8 JUMP JUMPDEST PUSH2 0x1D5C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D81 DUP2 PUSH2 0x1D63 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D8B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D9C DUP2 PUSH2 0x1D78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB4 DUP2 PUSH2 0x1DA2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DBE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DCF DUP2 PUSH2 0x1DAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DE3 DUP2 PUSH2 0x1A2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E02 JUMPI PUSH2 0x1E01 PUSH2 0x19D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E0F DUP9 DUP3 DUP10 ADD PUSH2 0x1D8E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1E20 DUP9 DUP3 DUP10 ADD PUSH2 0x1DC1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1E31 DUP9 DUP3 DUP10 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1E42 DUP9 DUP3 DUP10 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1E53 DUP9 DUP3 DUP10 ADD PUSH2 0x1D8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1EB5 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1E91 JUMPI PUSH2 0x1E90 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1EA0 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1EAE DUP6 PUSH2 0x1E60 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E75 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1ECD JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1F88 JUMP JUMPDEST DUP2 PUSH2 0x1EDA JUMPI PUSH0 SWAP1 POP PUSH2 0x1F88 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1EF0 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1EFA JUMPI PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F0C JUMPI PUSH2 0x1F0B PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1F23 JUMPI PUSH2 0x1F22 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1F88 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F5E JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1F59 JUMPI PUSH2 0x1F58 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x1F6B DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1E6C JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1F82 JUMPI PUSH2 0x1F81 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F99 DUP3 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA4 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP3 POP PUSH2 0x1FD1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1EBE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE3 DUP3 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEE DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FFC DUP2 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2013 JUMPI PUSH2 0x2012 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2051 DUP3 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x205C DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x206C JUMPI PUSH2 0x206B PUSH2 0x201A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2081 DUP3 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x208C DUP4 PUSH2 0x1A96 JUMP JUMPDEST SWAP3 POP PUSH2 0x20B9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1EBE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x20D9 PUSH0 DUP4 PUSH2 0x20C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20E4 DUP3 PUSH2 0x20CB JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20F8 DUP3 PUSH2 0x20CE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x210C DUP3 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x2117 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x212F JUMPI PUSH2 0x212E PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2148 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x2155 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x2162 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19A8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x217D PUSH0 DUP4 ADD DUP6 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x218A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x72C599D82903B29B1AF61ABF6B94663099371996F78837B10422A80CE169EC PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "384:13984:9:-:0;;;5187:653;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5317:10;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;5372:1:9::1;5344:30;;:16;:30;;::::0;5340:114:::1;;5425:16;5398:44;;;;;;;;;;;:::i;:::-;;;;;;;;5340:114;5481:11;5466:26;;;;::::0;::::1;5526:19;5503:42;;;;::::0;::::1;5642:127;;;;;;;;5680:16;5642:127;;;;;;5721:2;5642:127;;;;::::0;5613:13:::1;:26;1243:1;5613:26;;;;;;;;;;;;;;;:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5811:16;5785:47;;1243:1;5785:47;;;5829:2;5785:47;;;;;;:::i;:::-;;;;;;;;5187:653:::0;;;384:13984;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:10:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:118::-;1961:24;1979:5;1961:24;:::i;:::-;1956:3;1949:37;1874:118;;:::o;1998:222::-;2091:4;2129:2;2118:9;2114:18;2106:26;;2142:71;2210:1;2199:9;2195:17;2186:6;2142:71;:::i;:::-;1998:222;;;;:::o;2226:86::-;2272:7;2301:5;2290:16;;2226:86;;;:::o;2318:::-;2353:7;2393:4;2386:5;2382:16;2371:27;;2318:86;;;:::o;2410:60::-;2438:3;2459:5;2452:12;;2410:60;;;:::o;2476:156::-;2533:9;2566:60;2582:43;2591:33;2618:5;2591:33;:::i;:::-;2582:43;:::i;:::-;2566:60;:::i;:::-;2553:73;;2476:156;;;:::o;2638:145::-;2732:44;2770:5;2732:44;:::i;:::-;2727:3;2720:57;2638:145;;:::o;2789:236::-;2889:4;2927:2;2916:9;2912:18;2904:26;;2940:78;3015:1;3004:9;3000:17;2991:6;2940:78;:::i;:::-;2789:236;;;;:::o;384:13984:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ETH_ADDRESS_893": {
									"entryPoint": 3453,
									"id": 893,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USD_DECIMALS_897": {
									"entryPoint": 2474,
									"id": 897,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USD_PRECISION_903": {
									"entryPoint": 2722,
									"id": 903,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1566": {
									"entryPoint": null,
									"id": 1566,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1574": {
									"entryPoint": null,
									"id": 1574,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_783": {
									"entryPoint": 6348,
									"id": 783,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_130": {
									"entryPoint": 5893,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkTokenAllowed_1553": {
									"entryPoint": 5554,
									"id": 1553,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_handleDeposit_1194": {
									"entryPoint": 1387,
									"id": 1194,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_837": {
									"entryPoint": 6503,
									"id": 837,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_192": {
									"entryPoint": 6028,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowToken_1450": {
									"entryPoint": 5006,
									"id": 1450,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@depositEth_1091": {
									"entryPoint": 2653,
									"id": 1091,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositToken_1115": {
									"entryPoint": 2479,
									"id": 1115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_1531": {
									"entryPoint": 3181,
									"id": 1531,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getBalance_1388": {
									"entryPoint": 3668,
									"id": 1388,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getTokenConfig_1402": {
									"entryPoint": 3469,
									"id": 1402,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenValueUSD_1371": {
									"entryPoint": 1979,
									"id": 1371,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@i_bankCapUSD_906": {
									"entryPoint": 1943,
									"id": 906,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@i_withdrawalLimitUSD_909": {
									"entryPoint": 2739,
									"id": 909,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_113": {
									"entryPoint": 3142,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_144": {
									"entryPoint": 2775,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_balances_925": {
									"entryPoint": 3798,
									"id": 925,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_depositCount_915": {
									"entryPoint": 3463,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_tokenConfig_931": {
									"entryPoint": 4931,
									"id": 931,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_totalBankValueUSD_912": {
									"entryPoint": 3830,
									"id": 912,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_withdrawalCount_918": {
									"entryPoint": 3457,
									"id": 918,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_433": {
									"entryPoint": 5763,
									"id": 433,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_406": {
									"entryPoint": 6221,
									"id": 406,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_172": {
									"entryPoint": 3836,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateTokenPriceFeed_1489": {
									"entryPoint": 2794,
									"id": 1489,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_1303": {
									"entryPoint": 3968,
									"id": 1303,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 7617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 7164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 7566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint8": {
									"entryPoint": 7184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 7657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 7003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_TokenConfig_$886_memory_ptr_to_t_struct$_TokenConfig_$886_memory_ptr_fromStack": {
									"entryPoint": 7033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8": {
									"entryPoint": 7018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8501,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8554,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": 7103,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_TokenConfig_$886_memory_ptr__to_t_struct$_TokenConfig_$886_memory_ptr__fromStack_reversed": {
									"entryPoint": 7078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7484,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7360,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7788,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 8311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7870,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 7586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 7523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7264,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6608,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 7776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 8395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 7595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 7142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 7544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14724:10",
										"nodeType": "YulBlock",
										"src": "0:14724:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:10",
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nativeSrc": "62:16:10",
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:10",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nativeSrc": "155:53:10",
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nativeSrc": "177:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nativeSrc": "165:37:10",
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nativeSrc": "165:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:10",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:10",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nativeSrc": "312:124:10",
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nativeSrc": "322:26:10",
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:10",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nativeSrc": "330:18:10",
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:10",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nativeSrc": "411:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nativeSrc": "358:71:10",
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nativeSrc": "358:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:10",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:10",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:10",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nativeSrc": "482:35:10",
													"nodeType": "YulBlock",
													"src": "482:35:10",
													"statements": [
														{
															"nativeSrc": "492:19:10",
															"nodeType": "YulAssignment",
															"src": "492:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:10",
																		"nodeType": "YulLiteral",
																		"src": "508:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:10"
																},
																"nativeSrc": "502:9:10",
																"nodeType": "YulFunctionCall",
																"src": "502:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:10",
														"nodeType": "YulTypedName",
														"src": "475:6:10",
														"type": ""
													}
												],
												"src": "442:75:10"
											},
											{
												"body": {
													"nativeSrc": "612:28:10",
													"nodeType": "YulBlock",
													"src": "612:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:10",
																		"nodeType": "YulLiteral",
																		"src": "629:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:10",
																		"nodeType": "YulLiteral",
																		"src": "632:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:10"
																},
																"nativeSrc": "622:12:10",
																"nodeType": "YulFunctionCall",
																"src": "622:12:10"
															},
															"nativeSrc": "622:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:10"
											},
											{
												"body": {
													"nativeSrc": "735:28:10",
													"nodeType": "YulBlock",
													"src": "735:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:10",
																		"nodeType": "YulLiteral",
																		"src": "752:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:10",
																		"nodeType": "YulLiteral",
																		"src": "755:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:10"
																},
																"nativeSrc": "745:12:10",
																"nodeType": "YulFunctionCall",
																"src": "745:12:10"
															},
															"nativeSrc": "745:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:10"
											},
											{
												"body": {
													"nativeSrc": "814:81:10",
													"nodeType": "YulBlock",
													"src": "814:81:10",
													"statements": [
														{
															"nativeSrc": "824:65:10",
															"nodeType": "YulAssignment",
															"src": "824:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:10",
																		"nodeType": "YulLiteral",
																		"src": "846:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:10"
																},
																"nativeSrc": "835:54:10",
																"nodeType": "YulFunctionCall",
																"src": "835:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:10",
														"nodeType": "YulTypedName",
														"src": "796:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:10",
														"nodeType": "YulTypedName",
														"src": "806:7:10",
														"type": ""
													}
												],
												"src": "769:126:10"
											},
											{
												"body": {
													"nativeSrc": "946:51:10",
													"nodeType": "YulBlock",
													"src": "946:51:10",
													"statements": [
														{
															"nativeSrc": "956:35:10",
															"nodeType": "YulAssignment",
															"src": "956:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:10"
																},
																"nativeSrc": "967:24:10",
																"nodeType": "YulFunctionCall",
																"src": "967:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:10",
														"nodeType": "YulTypedName",
														"src": "928:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:10",
														"nodeType": "YulTypedName",
														"src": "938:7:10",
														"type": ""
													}
												],
												"src": "901:96:10"
											},
											{
												"body": {
													"nativeSrc": "1046:79:10",
													"nodeType": "YulBlock",
													"src": "1046:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:10",
																"nodeType": "YulBlock",
																"src": "1103:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:10"
																			},
																			"nativeSrc": "1105:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:10"
																		},
																		"nativeSrc": "1105:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:10"
																				},
																				"nativeSrc": "1076:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:10"
																		},
																		"nativeSrc": "1066:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:10"
																},
																"nativeSrc": "1059:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:10"
															},
															"nativeSrc": "1056:63:10",
															"nodeType": "YulIf",
															"src": "1056:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:10",
														"nodeType": "YulTypedName",
														"src": "1039:5:10",
														"type": ""
													}
												],
												"src": "1003:122:10"
											},
											{
												"body": {
													"nativeSrc": "1183:87:10",
													"nodeType": "YulBlock",
													"src": "1183:87:10",
													"statements": [
														{
															"nativeSrc": "1193:29:10",
															"nodeType": "YulAssignment",
															"src": "1193:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:10"
																},
																"nativeSrc": "1202:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:10"
																},
																"nativeSrc": "1231:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:10"
															},
															"nativeSrc": "1231:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:10",
														"nodeType": "YulTypedName",
														"src": "1161:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:10",
														"nodeType": "YulTypedName",
														"src": "1169:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:10",
														"nodeType": "YulTypedName",
														"src": "1177:5:10",
														"type": ""
													}
												],
												"src": "1131:139:10"
											},
											{
												"body": {
													"nativeSrc": "1319:79:10",
													"nodeType": "YulBlock",
													"src": "1319:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1376:16:10",
																"nodeType": "YulBlock",
																"src": "1376:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:10"
																			},
																			"nativeSrc": "1378:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:10"
																		},
																		"nativeSrc": "1378:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1342:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1367:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1349:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:10"
																				},
																				"nativeSrc": "1349:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1339:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:10"
																		},
																		"nativeSrc": "1339:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1332:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:10"
																},
																"nativeSrc": "1332:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1332:43:10"
															},
															"nativeSrc": "1329:63:10",
															"nodeType": "YulIf",
															"src": "1329:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1276:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:10",
														"nodeType": "YulTypedName",
														"src": "1312:5:10",
														"type": ""
													}
												],
												"src": "1276:122:10"
											},
											{
												"body": {
													"nativeSrc": "1456:87:10",
													"nodeType": "YulBlock",
													"src": "1456:87:10",
													"statements": [
														{
															"nativeSrc": "1466:29:10",
															"nodeType": "YulAssignment",
															"src": "1466:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1488:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1475:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:10"
																},
																"nativeSrc": "1475:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1475:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1466:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1531:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1504:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:10"
																},
																"nativeSrc": "1504:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1504:33:10"
															},
															"nativeSrc": "1504:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1404:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1434:6:10",
														"nodeType": "YulTypedName",
														"src": "1434:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1442:3:10",
														"nodeType": "YulTypedName",
														"src": "1442:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1450:5:10",
														"nodeType": "YulTypedName",
														"src": "1450:5:10",
														"type": ""
													}
												],
												"src": "1404:139:10"
											},
											{
												"body": {
													"nativeSrc": "1632:391:10",
													"nodeType": "YulBlock",
													"src": "1632:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1678:83:10",
																"nodeType": "YulBlock",
																"src": "1678:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1680:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1680:77:10"
																			},
																			"nativeSrc": "1680:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1680:79:10"
																		},
																		"nativeSrc": "1680:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1680:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1653:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1653:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1662:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1649:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1649:3:10"
																		},
																		"nativeSrc": "1649:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1649:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1674:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1674:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1645:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:10"
																},
																"nativeSrc": "1645:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1645:32:10"
															},
															"nativeSrc": "1642:119:10",
															"nodeType": "YulIf",
															"src": "1642:119:10"
														},
														{
															"nativeSrc": "1771:117:10",
															"nodeType": "YulBlock",
															"src": "1771:117:10",
															"statements": [
																{
																	"nativeSrc": "1786:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1786:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1800:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1790:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1790:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1815:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1815:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1850:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1850:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1861:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1861:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1846:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:10"
																				},
																				"nativeSrc": "1846:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1846:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1870:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1825:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1825:20:10"
																		},
																		"nativeSrc": "1825:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1825:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1815:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1815:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1898:118:10",
															"nodeType": "YulBlock",
															"src": "1898:118:10",
															"statements": [
																{
																	"nativeSrc": "1913:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1913:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1927:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1917:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1917:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1943:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1943:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1978:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1989:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1974:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:10"
																				},
																				"nativeSrc": "1974:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1998:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1953:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:10"
																		},
																		"nativeSrc": "1953:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1943:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1549:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1594:9:10",
														"nodeType": "YulTypedName",
														"src": "1594:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1605:7:10",
														"nodeType": "YulTypedName",
														"src": "1605:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1617:6:10",
														"nodeType": "YulTypedName",
														"src": "1617:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1625:6:10",
														"nodeType": "YulTypedName",
														"src": "1625:6:10",
														"type": ""
													}
												],
												"src": "1549:474:10"
											},
											{
												"body": {
													"nativeSrc": "2072:43:10",
													"nodeType": "YulBlock",
													"src": "2072:43:10",
													"statements": [
														{
															"nativeSrc": "2082:27:10",
															"nodeType": "YulAssignment",
															"src": "2082:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2097:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2097:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2104:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2104:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2093:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:10"
																},
																"nativeSrc": "2093:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2093:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2082:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2082:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2029:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2054:5:10",
														"nodeType": "YulTypedName",
														"src": "2054:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2064:7:10",
														"nodeType": "YulTypedName",
														"src": "2064:7:10",
														"type": ""
													}
												],
												"src": "2029:86:10"
											},
											{
												"body": {
													"nativeSrc": "2182:51:10",
													"nodeType": "YulBlock",
													"src": "2182:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2199:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2199:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2220:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2220:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "2204:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "2204:15:10"
																		},
																		"nativeSrc": "2204:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2204:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2192:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2192:6:10"
																},
																"nativeSrc": "2192:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2192:35:10"
															},
															"nativeSrc": "2192:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "2192:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "2121:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2170:5:10",
														"nodeType": "YulTypedName",
														"src": "2170:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2177:3:10",
														"nodeType": "YulTypedName",
														"src": "2177:3:10",
														"type": ""
													}
												],
												"src": "2121:112:10"
											},
											{
												"body": {
													"nativeSrc": "2333:120:10",
													"nodeType": "YulBlock",
													"src": "2333:120:10",
													"statements": [
														{
															"nativeSrc": "2343:26:10",
															"nodeType": "YulAssignment",
															"src": "2343:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2355:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2355:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2366:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2366:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2351:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2351:3:10"
																},
																"nativeSrc": "2351:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2351:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2343:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2343:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2419:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2419:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2432:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2432:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2443:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2443:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2428:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2428:3:10"
																		},
																		"nativeSrc": "2428:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2428:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "2379:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "2379:39:10"
																},
																"nativeSrc": "2379:67:10",
																"nodeType": "YulFunctionCall",
																"src": "2379:67:10"
															},
															"nativeSrc": "2379:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "2379:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2239:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2305:9:10",
														"nodeType": "YulTypedName",
														"src": "2305:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2317:6:10",
														"nodeType": "YulTypedName",
														"src": "2317:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2328:4:10",
														"nodeType": "YulTypedName",
														"src": "2328:4:10",
														"type": ""
													}
												],
												"src": "2239:214:10"
											},
											{
												"body": {
													"nativeSrc": "2542:391:10",
													"nodeType": "YulBlock",
													"src": "2542:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2588:83:10",
																"nodeType": "YulBlock",
																"src": "2588:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2590:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2590:77:10"
																			},
																			"nativeSrc": "2590:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2590:79:10"
																		},
																		"nativeSrc": "2590:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2590:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2563:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2563:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2572:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2572:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2559:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2559:3:10"
																		},
																		"nativeSrc": "2559:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2559:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2584:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2584:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2555:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2555:3:10"
																},
																"nativeSrc": "2555:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2555:32:10"
															},
															"nativeSrc": "2552:119:10",
															"nodeType": "YulIf",
															"src": "2552:119:10"
														},
														{
															"nativeSrc": "2681:117:10",
															"nodeType": "YulBlock",
															"src": "2681:117:10",
															"statements": [
																{
																	"nativeSrc": "2696:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2696:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2710:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2710:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2700:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2700:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2725:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2725:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2760:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2760:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2771:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2771:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2756:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2756:3:10"
																				},
																				"nativeSrc": "2756:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2756:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2780:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2780:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2735:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2735:20:10"
																		},
																		"nativeSrc": "2735:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2735:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2725:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2725:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2808:118:10",
															"nodeType": "YulBlock",
															"src": "2808:118:10",
															"statements": [
																{
																	"nativeSrc": "2823:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2823:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2837:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2837:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2827:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2827:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2853:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2853:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2888:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2899:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2884:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:10"
																				},
																				"nativeSrc": "2884:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2908:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2863:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:10"
																		},
																		"nativeSrc": "2863:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2853:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2459:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2504:9:10",
														"nodeType": "YulTypedName",
														"src": "2504:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2515:7:10",
														"nodeType": "YulTypedName",
														"src": "2515:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2527:6:10",
														"nodeType": "YulTypedName",
														"src": "2527:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2535:6:10",
														"nodeType": "YulTypedName",
														"src": "2535:6:10",
														"type": ""
													}
												],
												"src": "2459:474:10"
											},
											{
												"body": {
													"nativeSrc": "3004:53:10",
													"nodeType": "YulBlock",
													"src": "3004:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3021:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3021:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3044:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3044:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3026:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3026:17:10"
																		},
																		"nativeSrc": "3026:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3026:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3014:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3014:6:10"
																},
																"nativeSrc": "3014:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3014:37:10"
															},
															"nativeSrc": "3014:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3014:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2939:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2992:5:10",
														"nodeType": "YulTypedName",
														"src": "2992:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2999:3:10",
														"nodeType": "YulTypedName",
														"src": "2999:3:10",
														"type": ""
													}
												],
												"src": "2939:118:10"
											},
											{
												"body": {
													"nativeSrc": "3161:124:10",
													"nodeType": "YulBlock",
													"src": "3161:124:10",
													"statements": [
														{
															"nativeSrc": "3171:26:10",
															"nodeType": "YulAssignment",
															"src": "3171:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3183:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3183:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3194:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3194:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3179:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3179:3:10"
																},
																"nativeSrc": "3179:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3179:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3171:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3171:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3251:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3251:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3264:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3264:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3275:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3275:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3260:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:10"
																		},
																		"nativeSrc": "3260:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3260:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3207:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3207:43:10"
																},
																"nativeSrc": "3207:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3207:71:10"
															},
															"nativeSrc": "3207:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3207:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3063:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3133:9:10",
														"nodeType": "YulTypedName",
														"src": "3133:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3145:6:10",
														"nodeType": "YulTypedName",
														"src": "3145:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3156:4:10",
														"nodeType": "YulTypedName",
														"src": "3156:4:10",
														"type": ""
													}
												],
												"src": "3063:222:10"
											},
											{
												"body": {
													"nativeSrc": "3357:263:10",
													"nodeType": "YulBlock",
													"src": "3357:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3403:83:10",
																"nodeType": "YulBlock",
																"src": "3403:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3405:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3405:77:10"
																			},
																			"nativeSrc": "3405:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3405:79:10"
																		},
																		"nativeSrc": "3405:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3405:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3378:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3378:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3387:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3387:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3374:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3374:3:10"
																		},
																		"nativeSrc": "3374:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3374:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3399:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3399:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3370:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3370:3:10"
																},
																"nativeSrc": "3370:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3370:32:10"
															},
															"nativeSrc": "3367:119:10",
															"nodeType": "YulIf",
															"src": "3367:119:10"
														},
														{
															"nativeSrc": "3496:117:10",
															"nodeType": "YulBlock",
															"src": "3496:117:10",
															"statements": [
																{
																	"nativeSrc": "3511:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3511:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3525:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3525:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3515:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3515:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3540:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3540:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3575:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3575:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3586:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3586:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3571:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3571:3:10"
																				},
																				"nativeSrc": "3571:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3571:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3595:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3595:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3550:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3550:20:10"
																		},
																		"nativeSrc": "3550:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3550:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3540:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3540:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3291:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3327:9:10",
														"nodeType": "YulTypedName",
														"src": "3327:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3338:7:10",
														"nodeType": "YulTypedName",
														"src": "3338:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3350:6:10",
														"nodeType": "YulTypedName",
														"src": "3350:6:10",
														"type": ""
													}
												],
												"src": "3291:329:10"
											},
											{
												"body": {
													"nativeSrc": "3681:53:10",
													"nodeType": "YulBlock",
													"src": "3681:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3698:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3698:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3721:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3721:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3703:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3703:17:10"
																		},
																		"nativeSrc": "3703:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3703:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3691:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3691:6:10"
																},
																"nativeSrc": "3691:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3691:37:10"
															},
															"nativeSrc": "3691:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3691:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "3626:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3669:5:10",
														"nodeType": "YulTypedName",
														"src": "3669:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3676:3:10",
														"nodeType": "YulTypedName",
														"src": "3676:3:10",
														"type": ""
													}
												],
												"src": "3626:108:10"
											},
											{
												"body": {
													"nativeSrc": "3791:51:10",
													"nodeType": "YulBlock",
													"src": "3791:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3808:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3808:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3829:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3829:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "3813:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "3813:15:10"
																		},
																		"nativeSrc": "3813:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3813:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3801:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3801:6:10"
																},
																"nativeSrc": "3801:35:10",
																"nodeType": "YulFunctionCall",
																"src": "3801:35:10"
															},
															"nativeSrc": "3801:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "3801:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8",
												"nativeSrc": "3740:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3779:5:10",
														"nodeType": "YulTypedName",
														"src": "3779:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3786:3:10",
														"nodeType": "YulTypedName",
														"src": "3786:3:10",
														"type": ""
													}
												],
												"src": "3740:102:10"
											},
											{
												"body": {
													"nativeSrc": "4036:396:10",
													"nodeType": "YulBlock",
													"src": "4036:396:10",
													"statements": [
														{
															"nativeSrc": "4046:26:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4046:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4062:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4062:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4067:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4067:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4058:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4058:3:10"
																},
																"nativeSrc": "4058:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4058:14:10"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "4050:4:10",
																	"nodeType": "YulTypedName",
																	"src": "4050:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4082:169:10",
															"nodeType": "YulBlock",
															"src": "4082:169:10",
															"statements": [
																{
																	"nativeSrc": "4122:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4122:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4152:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4152:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4159:4:10",
																						"nodeType": "YulLiteral",
																						"src": "4159:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4148:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4148:3:10"
																				},
																				"nativeSrc": "4148:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4148:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4142:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4142:5:10"
																		},
																		"nativeSrc": "4142:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4142:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4126:12:10",
																			"nodeType": "YulTypedName",
																			"src": "4126:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4212:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "4212:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4230:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4230:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4235:4:10",
																						"nodeType": "YulLiteral",
																						"src": "4235:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4226:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4226:3:10"
																				},
																				"nativeSrc": "4226:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4226:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4178:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "4178:33:10"
																		},
																		"nativeSrc": "4178:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4178:63:10"
																	},
																	"nativeSrc": "4178:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "4178:63:10"
																}
															]
														},
														{
															"nativeSrc": "4261:164:10",
															"nodeType": "YulBlock",
															"src": "4261:164:10",
															"statements": [
																{
																	"nativeSrc": "4300:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4300:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4330:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4330:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4337:4:10",
																						"nodeType": "YulLiteral",
																						"src": "4337:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4326:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4326:3:10"
																				},
																				"nativeSrc": "4326:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4326:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4320:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4320:5:10"
																		},
																		"nativeSrc": "4320:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4320:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4304:12:10",
																			"nodeType": "YulTypedName",
																			"src": "4304:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4386:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "4386:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4404:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4404:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4409:4:10",
																						"nodeType": "YulLiteral",
																						"src": "4409:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4400:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4400:3:10"
																				},
																				"nativeSrc": "4400:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4400:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint8_to_t_uint8",
																			"nativeSrc": "4356:29:10",
																			"nodeType": "YulIdentifier",
																			"src": "4356:29:10"
																		},
																		"nativeSrc": "4356:59:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4356:59:10"
																	},
																	"nativeSrc": "4356:59:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "4356:59:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_TokenConfig_$886_memory_ptr_to_t_struct$_TokenConfig_$886_memory_ptr_fromStack",
												"nativeSrc": "3914:518:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4023:5:10",
														"nodeType": "YulTypedName",
														"src": "4023:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4030:3:10",
														"nodeType": "YulTypedName",
														"src": "4030:3:10",
														"type": ""
													}
												],
												"src": "3914:518:10"
											},
											{
												"body": {
													"nativeSrc": "4592:180:10",
													"nodeType": "YulBlock",
													"src": "4592:180:10",
													"statements": [
														{
															"nativeSrc": "4602:26:10",
															"nodeType": "YulAssignment",
															"src": "4602:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4614:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4614:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4625:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4625:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4610:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4610:3:10"
																},
																"nativeSrc": "4610:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4610:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4602:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4602:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4738:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4738:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4751:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4751:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4762:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4762:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4747:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4747:3:10"
																		},
																		"nativeSrc": "4747:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4747:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_TokenConfig_$886_memory_ptr_to_t_struct$_TokenConfig_$886_memory_ptr_fromStack",
																	"nativeSrc": "4638:99:10",
																	"nodeType": "YulIdentifier",
																	"src": "4638:99:10"
																},
																"nativeSrc": "4638:127:10",
																"nodeType": "YulFunctionCall",
																"src": "4638:127:10"
															},
															"nativeSrc": "4638:127:10",
															"nodeType": "YulExpressionStatement",
															"src": "4638:127:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_TokenConfig_$886_memory_ptr__to_t_struct$_TokenConfig_$886_memory_ptr__fromStack_reversed",
												"nativeSrc": "4438:334:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4564:9:10",
														"nodeType": "YulTypedName",
														"src": "4564:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4576:6:10",
														"nodeType": "YulTypedName",
														"src": "4576:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4587:4:10",
														"nodeType": "YulTypedName",
														"src": "4587:4:10",
														"type": ""
													}
												],
												"src": "4438:334:10"
											},
											{
												"body": {
													"nativeSrc": "4900:202:10",
													"nodeType": "YulBlock",
													"src": "4900:202:10",
													"statements": [
														{
															"nativeSrc": "4910:26:10",
															"nodeType": "YulAssignment",
															"src": "4910:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4922:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4922:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4933:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4933:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4918:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4918:3:10"
																},
																"nativeSrc": "4918:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4918:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4910:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4910:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4990:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4990:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5003:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5003:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5014:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5014:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4999:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:10"
																		},
																		"nativeSrc": "4999:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4999:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4946:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4946:43:10"
																},
																"nativeSrc": "4946:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4946:71:10"
															},
															"nativeSrc": "4946:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4946:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5067:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5067:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5080:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5080:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5091:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5091:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5076:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5076:3:10"
																		},
																		"nativeSrc": "5076:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5027:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "5027:39:10"
																},
																"nativeSrc": "5027:68:10",
																"nodeType": "YulFunctionCall",
																"src": "5027:68:10"
															},
															"nativeSrc": "5027:68:10",
															"nodeType": "YulExpressionStatement",
															"src": "5027:68:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed",
												"nativeSrc": "4778:324:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4864:9:10",
														"nodeType": "YulTypedName",
														"src": "4864:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4876:6:10",
														"nodeType": "YulTypedName",
														"src": "4876:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4884:6:10",
														"nodeType": "YulTypedName",
														"src": "4884:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4895:4:10",
														"nodeType": "YulTypedName",
														"src": "4895:4:10",
														"type": ""
													}
												],
												"src": "4778:324:10"
											},
											{
												"body": {
													"nativeSrc": "5149:77:10",
													"nodeType": "YulBlock",
													"src": "5149:77:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5204:16:10",
																"nodeType": "YulBlock",
																"src": "5204:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5213:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5213:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5216:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5216:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5206:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5206:6:10"
																			},
																			"nativeSrc": "5206:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5206:12:10"
																		},
																		"nativeSrc": "5206:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5206:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5172:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5172:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5195:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5195:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "5179:15:10",
																					"nodeType": "YulIdentifier",
																					"src": "5179:15:10"
																				},
																				"nativeSrc": "5179:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5179:22:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5169:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5169:2:10"
																		},
																		"nativeSrc": "5169:33:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5169:33:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5162:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5162:6:10"
																},
																"nativeSrc": "5162:41:10",
																"nodeType": "YulFunctionCall",
																"src": "5162:41:10"
															},
															"nativeSrc": "5159:61:10",
															"nodeType": "YulIf",
															"src": "5159:61:10"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "5108:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5142:5:10",
														"nodeType": "YulTypedName",
														"src": "5142:5:10",
														"type": ""
													}
												],
												"src": "5108:118:10"
											},
											{
												"body": {
													"nativeSrc": "5282:85:10",
													"nodeType": "YulBlock",
													"src": "5282:85:10",
													"statements": [
														{
															"nativeSrc": "5292:29:10",
															"nodeType": "YulAssignment",
															"src": "5292:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5314:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5314:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5301:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "5301:12:10"
																},
																"nativeSrc": "5301:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5301:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5292:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5292:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5355:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5355:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "5330:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "5330:24:10"
																},
																"nativeSrc": "5330:31:10",
																"nodeType": "YulFunctionCall",
																"src": "5330:31:10"
															},
															"nativeSrc": "5330:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "5330:31:10"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "5232:135:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5260:6:10",
														"nodeType": "YulTypedName",
														"src": "5260:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5268:3:10",
														"nodeType": "YulTypedName",
														"src": "5268:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5276:5:10",
														"nodeType": "YulTypedName",
														"src": "5276:5:10",
														"type": ""
													}
												],
												"src": "5232:135:10"
											},
											{
												"body": {
													"nativeSrc": "5471:517:10",
													"nodeType": "YulBlock",
													"src": "5471:517:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5517:83:10",
																"nodeType": "YulBlock",
																"src": "5517:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5519:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5519:77:10"
																			},
																			"nativeSrc": "5519:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5519:79:10"
																		},
																		"nativeSrc": "5519:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5519:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5492:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5501:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5501:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5488:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5488:3:10"
																		},
																		"nativeSrc": "5488:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5488:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5513:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5513:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5484:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5484:3:10"
																},
																"nativeSrc": "5484:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5484:32:10"
															},
															"nativeSrc": "5481:119:10",
															"nodeType": "YulIf",
															"src": "5481:119:10"
														},
														{
															"nativeSrc": "5610:117:10",
															"nodeType": "YulBlock",
															"src": "5610:117:10",
															"statements": [
																{
																	"nativeSrc": "5625:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5625:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5639:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5639:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5629:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5629:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5654:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5654:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5689:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5689:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5700:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5700:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5685:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5685:3:10"
																				},
																				"nativeSrc": "5685:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5685:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5709:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5709:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5664:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5664:20:10"
																		},
																		"nativeSrc": "5664:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5664:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5654:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5654:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5737:118:10",
															"nodeType": "YulBlock",
															"src": "5737:118:10",
															"statements": [
																{
																	"nativeSrc": "5752:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5752:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5766:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5766:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5756:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5756:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5782:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5782:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5817:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5817:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5828:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5828:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5813:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5813:3:10"
																				},
																				"nativeSrc": "5813:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5813:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5837:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5837:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5792:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5792:20:10"
																		},
																		"nativeSrc": "5792:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5792:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5782:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5782:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5865:116:10",
															"nodeType": "YulBlock",
															"src": "5865:116:10",
															"statements": [
																{
																	"nativeSrc": "5880:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5880:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5894:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5894:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5884:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5884:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5910:61:10",
																	"nodeType": "YulAssignment",
																	"src": "5910:61:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5943:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5943:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5954:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5954:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5939:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5939:3:10"
																				},
																				"nativeSrc": "5939:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5939:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5963:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5963:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "5920:18:10",
																			"nodeType": "YulIdentifier",
																			"src": "5920:18:10"
																		},
																		"nativeSrc": "5920:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5920:51:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5910:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5910:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint8",
												"nativeSrc": "5373:615:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5425:9:10",
														"nodeType": "YulTypedName",
														"src": "5425:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5436:7:10",
														"nodeType": "YulTypedName",
														"src": "5436:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5448:6:10",
														"nodeType": "YulTypedName",
														"src": "5448:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5456:6:10",
														"nodeType": "YulTypedName",
														"src": "5456:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5464:6:10",
														"nodeType": "YulTypedName",
														"src": "5464:6:10",
														"type": ""
													}
												],
												"src": "5373:615:10"
											},
											{
												"body": {
													"nativeSrc": "6022:152:10",
													"nodeType": "YulBlock",
													"src": "6022:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6039:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6039:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6042:77:10",
																		"nodeType": "YulLiteral",
																		"src": "6042:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6032:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6032:6:10"
																},
																"nativeSrc": "6032:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6032:88:10"
															},
															"nativeSrc": "6032:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "6032:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6136:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6136:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6139:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6139:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6129:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6129:6:10"
																},
																"nativeSrc": "6129:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6129:15:10"
															},
															"nativeSrc": "6129:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6129:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6160:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6160:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6163:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6163:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6153:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6153:6:10"
																},
																"nativeSrc": "6153:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6153:15:10"
															},
															"nativeSrc": "6153:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6153:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5994:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5994:180:10"
											},
											{
												"body": {
													"nativeSrc": "6224:147:10",
													"nodeType": "YulBlock",
													"src": "6224:147:10",
													"statements": [
														{
															"nativeSrc": "6234:25:10",
															"nodeType": "YulAssignment",
															"src": "6234:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6257:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6257:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6239:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6239:17:10"
																},
																"nativeSrc": "6239:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6239:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6234:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6234:1:10"
																}
															]
														},
														{
															"nativeSrc": "6268:25:10",
															"nodeType": "YulAssignment",
															"src": "6268:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6291:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6291:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6273:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6273:17:10"
																},
																"nativeSrc": "6273:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6273:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6268:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6268:1:10"
																}
															]
														},
														{
															"nativeSrc": "6302:16:10",
															"nodeType": "YulAssignment",
															"src": "6302:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6313:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6313:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6316:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6316:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6309:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6309:3:10"
																},
																"nativeSrc": "6309:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6309:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6302:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6302:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6342:22:10",
																"nodeType": "YulBlock",
																"src": "6342:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6344:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6344:16:10"
																			},
																			"nativeSrc": "6344:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6344:18:10"
																		},
																		"nativeSrc": "6344:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6344:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6334:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6334:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6337:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6337:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6331:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6331:2:10"
																},
																"nativeSrc": "6331:10:10",
																"nodeType": "YulFunctionCall",
																"src": "6331:10:10"
															},
															"nativeSrc": "6328:36:10",
															"nodeType": "YulIf",
															"src": "6328:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6180:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6211:1:10",
														"nodeType": "YulTypedName",
														"src": "6211:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6214:1:10",
														"nodeType": "YulTypedName",
														"src": "6214:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6220:3:10",
														"nodeType": "YulTypedName",
														"src": "6220:3:10",
														"type": ""
													}
												],
												"src": "6180:191:10"
											},
											{
												"body": {
													"nativeSrc": "6531:288:10",
													"nodeType": "YulBlock",
													"src": "6531:288:10",
													"statements": [
														{
															"nativeSrc": "6541:26:10",
															"nodeType": "YulAssignment",
															"src": "6541:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6553:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6553:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6564:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6564:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6549:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6549:3:10"
																},
																"nativeSrc": "6549:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6549:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6541:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6541:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6621:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6621:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6634:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6634:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6645:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6645:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6630:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6630:3:10"
																		},
																		"nativeSrc": "6630:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6630:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6577:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6577:43:10"
																},
																"nativeSrc": "6577:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6577:71:10"
															},
															"nativeSrc": "6577:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6577:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6702:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6702:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6715:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6715:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6726:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6726:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6711:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6711:3:10"
																		},
																		"nativeSrc": "6711:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6711:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6658:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6658:43:10"
																},
																"nativeSrc": "6658:72:10",
																"nodeType": "YulFunctionCall",
																"src": "6658:72:10"
															},
															"nativeSrc": "6658:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "6658:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6784:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6797:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6797:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6808:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6808:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6793:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6793:3:10"
																		},
																		"nativeSrc": "6793:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6793:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6740:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6740:43:10"
																},
																"nativeSrc": "6740:72:10",
																"nodeType": "YulFunctionCall",
																"src": "6740:72:10"
															},
															"nativeSrc": "6740:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "6740:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6377:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6487:9:10",
														"nodeType": "YulTypedName",
														"src": "6487:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6499:6:10",
														"nodeType": "YulTypedName",
														"src": "6499:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6507:6:10",
														"nodeType": "YulTypedName",
														"src": "6507:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6515:6:10",
														"nodeType": "YulTypedName",
														"src": "6515:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6526:4:10",
														"nodeType": "YulTypedName",
														"src": "6526:4:10",
														"type": ""
													}
												],
												"src": "6377:442:10"
											},
											{
												"body": {
													"nativeSrc": "6868:190:10",
													"nodeType": "YulBlock",
													"src": "6868:190:10",
													"statements": [
														{
															"nativeSrc": "6878:33:10",
															"nodeType": "YulAssignment",
															"src": "6878:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6905:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6905:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6887:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6887:17:10"
																},
																"nativeSrc": "6887:24:10",
																"nodeType": "YulFunctionCall",
																"src": "6887:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6878:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6878:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7001:22:10",
																"nodeType": "YulBlock",
																"src": "7001:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7003:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7003:16:10"
																			},
																			"nativeSrc": "7003:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7003:18:10"
																		},
																		"nativeSrc": "7003:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7003:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6926:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6926:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:66:10",
																		"nodeType": "YulLiteral",
																		"src": "6933:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6923:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6923:2:10"
																},
																"nativeSrc": "6923:77:10",
																"nodeType": "YulFunctionCall",
																"src": "6923:77:10"
															},
															"nativeSrc": "6920:103:10",
															"nodeType": "YulIf",
															"src": "6920:103:10"
														},
														{
															"nativeSrc": "7032:20:10",
															"nodeType": "YulAssignment",
															"src": "7032:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7043:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7043:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7050:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7050:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7039:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7039:3:10"
																},
																"nativeSrc": "7039:13:10",
																"nodeType": "YulFunctionCall",
																"src": "7039:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7032:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7032:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "6825:233:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6854:5:10",
														"nodeType": "YulTypedName",
														"src": "6854:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6864:3:10",
														"nodeType": "YulTypedName",
														"src": "6864:3:10",
														"type": ""
													}
												],
												"src": "6825:233:10"
											},
											{
												"body": {
													"nativeSrc": "7190:206:10",
													"nodeType": "YulBlock",
													"src": "7190:206:10",
													"statements": [
														{
															"nativeSrc": "7200:26:10",
															"nodeType": "YulAssignment",
															"src": "7200:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7212:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7212:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7223:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7223:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7208:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7208:3:10"
																},
																"nativeSrc": "7208:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7208:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7200:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7200:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7280:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7280:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7293:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7293:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7304:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7304:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7289:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7289:3:10"
																		},
																		"nativeSrc": "7289:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7289:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7236:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7236:43:10"
																},
																"nativeSrc": "7236:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7236:71:10"
															},
															"nativeSrc": "7236:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7236:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7361:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7361:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7374:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7374:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7385:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7385:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7370:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7370:3:10"
																		},
																		"nativeSrc": "7370:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7370:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7317:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7317:43:10"
																},
																"nativeSrc": "7317:72:10",
																"nodeType": "YulFunctionCall",
																"src": "7317:72:10"
															},
															"nativeSrc": "7317:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "7317:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7064:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7154:9:10",
														"nodeType": "YulTypedName",
														"src": "7154:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7166:6:10",
														"nodeType": "YulTypedName",
														"src": "7166:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7174:6:10",
														"nodeType": "YulTypedName",
														"src": "7174:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7185:4:10",
														"nodeType": "YulTypedName",
														"src": "7185:4:10",
														"type": ""
													}
												],
												"src": "7064:332:10"
											},
											{
												"body": {
													"nativeSrc": "7446:61:10",
													"nodeType": "YulBlock",
													"src": "7446:61:10",
													"statements": [
														{
															"nativeSrc": "7456:45:10",
															"nodeType": "YulAssignment",
															"src": "7456:45:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7471:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7471:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7478:22:10",
																		"nodeType": "YulLiteral",
																		"src": "7478:22:10",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7467:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7467:3:10"
																},
																"nativeSrc": "7467:34:10",
																"nodeType": "YulFunctionCall",
																"src": "7467:34:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7456:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "7456:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "7402:105:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7428:5:10",
														"nodeType": "YulTypedName",
														"src": "7428:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7438:7:10",
														"nodeType": "YulTypedName",
														"src": "7438:7:10",
														"type": ""
													}
												],
												"src": "7402:105:10"
											},
											{
												"body": {
													"nativeSrc": "7555:78:10",
													"nodeType": "YulBlock",
													"src": "7555:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7611:16:10",
																"nodeType": "YulBlock",
																"src": "7611:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7620:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7620:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7623:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7623:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7613:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7613:6:10"
																			},
																			"nativeSrc": "7613:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7613:12:10"
																		},
																		"nativeSrc": "7613:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7613:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7578:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7578:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7602:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "7602:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "7585:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "7585:16:10"
																				},
																				"nativeSrc": "7585:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7585:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7575:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7575:2:10"
																		},
																		"nativeSrc": "7575:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7575:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7568:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7568:6:10"
																},
																"nativeSrc": "7568:42:10",
																"nodeType": "YulFunctionCall",
																"src": "7568:42:10"
															},
															"nativeSrc": "7565:62:10",
															"nodeType": "YulIf",
															"src": "7565:62:10"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "7513:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7548:5:10",
														"nodeType": "YulTypedName",
														"src": "7548:5:10",
														"type": ""
													}
												],
												"src": "7513:120:10"
											},
											{
												"body": {
													"nativeSrc": "7701:79:10",
													"nodeType": "YulBlock",
													"src": "7701:79:10",
													"statements": [
														{
															"nativeSrc": "7711:22:10",
															"nodeType": "YulAssignment",
															"src": "7711:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7726:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7726:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7720:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7720:5:10"
																},
																"nativeSrc": "7720:13:10",
																"nodeType": "YulFunctionCall",
																"src": "7720:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7711:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7711:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7768:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7768:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "7742:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "7742:25:10"
																},
																"nativeSrc": "7742:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7742:32:10"
															},
															"nativeSrc": "7742:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "7742:32:10"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "7639:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7679:6:10",
														"nodeType": "YulTypedName",
														"src": "7679:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7687:3:10",
														"nodeType": "YulTypedName",
														"src": "7687:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7695:5:10",
														"nodeType": "YulTypedName",
														"src": "7695:5:10",
														"type": ""
													}
												],
												"src": "7639:141:10"
											},
											{
												"body": {
													"nativeSrc": "7830:32:10",
													"nodeType": "YulBlock",
													"src": "7830:32:10",
													"statements": [
														{
															"nativeSrc": "7840:16:10",
															"nodeType": "YulAssignment",
															"src": "7840:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "7851:5:10",
																"nodeType": "YulIdentifier",
																"src": "7851:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7840:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "7840:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "7786:76:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7812:5:10",
														"nodeType": "YulTypedName",
														"src": "7812:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7822:7:10",
														"nodeType": "YulTypedName",
														"src": "7822:7:10",
														"type": ""
													}
												],
												"src": "7786:76:10"
											},
											{
												"body": {
													"nativeSrc": "7910:78:10",
													"nodeType": "YulBlock",
													"src": "7910:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7966:16:10",
																"nodeType": "YulBlock",
																"src": "7966:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7975:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7975:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7978:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7978:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7968:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7968:6:10"
																			},
																			"nativeSrc": "7968:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7968:12:10"
																		},
																		"nativeSrc": "7968:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7968:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7933:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7933:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7957:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "7957:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "7940:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "7940:16:10"
																				},
																				"nativeSrc": "7940:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7940:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7930:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7930:2:10"
																		},
																		"nativeSrc": "7930:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7930:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7923:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7923:6:10"
																},
																"nativeSrc": "7923:42:10",
																"nodeType": "YulFunctionCall",
																"src": "7923:42:10"
															},
															"nativeSrc": "7920:62:10",
															"nodeType": "YulIf",
															"src": "7920:62:10"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "7868:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7903:5:10",
														"nodeType": "YulTypedName",
														"src": "7903:5:10",
														"type": ""
													}
												],
												"src": "7868:120:10"
											},
											{
												"body": {
													"nativeSrc": "8056:79:10",
													"nodeType": "YulBlock",
													"src": "8056:79:10",
													"statements": [
														{
															"nativeSrc": "8066:22:10",
															"nodeType": "YulAssignment",
															"src": "8066:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8081:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8081:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8075:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8075:5:10"
																},
																"nativeSrc": "8075:13:10",
																"nodeType": "YulFunctionCall",
																"src": "8075:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8066:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8066:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8123:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8123:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "8097:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "8097:25:10"
																},
																"nativeSrc": "8097:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8097:32:10"
															},
															"nativeSrc": "8097:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "8097:32:10"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "7994:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8034:6:10",
														"nodeType": "YulTypedName",
														"src": "8034:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8042:3:10",
														"nodeType": "YulTypedName",
														"src": "8042:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8050:5:10",
														"nodeType": "YulTypedName",
														"src": "8050:5:10",
														"type": ""
													}
												],
												"src": "7994:141:10"
											},
											{
												"body": {
													"nativeSrc": "8204:80:10",
													"nodeType": "YulBlock",
													"src": "8204:80:10",
													"statements": [
														{
															"nativeSrc": "8214:22:10",
															"nodeType": "YulAssignment",
															"src": "8214:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8229:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8229:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8223:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8223:5:10"
																},
																"nativeSrc": "8223:13:10",
																"nodeType": "YulFunctionCall",
																"src": "8223:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8214:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8214:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8272:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8272:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8245:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "8245:26:10"
																},
																"nativeSrc": "8245:33:10",
																"nodeType": "YulFunctionCall",
																"src": "8245:33:10"
															},
															"nativeSrc": "8245:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "8245:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8141:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8182:6:10",
														"nodeType": "YulTypedName",
														"src": "8182:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8190:3:10",
														"nodeType": "YulTypedName",
														"src": "8190:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8198:5:10",
														"nodeType": "YulTypedName",
														"src": "8198:5:10",
														"type": ""
													}
												],
												"src": "8141:143:10"
											},
											{
												"body": {
													"nativeSrc": "8432:829:10",
													"nodeType": "YulBlock",
													"src": "8432:829:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8479:83:10",
																"nodeType": "YulBlock",
																"src": "8479:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8481:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8481:77:10"
																			},
																			"nativeSrc": "8481:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8481:79:10"
																		},
																		"nativeSrc": "8481:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8481:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8453:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8453:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8462:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8462:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8449:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8449:3:10"
																		},
																		"nativeSrc": "8449:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8449:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8474:3:10",
																		"nodeType": "YulLiteral",
																		"src": "8474:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8445:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8445:3:10"
																},
																"nativeSrc": "8445:33:10",
																"nodeType": "YulFunctionCall",
																"src": "8445:33:10"
															},
															"nativeSrc": "8442:120:10",
															"nodeType": "YulIf",
															"src": "8442:120:10"
														},
														{
															"nativeSrc": "8572:127:10",
															"nodeType": "YulBlock",
															"src": "8572:127:10",
															"statements": [
																{
																	"nativeSrc": "8587:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8587:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8601:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8601:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8591:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8591:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8616:73:10",
																	"nodeType": "YulAssignment",
																	"src": "8616:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8661:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8661:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8672:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8672:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8657:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8657:3:10"
																				},
																				"nativeSrc": "8657:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8657:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8681:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8681:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "8626:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "8626:30:10"
																		},
																		"nativeSrc": "8626:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8626:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8616:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8616:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8709:128:10",
															"nodeType": "YulBlock",
															"src": "8709:128:10",
															"statements": [
																{
																	"nativeSrc": "8724:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8724:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8738:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8738:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8728:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8728:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8754:73:10",
																	"nodeType": "YulAssignment",
																	"src": "8754:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8799:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8799:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8810:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8810:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8795:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8795:3:10"
																				},
																				"nativeSrc": "8795:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8795:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8819:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8819:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "8764:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "8764:30:10"
																		},
																		"nativeSrc": "8764:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8764:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8754:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8754:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8847:129:10",
															"nodeType": "YulBlock",
															"src": "8847:129:10",
															"statements": [
																{
																	"nativeSrc": "8862:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8862:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8876:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8876:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8866:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8866:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8892:74:10",
																	"nodeType": "YulAssignment",
																	"src": "8892:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8938:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8938:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8949:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8949:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8934:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8934:3:10"
																				},
																				"nativeSrc": "8934:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8934:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8958:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8958:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8902:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "8902:31:10"
																		},
																		"nativeSrc": "8902:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8902:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8892:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8892:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8986:129:10",
															"nodeType": "YulBlock",
															"src": "8986:129:10",
															"statements": [
																{
																	"nativeSrc": "9001:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9001:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9015:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9015:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9005:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9005:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9031:74:10",
																	"nodeType": "YulAssignment",
																	"src": "9031:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9077:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9077:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9088:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9088:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9073:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9073:3:10"
																				},
																				"nativeSrc": "9073:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9073:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9097:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9097:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "9041:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "9041:31:10"
																		},
																		"nativeSrc": "9041:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9041:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9031:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9031:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9125:129:10",
															"nodeType": "YulBlock",
															"src": "9125:129:10",
															"statements": [
																{
																	"nativeSrc": "9140:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9140:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9154:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9154:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9144:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9144:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9171:73:10",
																	"nodeType": "YulAssignment",
																	"src": "9171:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9216:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9216:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9227:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9227:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9212:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9212:3:10"
																				},
																				"nativeSrc": "9212:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9212:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9236:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9236:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "9181:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "9181:30:10"
																		},
																		"nativeSrc": "9181:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9181:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "9171:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9171:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "8290:971:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8370:9:10",
														"nodeType": "YulTypedName",
														"src": "8370:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8381:7:10",
														"nodeType": "YulTypedName",
														"src": "8381:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8393:6:10",
														"nodeType": "YulTypedName",
														"src": "8393:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8401:6:10",
														"nodeType": "YulTypedName",
														"src": "8401:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8409:6:10",
														"nodeType": "YulTypedName",
														"src": "8409:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8417:6:10",
														"nodeType": "YulTypedName",
														"src": "8417:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8425:6:10",
														"nodeType": "YulTypedName",
														"src": "8425:6:10",
														"type": ""
													}
												],
												"src": "8290:971:10"
											},
											{
												"body": {
													"nativeSrc": "9318:51:10",
													"nodeType": "YulBlock",
													"src": "9318:51:10",
													"statements": [
														{
															"nativeSrc": "9328:34:10",
															"nodeType": "YulAssignment",
															"src": "9328:34:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9353:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9353:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9356:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9356:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9349:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9349:3:10"
																},
																"nativeSrc": "9349:13:10",
																"nodeType": "YulFunctionCall",
																"src": "9349:13:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9328:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "9328:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9267:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9299:5:10",
														"nodeType": "YulTypedName",
														"src": "9299:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9309:8:10",
														"nodeType": "YulTypedName",
														"src": "9309:8:10",
														"type": ""
													}
												],
												"src": "9267:102:10"
											},
											{
												"body": {
													"nativeSrc": "9448:775:10",
													"nodeType": "YulBlock",
													"src": "9448:775:10",
													"statements": [
														{
															"nativeSrc": "9458:15:10",
															"nodeType": "YulAssignment",
															"src": "9458:15:10",
															"value": {
																"name": "_power",
																"nativeSrc": "9467:6:10",
																"nodeType": "YulIdentifier",
																"src": "9467:6:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9458:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9458:5:10"
																}
															]
														},
														{
															"nativeSrc": "9482:14:10",
															"nodeType": "YulAssignment",
															"src": "9482:14:10",
															"value": {
																"name": "_base",
																"nativeSrc": "9491:5:10",
																"nodeType": "YulIdentifier",
																"src": "9491:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9482:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9482:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9540:677:10",
																"nodeType": "YulBlock",
																"src": "9540:677:10",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "9628:22:10",
																			"nodeType": "YulBlock",
																			"src": "9628:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9630:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "9630:16:10"
																						},
																						"nativeSrc": "9630:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "9630:18:10"
																					},
																					"nativeSrc": "9630:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "9630:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9606:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "9606:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "9616:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "9616:3:10"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "9621:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "9621:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "9612:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "9612:3:10"
																					},
																					"nativeSrc": "9612:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "9612:14:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9603:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "9603:2:10"
																			},
																			"nativeSrc": "9603:24:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9603:24:10"
																		},
																		"nativeSrc": "9600:50:10",
																		"nodeType": "YulIf",
																		"src": "9600:50:10"
																	},
																	{
																		"body": {
																			"nativeSrc": "9695:419:10",
																			"nodeType": "YulBlock",
																			"src": "9695:419:10",
																			"statements": [
																				{
																					"nativeSrc": "10075:25:10",
																					"nodeType": "YulAssignment",
																					"src": "10075:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "10088:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "10088:5:10"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "10095:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "10095:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "10084:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "10084:3:10"
																						},
																						"nativeSrc": "10084:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "10084:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "10075:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "10075:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9670:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "9670:8:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9680:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9666:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9666:3:10"
																			},
																			"nativeSrc": "9666:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9666:16:10"
																		},
																		"nativeSrc": "9663:451:10",
																		"nodeType": "YulIf",
																		"src": "9663:451:10"
																	},
																	{
																		"nativeSrc": "10127:23:10",
																		"nodeType": "YulAssignment",
																		"src": "10127:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10139:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "10139:4:10"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "10145:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "10145:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "10135:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10135:3:10"
																			},
																			"nativeSrc": "10135:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10135:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "10127:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10127:4:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10163:44:10",
																		"nodeType": "YulAssignment",
																		"src": "10163:44:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10198:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "10198:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "10175:22:10",
																				"nodeType": "YulIdentifier",
																				"src": "10175:22:10"
																			},
																			"nativeSrc": "10175:32:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10175:32:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "10163:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "10163:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9516:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "9516:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9526:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9526:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9513:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9513:2:10"
																},
																"nativeSrc": "9513:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9513:15:10"
															},
															"nativeSrc": "9505:712:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9529:2:10",
																"nodeType": "YulBlock",
																"src": "9529:2:10",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9509:3:10",
																"nodeType": "YulBlock",
																"src": "9509:3:10",
																"statements": []
															},
															"src": "9505:712:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9375:848:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "9403:6:10",
														"nodeType": "YulTypedName",
														"src": "9403:6:10",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "9411:5:10",
														"nodeType": "YulTypedName",
														"src": "9411:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9418:8:10",
														"nodeType": "YulTypedName",
														"src": "9418:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9428:3:10",
														"nodeType": "YulTypedName",
														"src": "9428:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9436:5:10",
														"nodeType": "YulTypedName",
														"src": "9436:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "9443:4:10",
														"nodeType": "YulTypedName",
														"src": "9443:4:10",
														"type": ""
													}
												],
												"src": "9375:848:10"
											},
											{
												"body": {
													"nativeSrc": "10289:1013:10",
													"nodeType": "YulBlock",
													"src": "10289:1013:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10484:20:10",
																"nodeType": "YulBlock",
																"src": "10484:20:10",
																"statements": [
																	{
																		"nativeSrc": "10486:10:10",
																		"nodeType": "YulAssignment",
																		"src": "10486:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10495:1:10",
																			"nodeType": "YulLiteral",
																			"src": "10495:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10486:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "10486:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10497:5:10",
																		"nodeType": "YulLeave",
																		"src": "10497:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10474:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "10474:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10467:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10467:6:10"
																},
																"nativeSrc": "10467:16:10",
																"nodeType": "YulFunctionCall",
																"src": "10467:16:10"
															},
															"nativeSrc": "10464:40:10",
															"nodeType": "YulIf",
															"src": "10464:40:10"
														},
														{
															"body": {
																"nativeSrc": "10529:20:10",
																"nodeType": "YulBlock",
																"src": "10529:20:10",
																"statements": [
																	{
																		"nativeSrc": "10531:10:10",
																		"nodeType": "YulAssignment",
																		"src": "10531:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10540:1:10",
																			"nodeType": "YulLiteral",
																			"src": "10540:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10531:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "10531:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10542:5:10",
																		"nodeType": "YulLeave",
																		"src": "10542:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10523:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10523:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10516:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10516:6:10"
																},
																"nativeSrc": "10516:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10516:12:10"
															},
															"nativeSrc": "10513:36:10",
															"nodeType": "YulIf",
															"src": "10513:36:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10659:20:10",
																		"nodeType": "YulBlock",
																		"src": "10659:20:10",
																		"statements": [
																			{
																				"nativeSrc": "10661:10:10",
																				"nodeType": "YulAssignment",
																				"src": "10661:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10670:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10670:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10661:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "10661:5:10"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10672:5:10",
																				"nodeType": "YulLeave",
																				"src": "10672:5:10"
																			}
																		]
																	},
																	"nativeSrc": "10652:27:10",
																	"nodeType": "YulCase",
																	"src": "10652:27:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10657:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10657:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10703:176:10",
																		"nodeType": "YulBlock",
																		"src": "10703:176:10",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "10738:22:10",
																					"nodeType": "YulBlock",
																					"src": "10738:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10740:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "10740:16:10"
																								},
																								"nativeSrc": "10740:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "10740:18:10"
																							},
																							"nativeSrc": "10740:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "10740:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10723:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "10723:8:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10733:3:10",
																							"nodeType": "YulLiteral",
																							"src": "10733:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10720:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "10720:2:10"
																					},
																					"nativeSrc": "10720:17:10",
																					"nodeType": "YulFunctionCall",
																					"src": "10720:17:10"
																				},
																				"nativeSrc": "10717:43:10",
																				"nodeType": "YulIf",
																				"src": "10717:43:10"
																			},
																			{
																				"nativeSrc": "10773:25:10",
																				"nodeType": "YulAssignment",
																				"src": "10773:25:10",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10786:1:10",
																							"nodeType": "YulLiteral",
																							"src": "10786:1:10",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "10789:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "10789:8:10"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "10782:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "10782:3:10"
																					},
																					"nativeSrc": "10782:16:10",
																					"nodeType": "YulFunctionCall",
																					"src": "10782:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10773:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "10773:5:10"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10829:22:10",
																					"nodeType": "YulBlock",
																					"src": "10829:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10831:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "10831:16:10"
																								},
																								"nativeSrc": "10831:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "10831:18:10"
																							},
																							"nativeSrc": "10831:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "10831:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "10817:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "10817:5:10"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "10824:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "10824:3:10"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10814:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "10814:2:10"
																					},
																					"nativeSrc": "10814:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "10814:14:10"
																				},
																				"nativeSrc": "10811:40:10",
																				"nodeType": "YulIf",
																				"src": "10811:40:10"
																			},
																			{
																				"nativeSrc": "10864:5:10",
																				"nodeType": "YulLeave",
																				"src": "10864:5:10"
																			}
																		]
																	},
																	"nativeSrc": "10688:191:10",
																	"nodeType": "YulCase",
																	"src": "10688:191:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10693:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10693:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "10609:4:10",
																"nodeType": "YulIdentifier",
																"src": "10609:4:10"
															},
															"nativeSrc": "10602:277:10",
															"nodeType": "YulSwitch",
															"src": "10602:277:10"
														},
														{
															"body": {
																"nativeSrc": "11011:123:10",
																"nodeType": "YulBlock",
																"src": "11011:123:10",
																"statements": [
																	{
																		"nativeSrc": "11025:28:10",
																		"nodeType": "YulAssignment",
																		"src": "11025:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11038:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "11038:4:10"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "11044:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "11044:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "11034:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "11034:3:10"
																			},
																			"nativeSrc": "11034:19:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11034:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11025:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "11025:5:10"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11084:22:10",
																			"nodeType": "YulBlock",
																			"src": "11084:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11086:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "11086:16:10"
																						},
																						"nativeSrc": "11086:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "11086:18:10"
																					},
																					"nativeSrc": "11086:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "11086:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "11072:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "11072:5:10"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "11079:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11079:3:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11069:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "11069:2:10"
																			},
																			"nativeSrc": "11069:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11069:14:10"
																		},
																		"nativeSrc": "11066:40:10",
																		"nodeType": "YulIf",
																		"src": "11066:40:10"
																	},
																	{
																		"nativeSrc": "11119:5:10",
																		"nodeType": "YulLeave",
																		"src": "11119:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10914:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "10914:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10920:2:10",
																						"nodeType": "YulLiteral",
																						"src": "10920:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10911:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "10911:2:10"
																				},
																				"nativeSrc": "10911:12:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10911:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10928:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "10928:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10938:2:10",
																						"nodeType": "YulLiteral",
																						"src": "10938:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10925:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "10925:2:10"
																				},
																				"nativeSrc": "10925:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10925:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10907:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10907:3:10"
																		},
																		"nativeSrc": "10907:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10907:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10963:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "10963:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10969:3:10",
																						"nodeType": "YulLiteral",
																						"src": "10969:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10960:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "10960:2:10"
																				},
																				"nativeSrc": "10960:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10960:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10978:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "10978:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10988:2:10",
																						"nodeType": "YulLiteral",
																						"src": "10988:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10975:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "10975:2:10"
																				},
																				"nativeSrc": "10975:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10975:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10956:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10956:3:10"
																		},
																		"nativeSrc": "10956:36:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10956:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10891:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10891:2:10"
																},
																"nativeSrc": "10891:111:10",
																"nodeType": "YulFunctionCall",
																"src": "10891:111:10"
															},
															"nativeSrc": "10888:246:10",
															"nodeType": "YulIf",
															"src": "10888:246:10"
														},
														{
															"nativeSrc": "11144:57:10",
															"nodeType": "YulAssignment",
															"src": "11144:57:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11178:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11178:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11181:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11181:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11187:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "11187:8:10"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "11197:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11197:3:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "11159:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "11159:18:10"
																},
																"nativeSrc": "11159:42:10",
																"nodeType": "YulFunctionCall",
																"src": "11159:42:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11144:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11144:5:10"
																},
																{
																	"name": "base",
																	"nativeSrc": "11151:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11151:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11240:22:10",
																"nodeType": "YulBlock",
																"src": "11240:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11242:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "11242:16:10"
																			},
																			"nativeSrc": "11242:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11242:18:10"
																		},
																		"nativeSrc": "11242:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11242:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11217:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11217:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "11228:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "11228:3:10"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "11233:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11233:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "11224:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11224:3:10"
																		},
																		"nativeSrc": "11224:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11224:14:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11214:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "11214:2:10"
																},
																"nativeSrc": "11214:25:10",
																"nodeType": "YulFunctionCall",
																"src": "11214:25:10"
															},
															"nativeSrc": "11211:51:10",
															"nodeType": "YulIf",
															"src": "11211:51:10"
														},
														{
															"nativeSrc": "11271:25:10",
															"nodeType": "YulAssignment",
															"src": "11271:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11284:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11284:5:10"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11291:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11291:4:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11280:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11280:3:10"
																},
																"nativeSrc": "11280:16:10",
																"nodeType": "YulFunctionCall",
																"src": "11280:16:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11271:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11271:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "10229:1073:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10259:4:10",
														"nodeType": "YulTypedName",
														"src": "10259:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10265:8:10",
														"nodeType": "YulTypedName",
														"src": "10265:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10275:3:10",
														"nodeType": "YulTypedName",
														"src": "10275:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10283:5:10",
														"nodeType": "YulTypedName",
														"src": "10283:5:10",
														"type": ""
													}
												],
												"src": "10229:1073:10"
											},
											{
												"body": {
													"nativeSrc": "11374:219:10",
													"nodeType": "YulBlock",
													"src": "11374:219:10",
													"statements": [
														{
															"nativeSrc": "11384:31:10",
															"nodeType": "YulAssignment",
															"src": "11384:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11410:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11410:4:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11392:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11392:17:10"
																},
																"nativeSrc": "11392:23:10",
																"nodeType": "YulFunctionCall",
																"src": "11392:23:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11384:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11384:4:10"
																}
															]
														},
														{
															"nativeSrc": "11424:39:10",
															"nodeType": "YulAssignment",
															"src": "11424:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11454:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "11454:8:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11436:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11436:17:10"
																},
																"nativeSrc": "11436:27:10",
																"nodeType": "YulFunctionCall",
																"src": "11436:27:10"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "11424:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "11424:8:10"
																}
															]
														},
														{
															"nativeSrc": "11473:113:10",
															"nodeType": "YulAssignment",
															"src": "11473:113:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11503:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11503:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11509:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "11509:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11519:66:10",
																		"nodeType": "YulLiteral",
																		"src": "11519:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "11482:20:10",
																	"nodeType": "YulIdentifier",
																	"src": "11482:20:10"
																},
																"nativeSrc": "11482:104:10",
																"nodeType": "YulFunctionCall",
																"src": "11482:104:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11473:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11473:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "11308:285:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "11349:4:10",
														"nodeType": "YulTypedName",
														"src": "11349:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11355:8:10",
														"nodeType": "YulTypedName",
														"src": "11355:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11368:5:10",
														"nodeType": "YulTypedName",
														"src": "11368:5:10",
														"type": ""
													}
												],
												"src": "11308:285:10"
											},
											{
												"body": {
													"nativeSrc": "11647:362:10",
													"nodeType": "YulBlock",
													"src": "11647:362:10",
													"statements": [
														{
															"nativeSrc": "11657:25:10",
															"nodeType": "YulAssignment",
															"src": "11657:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11680:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11680:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11662:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11662:17:10"
																},
																"nativeSrc": "11662:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11662:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11657:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11657:1:10"
																}
															]
														},
														{
															"nativeSrc": "11691:25:10",
															"nodeType": "YulAssignment",
															"src": "11691:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11714:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11714:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11696:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11696:17:10"
																},
																"nativeSrc": "11696:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11696:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11691:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11691:1:10"
																}
															]
														},
														{
															"nativeSrc": "11725:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "11725:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11748:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11748:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11751:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11751:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11744:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11744:3:10"
																},
																"nativeSrc": "11744:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11744:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11729:11:10",
																	"nodeType": "YulTypedName",
																	"src": "11729:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11762:41:10",
															"nodeType": "YulAssignment",
															"src": "11762:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11791:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "11791:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11773:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11773:17:10"
																},
																"nativeSrc": "11773:30:10",
																"nodeType": "YulFunctionCall",
																"src": "11773:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11762:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "11762:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11980:22:10",
																"nodeType": "YulBlock",
																"src": "11980:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11982:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "11982:16:10"
																			},
																			"nativeSrc": "11982:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11982:18:10"
																		},
																		"nativeSrc": "11982:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11982:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11913:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "11913:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11906:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "11906:6:10"
																				},
																				"nativeSrc": "11906:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11906:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11936:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "11936:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11943:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "11943:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11952:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "11952:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11939:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "11939:3:10"
																						},
																						"nativeSrc": "11939:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "11939:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11933:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "11933:2:10"
																				},
																				"nativeSrc": "11933:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11933:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11886:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "11886:2:10"
																		},
																		"nativeSrc": "11886:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11886:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11866:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11866:6:10"
																},
																"nativeSrc": "11866:113:10",
																"nodeType": "YulFunctionCall",
																"src": "11866:113:10"
															},
															"nativeSrc": "11863:139:10",
															"nodeType": "YulIf",
															"src": "11863:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11599:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11630:1:10",
														"nodeType": "YulTypedName",
														"src": "11630:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11633:1:10",
														"nodeType": "YulTypedName",
														"src": "11633:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11639:7:10",
														"nodeType": "YulTypedName",
														"src": "11639:7:10",
														"type": ""
													}
												],
												"src": "11599:410:10"
											},
											{
												"body": {
													"nativeSrc": "12043:152:10",
													"nodeType": "YulBlock",
													"src": "12043:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12060:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12060:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12063:77:10",
																		"nodeType": "YulLiteral",
																		"src": "12063:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12053:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12053:6:10"
																},
																"nativeSrc": "12053:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12053:88:10"
															},
															"nativeSrc": "12053:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "12053:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12157:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12157:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12160:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12160:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12150:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12150:6:10"
																},
																"nativeSrc": "12150:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12150:15:10"
															},
															"nativeSrc": "12150:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12150:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12181:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12181:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12184:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12184:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12174:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12174:6:10"
																},
																"nativeSrc": "12174:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12174:15:10"
															},
															"nativeSrc": "12174:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12174:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12015:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12015:180:10"
											},
											{
												"body": {
													"nativeSrc": "12243:143:10",
													"nodeType": "YulBlock",
													"src": "12243:143:10",
													"statements": [
														{
															"nativeSrc": "12253:25:10",
															"nodeType": "YulAssignment",
															"src": "12253:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12276:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12276:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12258:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12258:17:10"
																},
																"nativeSrc": "12258:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12258:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12253:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12253:1:10"
																}
															]
														},
														{
															"nativeSrc": "12287:25:10",
															"nodeType": "YulAssignment",
															"src": "12287:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12310:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12310:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12292:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12292:17:10"
																},
																"nativeSrc": "12292:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12292:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12287:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12287:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12334:22:10",
																"nodeType": "YulBlock",
																"src": "12334:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12336:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12336:16:10"
																			},
																			"nativeSrc": "12336:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12336:18:10"
																		},
																		"nativeSrc": "12336:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12336:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12331:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12331:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12324:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12324:6:10"
																},
																"nativeSrc": "12324:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12324:9:10"
															},
															"nativeSrc": "12321:35:10",
															"nodeType": "YulIf",
															"src": "12321:35:10"
														},
														{
															"nativeSrc": "12366:14:10",
															"nodeType": "YulAssignment",
															"src": "12366:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12375:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12375:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12378:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12378:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12371:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12371:3:10"
																},
																"nativeSrc": "12371:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12371:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12366:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12366:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12201:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12232:1:10",
														"nodeType": "YulTypedName",
														"src": "12232:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12235:1:10",
														"nodeType": "YulTypedName",
														"src": "12235:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12241:1:10",
														"nodeType": "YulTypedName",
														"src": "12241:1:10",
														"type": ""
													}
												],
												"src": "12201:185:10"
											},
											{
												"body": {
													"nativeSrc": "12456:217:10",
													"nodeType": "YulBlock",
													"src": "12456:217:10",
													"statements": [
														{
															"nativeSrc": "12466:31:10",
															"nodeType": "YulAssignment",
															"src": "12466:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12492:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12492:4:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12474:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12474:17:10"
																},
																"nativeSrc": "12474:23:10",
																"nodeType": "YulFunctionCall",
																"src": "12474:23:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "12466:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12466:4:10"
																}
															]
														},
														{
															"nativeSrc": "12506:37:10",
															"nodeType": "YulAssignment",
															"src": "12506:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "12534:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "12534:8:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "12518:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "12518:15:10"
																},
																"nativeSrc": "12518:25:10",
																"nodeType": "YulFunctionCall",
																"src": "12518:25:10"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "12506:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "12506:8:10"
																}
															]
														},
														{
															"nativeSrc": "12553:113:10",
															"nodeType": "YulAssignment",
															"src": "12553:113:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12583:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12583:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "12589:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "12589:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12599:66:10",
																		"nodeType": "YulLiteral",
																		"src": "12599:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "12562:20:10",
																	"nodeType": "YulIdentifier",
																	"src": "12562:20:10"
																},
																"nativeSrc": "12562:104:10",
																"nodeType": "YulFunctionCall",
																"src": "12562:104:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "12553:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "12553:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "12392:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "12431:4:10",
														"nodeType": "YulTypedName",
														"src": "12431:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "12437:8:10",
														"nodeType": "YulTypedName",
														"src": "12437:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "12450:5:10",
														"nodeType": "YulTypedName",
														"src": "12450:5:10",
														"type": ""
													}
												],
												"src": "12392:281:10"
											},
											{
												"body": {
													"nativeSrc": "12792:34:10",
													"nodeType": "YulBlock",
													"src": "12792:34:10",
													"statements": [
														{
															"nativeSrc": "12802:18:10",
															"nodeType": "YulAssignment",
															"src": "12802:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "12817:3:10",
																"nodeType": "YulIdentifier",
																"src": "12817:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12802:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "12802:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12679:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12764:3:10",
														"nodeType": "YulTypedName",
														"src": "12764:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12769:6:10",
														"nodeType": "YulTypedName",
														"src": "12769:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12780:11:10",
														"nodeType": "YulTypedName",
														"src": "12780:11:10",
														"type": ""
													}
												],
												"src": "12679:147:10"
											},
											{
												"body": {
													"nativeSrc": "12938:8:10",
													"nodeType": "YulBlock",
													"src": "12938:8:10",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "12832:114:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12930:6:10",
														"nodeType": "YulTypedName",
														"src": "12930:6:10",
														"type": ""
													}
												],
												"src": "12832:114:10"
											},
											{
												"body": {
													"nativeSrc": "13115:235:10",
													"nodeType": "YulBlock",
													"src": "13115:235:10",
													"statements": [
														{
															"nativeSrc": "13125:90:10",
															"nodeType": "YulAssignment",
															"src": "13125:90:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13208:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13208:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13213:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13213:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13132:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "13132:75:10"
																},
																"nativeSrc": "13132:83:10",
																"nodeType": "YulFunctionCall",
																"src": "13132:83:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13125:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13125:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13313:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13313:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "13224:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13224:88:10"
																},
																"nativeSrc": "13224:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13224:93:10"
															},
															"nativeSrc": "13224:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13224:93:10"
														},
														{
															"nativeSrc": "13326:18:10",
															"nodeType": "YulAssignment",
															"src": "13326:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13337:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13337:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13342:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13342:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13333:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13333:3:10"
																},
																"nativeSrc": "13333:11:10",
																"nodeType": "YulFunctionCall",
																"src": "13333:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13326:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13326:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12952:398:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13103:3:10",
														"nodeType": "YulTypedName",
														"src": "13103:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13111:3:10",
														"nodeType": "YulTypedName",
														"src": "13111:3:10",
														"type": ""
													}
												],
												"src": "12952:398:10"
											},
											{
												"body": {
													"nativeSrc": "13544:191:10",
													"nodeType": "YulBlock",
													"src": "13544:191:10",
													"statements": [
														{
															"nativeSrc": "13555:154:10",
															"nodeType": "YulAssignment",
															"src": "13555:154:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13705:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13705:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13562:141:10",
																	"nodeType": "YulIdentifier",
																	"src": "13562:141:10"
																},
																"nativeSrc": "13562:147:10",
																"nodeType": "YulFunctionCall",
																"src": "13562:147:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13555:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13555:3:10"
																}
															]
														},
														{
															"nativeSrc": "13719:10:10",
															"nodeType": "YulAssignment",
															"src": "13719:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "13726:3:10",
																"nodeType": "YulIdentifier",
																"src": "13726:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13719:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13719:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13356:379:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13531:3:10",
														"nodeType": "YulTypedName",
														"src": "13531:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13540:3:10",
														"nodeType": "YulTypedName",
														"src": "13540:3:10",
														"type": ""
													}
												],
												"src": "13356:379:10"
											},
											{
												"body": {
													"nativeSrc": "13786:149:10",
													"nodeType": "YulBlock",
													"src": "13786:149:10",
													"statements": [
														{
															"nativeSrc": "13796:25:10",
															"nodeType": "YulAssignment",
															"src": "13796:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13819:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13819:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13801:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13801:17:10"
																},
																"nativeSrc": "13801:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13801:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13796:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13796:1:10"
																}
															]
														},
														{
															"nativeSrc": "13830:25:10",
															"nodeType": "YulAssignment",
															"src": "13830:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13853:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13853:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13835:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13835:17:10"
																},
																"nativeSrc": "13835:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13835:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13830:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13830:1:10"
																}
															]
														},
														{
															"nativeSrc": "13864:17:10",
															"nodeType": "YulAssignment",
															"src": "13864:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13876:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13876:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13879:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13879:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13872:3:10"
																},
																"nativeSrc": "13872:9:10",
																"nodeType": "YulFunctionCall",
																"src": "13872:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "13864:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13864:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13906:22:10",
																"nodeType": "YulBlock",
																"src": "13906:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13908:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "13908:16:10"
																			},
																			"nativeSrc": "13908:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13908:18:10"
																		},
																		"nativeSrc": "13908:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13908:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "13897:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13897:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "13903:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13903:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13894:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "13894:2:10"
																},
																"nativeSrc": "13894:11:10",
																"nodeType": "YulFunctionCall",
																"src": "13894:11:10"
															},
															"nativeSrc": "13891:37:10",
															"nodeType": "YulIf",
															"src": "13891:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13741:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13772:1:10",
														"nodeType": "YulTypedName",
														"src": "13772:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13775:1:10",
														"nodeType": "YulTypedName",
														"src": "13775:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13781:4:10",
														"nodeType": "YulTypedName",
														"src": "13781:4:10",
														"type": ""
													}
												],
												"src": "13741:194:10"
											},
											{
												"body": {
													"nativeSrc": "14095:288:10",
													"nodeType": "YulBlock",
													"src": "14095:288:10",
													"statements": [
														{
															"nativeSrc": "14105:26:10",
															"nodeType": "YulAssignment",
															"src": "14105:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14117:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14117:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14128:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14128:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14113:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14113:3:10"
																},
																"nativeSrc": "14113:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14113:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14105:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14105:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14185:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14185:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14198:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14198:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14209:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14209:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14194:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14194:3:10"
																		},
																		"nativeSrc": "14194:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14194:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14141:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14141:43:10"
																},
																"nativeSrc": "14141:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14141:71:10"
															},
															"nativeSrc": "14141:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "14141:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14266:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14266:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14279:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14279:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14290:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14290:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14275:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14275:3:10"
																		},
																		"nativeSrc": "14275:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14275:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14222:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14222:43:10"
																},
																"nativeSrc": "14222:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14222:72:10"
															},
															"nativeSrc": "14222:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14222:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14348:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14348:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14361:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14361:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14372:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14372:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14357:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14357:3:10"
																		},
																		"nativeSrc": "14357:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14357:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14304:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14304:43:10"
																},
																"nativeSrc": "14304:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14304:72:10"
															},
															"nativeSrc": "14304:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14304:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13941:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14051:9:10",
														"nodeType": "YulTypedName",
														"src": "14051:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14063:6:10",
														"nodeType": "YulTypedName",
														"src": "14063:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14071:6:10",
														"nodeType": "YulTypedName",
														"src": "14071:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14079:6:10",
														"nodeType": "YulTypedName",
														"src": "14079:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14090:4:10",
														"nodeType": "YulTypedName",
														"src": "14090:4:10",
														"type": ""
													}
												],
												"src": "13941:442:10"
											},
											{
												"body": {
													"nativeSrc": "14515:206:10",
													"nodeType": "YulBlock",
													"src": "14515:206:10",
													"statements": [
														{
															"nativeSrc": "14525:26:10",
															"nodeType": "YulAssignment",
															"src": "14525:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14537:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14537:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14548:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14548:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14533:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14533:3:10"
																},
																"nativeSrc": "14533:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14533:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14525:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14525:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14605:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14605:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14618:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14618:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14629:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14629:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14614:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14614:3:10"
																		},
																		"nativeSrc": "14614:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14614:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14561:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14561:43:10"
																},
																"nativeSrc": "14561:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14561:71:10"
															},
															"nativeSrc": "14561:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "14561:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14686:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14686:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14699:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14699:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14710:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14710:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14695:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14695:3:10"
																		},
																		"nativeSrc": "14695:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14695:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14642:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14642:43:10"
																},
																"nativeSrc": "14642:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14642:72:10"
															},
															"nativeSrc": "14642:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14642:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14389:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14479:9:10",
														"nodeType": "YulTypedName",
														"src": "14479:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14491:6:10",
														"nodeType": "YulTypedName",
														"src": "14491:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14499:6:10",
														"nodeType": "YulTypedName",
														"src": "14499:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14510:4:10",
														"nodeType": "YulTypedName",
														"src": "14510:4:10",
														"type": ""
													}
												],
												"src": "14389:332:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    // struct KipuBank.TokenConfig -> struct KipuBank.TokenConfig\n    function abi_encode_t_struct$_TokenConfig_$886_memory_ptr_to_t_struct$_TokenConfig_$886_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // priceFeed\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // decimals\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_TokenConfig_$886_memory_ptr__to_t_struct$_TokenConfig_$886_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_TokenConfig_$886_memory_ptr_to_t_struct$_TokenConfig_$886_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint8(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"906": [
									{
										"length": 32,
										"start": 1428
									},
									{
										"length": 32,
										"start": 1472
									},
									{
										"length": 32,
										"start": 1945
									}
								],
								"909": [
									{
										"length": 32,
										"start": 2741
									},
									{
										"length": 32,
										"start": 4245
									},
									{
										"length": 32,
										"start": 4286
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x138 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA734F06E GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xDCCD58E3 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDCCD58E3 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xEDD2F190 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xFC5C96EE EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xFEE4AAEB EQ PUSH2 0x543 JUMPI PUSH2 0x182 JUMP JUMPDEST DUP1 PUSH4 0xA734F06E EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xB2343B1C EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xCAC2E25F EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xCB67E3B1 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0xD4FAC45D EQ PUSH2 0x414 JUMPI PUSH2 0x182 JUMP JUMPDEST DUP1 PUSH4 0x4BFDFA6F GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x4BFDFA6F EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x6B251A0B EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x82D2F5B1 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x332 JUMPI PUSH2 0x182 JUMP JUMPDEST DUP1 PUSH4 0xCCEE433 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x2A6DABA3 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x2F6EE695 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x338B5DEA EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x439370B1 EQ PUSH2 0x26C JUMPI PUSH2 0x182 JUMP JUMPDEST CALLDATASIZE PUSH2 0x182 JUMPI PUSH0 CALLVALUE SUB PUSH2 0x176 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x180 PUSH0 CALLVALUE PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9437E2A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH2 0xA5D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B4 PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2DE PUSH2 0xAD7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0xC6D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x365 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x36E PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x398 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3C2 PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x476 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4A0 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0xEFC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x504 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0xF80 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x511 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x52C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53A SWAP3 SWAP2 SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x569 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x564 SWAP2 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x138E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x574 DUP3 PUSH2 0x15B2 JUMP JUMPDEST PUSH0 PUSH2 0x57F DUP4 DUP4 PUSH2 0x7BB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x1 SLOAD PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x61D JUMPI PUSH1 0x1 SLOAD DUP3 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0xC4A0472300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x614 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6C4 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x72A JUMPI PUSH2 0x729 CALLER ADDRESS DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1683 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5681F9D0DB1B911AC18EE83D515A1CF1051853A9EAE418316A2FDF7DEA427C5 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x789 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 DUP3 SUB PUSH2 0x7CB JUMPI PUSH0 SWAP1 POP PUSH2 0x9A4 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8F9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB21D4AA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F0 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH0 ADD MLOAD SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x94A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x96E SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND PUSH1 0xA PUSH2 0x988 SWAP2 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST DUP2 DUP7 PUSH2 0x994 SWAP2 SWAP1 PUSH2 0x1FD9 JUMP JUMPDEST PUSH2 0x99E SWAP2 SWAP1 PUSH2 0x2047 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x633BFFF400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA58 DUP4 DUP4 PUSH2 0x56B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLVALUE SUB PUSH2 0xA96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA0 PUSH0 CALLVALUE PUSH2 0x56B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0xA PUSH2 0xAB0 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xADF PUSH2 0x1705 JUMP JUMPDEST PUSH2 0xAE8 PUSH0 PUSH2 0x178C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAF2 PUSH2 0x1705 JUMP JUMPDEST PUSH2 0xAFB DUP3 PUSH2 0x15B2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB6B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x18378D8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBDC29F691F539931AAC0EB61B6040016944303CD36B1493F9BC5D3F74E10C8E2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC75 PUSH2 0x1705 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD4D JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xCCD SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD07 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2AE871A500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xD79 JUMP JUMPDEST PUSH2 0xD78 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x184D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD95 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF04 PUSH2 0x1705 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF74 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6B SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF7D DUP2 PUSH2 0x178C JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0xFBA JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F36295200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC3 DUP4 PUSH2 0x15B2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0x1086 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0x61965C4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107D SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1091 DUP6 DUP6 PUSH2 0x7BB JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x111A JUMPI DUP1 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x8672A83200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1111 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH2 0x1126 SWAP2 SWAP1 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11B3 SWAP2 SWAP1 PUSH2 0x2102 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x11CC SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A9 JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1229 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2AE871A500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0x12D4 CALLER DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x184D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x91FB9D98B786C57D74C099CCD2BECA1739E9F6A81FB49001CA465C4B7591BBE2 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1334 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x1396 PUSH2 0x1705 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1406 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xFB21D4AA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FD SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1476 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x18378D8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146D SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6D28000829E988111DFD4F9075C2DC3F734E48013BC94E9FFBC8E523687314D7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15A5 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1680 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xFB21D4AA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1677 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x16FF DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18CC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x170D PUSH2 0x1967 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x172B PUSH2 0xC46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x178A JUMPI PUSH2 0x174E PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1781 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x18C7 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1880 SWAP3 SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x18EB JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1904 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x191F JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1961 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1958 SWAP2 SWAP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B1 DUP2 PUSH2 0x199F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19CA PUSH0 DUP4 ADD DUP5 PUSH2 0x19A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19FD DUP3 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0D DUP2 PUSH2 0x19F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A17 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A28 DUP2 PUSH2 0x1A04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A37 DUP2 PUSH2 0x199F JUMP JUMPDEST DUP2 EQ PUSH2 0x1A41 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A52 DUP2 PUSH2 0x1A2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6E JUMPI PUSH2 0x1A6D PUSH2 0x19D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A7B DUP6 DUP3 DUP7 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A8C DUP6 DUP3 DUP7 ADD PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AAB DUP2 PUSH2 0x1A96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AC4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE0 JUMPI PUSH2 0x1ADF PUSH2 0x19D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AED DUP6 DUP3 DUP7 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AFE DUP6 DUP3 DUP7 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B11 DUP2 PUSH2 0x19F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B2A PUSH0 DUP4 ADD DUP5 PUSH2 0x1B08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B45 JUMPI PUSH2 0x1B44 PUSH2 0x19D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B52 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B64 DUP2 PUSH2 0x19F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B73 DUP2 PUSH2 0x1A96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1B8D PUSH0 DUP6 ADD DUP3 PUSH2 0x1B5B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1BA0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1B6A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BB9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BD2 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x1BDF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AA2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1BEF DUP2 PUSH2 0x1A96 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C0A DUP2 PUSH2 0x1BE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C27 JUMPI PUSH2 0x1C26 PUSH2 0x19D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C34 DUP7 DUP3 DUP8 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C45 DUP7 DUP3 DUP8 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C56 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C97 DUP3 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA2 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CBA JUMPI PUSH2 0x1CB9 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CD3 PUSH0 DUP4 ADD DUP7 PUSH2 0x19A8 JUMP JUMPDEST PUSH2 0x1CE0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19A8 JUMP JUMPDEST PUSH2 0x1CED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19A8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CFF DUP3 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1D31 JUMPI PUSH2 0x1D30 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D4F PUSH0 DUP4 ADD DUP6 PUSH2 0x19A8 JUMP JUMPDEST PUSH2 0x1D5C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D81 DUP2 PUSH2 0x1D63 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D8B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D9C DUP2 PUSH2 0x1D78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB4 DUP2 PUSH2 0x1DA2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DBE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DCF DUP2 PUSH2 0x1DAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DE3 DUP2 PUSH2 0x1A2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E02 JUMPI PUSH2 0x1E01 PUSH2 0x19D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E0F DUP9 DUP3 DUP10 ADD PUSH2 0x1D8E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1E20 DUP9 DUP3 DUP10 ADD PUSH2 0x1DC1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1E31 DUP9 DUP3 DUP10 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1E42 DUP9 DUP3 DUP10 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1E53 DUP9 DUP3 DUP10 ADD PUSH2 0x1D8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1EB5 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1E91 JUMPI PUSH2 0x1E90 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1EA0 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1EAE DUP6 PUSH2 0x1E60 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E75 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1ECD JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1F88 JUMP JUMPDEST DUP2 PUSH2 0x1EDA JUMPI PUSH0 SWAP1 POP PUSH2 0x1F88 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1EF0 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1EFA JUMPI PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F0C JUMPI PUSH2 0x1F0B PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1F23 JUMPI PUSH2 0x1F22 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1F88 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F5E JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1F59 JUMPI PUSH2 0x1F58 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x1F6B DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1E6C JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1F82 JUMPI PUSH2 0x1F81 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F99 DUP3 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA4 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP3 POP PUSH2 0x1FD1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1EBE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE3 DUP3 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEE DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FFC DUP2 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2013 JUMPI PUSH2 0x2012 PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2051 DUP3 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x205C DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x206C JUMPI PUSH2 0x206B PUSH2 0x201A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2081 DUP3 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x208C DUP4 PUSH2 0x1A96 JUMP JUMPDEST SWAP3 POP PUSH2 0x20B9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1EBE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x20D9 PUSH0 DUP4 PUSH2 0x20C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20E4 DUP3 PUSH2 0x20CB JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20F8 DUP3 PUSH2 0x20CE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x210C DUP3 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x2117 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x212F JUMPI PUSH2 0x212E PUSH2 0x1C60 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2148 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x2155 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x2162 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19A8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x217D PUSH0 DUP4 ADD DUP6 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x218A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x72C599D82903B29B1AF61ABF6B94663099371996F78837B10422A80CE169EC PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "384:13984:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4709:1;4696:9;:14;4692:49;;4719:22;;;;;;;;;;;;;;4692:49;14144:38:::1;1243:1;14172:9;14144:14;:38::i;:::-;384:13984:::0;;14327:30;;;;;;;;;;;;;;1771:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10035:790;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1332:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6602:212;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6172:110;;;:::i;:::-;;1437:56;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1893:45;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;;;;;;;;;;;:::i;:::-;;12376:396:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12963:348:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1197:48;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2262:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2152:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11173:146;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10924:159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2426:65;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2036:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8281:1266:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2607:52;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;11778:514;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6897:1115;7096:26;7115:6;7096:18;:26::i;:::-;7135:23;7161:33;7178:6;7186:7;7161:16;:33::i;:::-;7135:59;;7205:28;7258:15;7236:19;;:37;;;;:::i;:::-;7205:68;;7313:12;7290:20;:35;7286:218;;;7393:19;;7431:15;7465:12;7349:143;;;;;;;;;;;;;:::i;:::-;;;;;;;;7286:218;7578:7;7544:10;:18;7555:6;7544:18;;;;;;;;;;;;;;;:30;7563:10;7544:30;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;7618:20;7596:19;:42;;;;7649:14;;:16;;;;;;;;;:::i;:::-;;;;;;1243:1;7749:21;;:6;:21;;;7745:187;;7787:133;7837:10;7874:4;7898:7;7794:6;7787:31;;;;:133;;;;;;:::i;:::-;7745:187;7971:6;7949:55;;7959:10;7949:55;;;7979:7;7988:15;7949:55;;;;;;;:::i;:::-;;;;;;;;6962:1050;;6897:1115;;:::o;1771:37::-;;;:::o;10035:790::-;10140:7;10175:1;10164:7;:12;10160:26;;10185:1;10178:8;;;;10160:26;10199:25;10227:13;:21;10241:6;10227:21;;;;;;;;;;;;;;;10199:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10291:1;10263:30;;:6;:16;;;:30;;;10259:103;;10343:6;10317:33;;;;;;;;;;;:::i;:::-;;;;;;;;10259:103;10419:31;10475:6;:16;;;10419:73;;10506:12;10528:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10503:52;;;;;;10800:6;:15;;;10792:24;;10788:2;:28;;;;:::i;:::-;10777:5;10759:7;:24;;;;:::i;:::-;10758:59;;;;:::i;:::-;10738:79;;;;;10035:790;;;;;:::o;1332:38::-;1369:1;1332:38;:::o;6602:212::-;6680:7;4530:1;4519:7;:12;4515:47;;4540:22;;;;;;;;;;;;;;4515:47;1243:1:::1;6705:21;;:6;:21;;::::0;6701:63:::1;;6735:29;;;;;;;;;;;;;;6701:63;6775:31;6790:6;6798:7;6775:14;:31::i;:::-;6602:212:::0;;;:::o;6172:110::-;4709:1;4696:9;:14;4692:49;;4719:22;;;;;;;;;;;;;;4692:49;6236:38:::1;1243:1;6264:9;6236:14;:38::i;:::-;6172:110::o:0;1437:56::-;1369:1;1477:2;:16;;;;:::i;:::-;1437:56;:::o;1893:45::-;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;12376:396:9:-;1531:13:1;:11;:13::i;:::-;12500:26:9::1;12519:6;12500:18;:26::i;:::-;12566:1;12541:27;;:13;:27;;::::0;12537:108:::1;;12619:13;12592:41;;;;;;;;;;;:::i;:::-;;;;;;;;12537:108;12691:13;12657;:21;12671:6;12657:21;;;;;;;;;;;;;;;:31;;;:47;;;;;;;;;;;;;;;;;;12750:13;12720:44;;12742:6;12720:44;;;;;;;;;;;;12376:396:::0;;:::o;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;12963:348:9:-;1531:13:1;:11;:13::i;:::-;1243:1:9::1;13057:21;;:6;:21;;::::0;13053:251:::1;;13096:12;13114:10;:15;;13137:7;13114:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13095:54;;;13169:7;13164:47;;13185:26;;;;;;;;;;;;;;13164:47;13080:143;13053:251;;;13244:48;13272:10;13284:7;13251:6;13244:27;;;;:48;;;;;:::i;:::-;13053:251;12963:348:::0;;:::o;1197:48::-;1243:1;1197:48;:::o;2262:32::-;;;;:::o;2152:29::-;;;;:::o;11173:146::-;11252:18;;:::i;:::-;11290:13;:21;11304:6;11290:21;;;;;;;;;;;;;;;11283:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11173:146;;;:::o;10924:159::-;11023:7;11050:10;:18;11061:6;11050:18;;;;;;;;;;;;;;;:25;11069:5;11050:25;;;;;;;;;;;;;;;;11043:32;;10924:159;;;;:::o;2426:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2036:34::-;;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8281:1266:9:-;8355:7;4530:1;4519:7;:12;4515:47;;4540:22;;;;;;;;;;;;;;4515:47;8468:26:::1;8487:6;8468:18;:26::i;:::-;8507:19;8529:10;:18;8540:6;8529:18;;;;;;;;;;;;;;;:30;8548:10;8529:30;;;;;;;;;;;;;;;;8507:52;;8584:11;8574:7;:21;8570:112;;;8649:7;8658:11;8619:51;;;;;;;;;;;;:::i;:::-;;;;;;;;8570:112;8694:24;8721:33;8738:6;8746:7;8721:16;:33::i;:::-;8694:60;;8788:20;8769:16;:39;8765:199;;;8882:16;8917:20;8832:120;;;;;;;;;;;;:::i;:::-;;;;;;;;8765:199;9081:7;9067:11;:21;;;;:::i;:::-;9034:10;:18;9045:6;9034:18;;;;;;;;;;;;;;;:30;9053:10;9034:30;;;;;;;;;;;;;;;:54;;;;9122:16;9099:19;;:39;;;;;;;:::i;:::-;;;;;;;;9149:17;;:19;;;;;;;;;:::i;:::-;;;;;;1243:1;9219:21;;:6;:21;;::::0;9215:251:::1;;9258:12;9276:10;:15;;9299:7;9276:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9257:54;;;9331:7;9326:47;;9347:26;;;;;;;;;;;;;;9326:47;9242:143;9215:251;;;9406:48;9434:10;9446:7;9413:6;9406:27;;;;:48;;;;;:::i;:::-;9215:251;9505:6;9483:56;;9493:10;9483:56;;;9513:7;9522:16;9483:56;;;;;;;:::i;:::-;;;;;;;;8364:1183;;8281:1266:::0;;;:::o;2607:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11778:514::-;1531:13:1;:11;:13::i;:::-;1243:1:9::1;11919:21;;:6;:21;;::::0;11915:67:::1;;11975:6;11949:33;;;;;;;;;;;:::i;:::-;;;;;;;;11915:67;12019:1;11997:24;;:10;:24;;::::0;11993:102:::1;;12072:10;12045:38;;;;;;;;;;;:::i;:::-;;;;;;;;11993:102;12131:94;;;;;;;;12169:10;12131:94;;;;;;12204:9;12131:94;;;;::::0;12107:13:::1;:21;12121:6;12107:21;;;;;;;;;;;;;;;:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12262:10;12241:43;;12254:6;12241:43;;;12274:9;12241:43;;;;;;:::i;:::-;;;;;;;;11778:514:::0;;;:::o;13604:193::-;13719:1;13676:45;;:13;:21;13690:6;13676:21;;;;;;;;;;;;;;;:31;;;;;;;;;;;;:45;;;13672:118;;13771:6;13745:33;;;;;;;;;;;:::i;:::-;;;;;;;;13672:118;13604:193;:::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:86::-;2064:7;2104:4;2097:5;2093:16;2082:27;;2029:86;;;:::o;2121:112::-;2204:22;2220:5;2204:22;:::i;:::-;2199:3;2192:35;2121:112;;:::o;2239:214::-;2328:4;2366:2;2355:9;2351:18;2343:26;;2379:67;2443:1;2432:9;2428:17;2419:6;2379:67;:::i;:::-;2239:214;;;;:::o;2459:474::-;2527:6;2535;2584:2;2572:9;2563:7;2559:23;2555:32;2552:119;;;2590:79;;:::i;:::-;2552:119;2710:1;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2681:117;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2459:474;;;;;:::o;2939:118::-;3026:24;3044:5;3026:24;:::i;:::-;3021:3;3014:37;2939:118;;:::o;3063:222::-;3156:4;3194:2;3183:9;3179:18;3171:26;;3207:71;3275:1;3264:9;3260:17;3251:6;3207:71;:::i;:::-;3063:222;;;;:::o;3291:329::-;3350:6;3399:2;3387:9;3378:7;3374:23;3370:32;3367:119;;;3405:79;;:::i;:::-;3367:119;3525:1;3550:53;3595:7;3586:6;3575:9;3571:22;3550:53;:::i;:::-;3540:63;;3496:117;3291:329;;;;:::o;3626:108::-;3703:24;3721:5;3703:24;:::i;:::-;3698:3;3691:37;3626:108;;:::o;3740:102::-;3813:22;3829:5;3813:22;:::i;:::-;3808:3;3801:35;3740:102;;:::o;3914:518::-;4067:4;4062:3;4058:14;4159:4;4152:5;4148:16;4142:23;4178:63;4235:4;4230:3;4226:14;4212:12;4178:63;:::i;:::-;4082:169;4337:4;4330:5;4326:16;4320:23;4356:59;4409:4;4404:3;4400:14;4386:12;4356:59;:::i;:::-;4261:164;4036:396;3914:518;;:::o;4438:334::-;4587:4;4625:2;4614:9;4610:18;4602:26;;4638:127;4762:1;4751:9;4747:17;4738:6;4638:127;:::i;:::-;4438:334;;;;:::o;4778:324::-;4895:4;4933:2;4922:9;4918:18;4910:26;;4946:71;5014:1;5003:9;4999:17;4990:6;4946:71;:::i;:::-;5027:68;5091:2;5080:9;5076:18;5067:6;5027:68;:::i;:::-;4778:324;;;;;:::o;5108:118::-;5179:22;5195:5;5179:22;:::i;:::-;5172:5;5169:33;5159:61;;5216:1;5213;5206:12;5159:61;5108:118;:::o;5232:135::-;5276:5;5314:6;5301:20;5292:29;;5330:31;5355:5;5330:31;:::i;:::-;5232:135;;;;:::o;5373:615::-;5448:6;5456;5464;5513:2;5501:9;5492:7;5488:23;5484:32;5481:119;;;5519:79;;:::i;:::-;5481:119;5639:1;5664:53;5709:7;5700:6;5689:9;5685:22;5664:53;:::i;:::-;5654:63;;5610:117;5766:2;5792:53;5837:7;5828:6;5817:9;5813:22;5792:53;:::i;:::-;5782:63;;5737:118;5894:2;5920:51;5963:7;5954:6;5943:9;5939:22;5920:51;:::i;:::-;5910:61;;5865:116;5373:615;;;;;:::o;5994:180::-;6042:77;6039:1;6032:88;6139:4;6136:1;6129:15;6163:4;6160:1;6153:15;6180:191;6220:3;6239:20;6257:1;6239:20;:::i;:::-;6234:25;;6273:20;6291:1;6273:20;:::i;:::-;6268:25;;6316:1;6313;6309:9;6302:16;;6337:3;6334:1;6331:10;6328:36;;;6344:18;;:::i;:::-;6328:36;6180:191;;;;:::o;6377:442::-;6526:4;6564:2;6553:9;6549:18;6541:26;;6577:71;6645:1;6634:9;6630:17;6621:6;6577:71;:::i;:::-;6658:72;6726:2;6715:9;6711:18;6702:6;6658:72;:::i;:::-;6740;6808:2;6797:9;6793:18;6784:6;6740:72;:::i;:::-;6377:442;;;;;;:::o;6825:233::-;6864:3;6887:24;6905:5;6887:24;:::i;:::-;6878:33;;6933:66;6926:5;6923:77;6920:103;;7003:18;;:::i;:::-;6920:103;7050:1;7043:5;7039:13;7032:20;;6825:233;;;:::o;7064:332::-;7185:4;7223:2;7212:9;7208:18;7200:26;;7236:71;7304:1;7293:9;7289:17;7280:6;7236:71;:::i;:::-;7317:72;7385:2;7374:9;7370:18;7361:6;7317:72;:::i;:::-;7064:332;;;;;:::o;7402:105::-;7438:7;7478:22;7471:5;7467:34;7456:45;;7402:105;;;:::o;7513:120::-;7585:23;7602:5;7585:23;:::i;:::-;7578:5;7575:34;7565:62;;7623:1;7620;7613:12;7565:62;7513:120;:::o;7639:141::-;7695:5;7726:6;7720:13;7711:22;;7742:32;7768:5;7742:32;:::i;:::-;7639:141;;;;:::o;7786:76::-;7822:7;7851:5;7840:16;;7786:76;;;:::o;7868:120::-;7940:23;7957:5;7940:23;:::i;:::-;7933:5;7930:34;7920:62;;7978:1;7975;7968:12;7920:62;7868:120;:::o;7994:141::-;8050:5;8081:6;8075:13;8066:22;;8097:32;8123:5;8097:32;:::i;:::-;7994:141;;;;:::o;8141:143::-;8198:5;8229:6;8223:13;8214:22;;8245:33;8272:5;8245:33;:::i;:::-;8141:143;;;;:::o;8290:971::-;8393:6;8401;8409;8417;8425;8474:3;8462:9;8453:7;8449:23;8445:33;8442:120;;;8481:79;;:::i;:::-;8442:120;8601:1;8626:63;8681:7;8672:6;8661:9;8657:22;8626:63;:::i;:::-;8616:73;;8572:127;8738:2;8764:63;8819:7;8810:6;8799:9;8795:22;8764:63;:::i;:::-;8754:73;;8709:128;8876:2;8902:64;8958:7;8949:6;8938:9;8934:22;8902:64;:::i;:::-;8892:74;;8847:129;9015:2;9041:64;9097:7;9088:6;9077:9;9073:22;9041:64;:::i;:::-;9031:74;;8986:129;9154:3;9181:63;9236:7;9227:6;9216:9;9212:22;9181:63;:::i;:::-;9171:73;;9125:129;8290:971;;;;;;;;:::o;9267:102::-;9309:8;9356:5;9353:1;9349:13;9328:34;;9267:102;;;:::o;9375:848::-;9436:5;9443:4;9467:6;9458:15;;9491:5;9482:14;;9505:712;9526:1;9516:8;9513:15;9505:712;;;9621:4;9616:3;9612:14;9606:4;9603:24;9600:50;;;9630:18;;:::i;:::-;9600:50;9680:1;9670:8;9666:16;9663:451;;;10095:4;10088:5;10084:16;10075:25;;9663:451;10145:4;10139;10135:15;10127:23;;10175:32;10198:8;10175:32;:::i;:::-;10163:44;;9505:712;;;9375:848;;;;;;;:::o;10229:1073::-;10283:5;10474:8;10464:40;;10495:1;10486:10;;10497:5;;10464:40;10523:4;10513:36;;10540:1;10531:10;;10542:5;;10513:36;10609:4;10657:1;10652:27;;;;10693:1;10688:191;;;;10602:277;;10652:27;10670:1;10661:10;;10672:5;;;10688:191;10733:3;10723:8;10720:17;10717:43;;;10740:18;;:::i;:::-;10717:43;10789:8;10786:1;10782:16;10773:25;;10824:3;10817:5;10814:14;10811:40;;;10831:18;;:::i;:::-;10811:40;10864:5;;;10602:277;;10988:2;10978:8;10975:16;10969:3;10963:4;10960:13;10956:36;10938:2;10928:8;10925:16;10920:2;10914:4;10911:12;10907:35;10891:111;10888:246;;;11044:8;11038:4;11034:19;11025:28;;11079:3;11072:5;11069:14;11066:40;;;11086:18;;:::i;:::-;11066:40;11119:5;;10888:246;11159:42;11197:3;11187:8;11181:4;11178:1;11159:42;:::i;:::-;11144:57;;;;11233:4;11228:3;11224:14;11217:5;11214:25;11211:51;;;11242:18;;:::i;:::-;11211:51;11291:4;11284:5;11280:16;11271:25;;10229:1073;;;;;;:::o;11308:285::-;11368:5;11392:23;11410:4;11392:23;:::i;:::-;11384:31;;11436:27;11454:8;11436:27;:::i;:::-;11424:39;;11482:104;11519:66;11509:8;11503:4;11482:104;:::i;:::-;11473:113;;11308:285;;;;:::o;11599:410::-;11639:7;11662:20;11680:1;11662:20;:::i;:::-;11657:25;;11696:20;11714:1;11696:20;:::i;:::-;11691:25;;11751:1;11748;11744:9;11773:30;11791:11;11773:30;:::i;:::-;11762:41;;11952:1;11943:7;11939:15;11936:1;11933:22;11913:1;11906:9;11886:83;11863:139;;11982:18;;:::i;:::-;11863:139;11647:362;11599:410;;;;:::o;12015:180::-;12063:77;12060:1;12053:88;12160:4;12157:1;12150:15;12184:4;12181:1;12174:15;12201:185;12241:1;12258:20;12276:1;12258:20;:::i;:::-;12253:25;;12292:20;12310:1;12292:20;:::i;:::-;12287:25;;12331:1;12321:35;;12336:18;;:::i;:::-;12321:35;12378:1;12375;12371:9;12366:14;;12201:185;;;;:::o;12392:281::-;12450:5;12474:23;12492:4;12474:23;:::i;:::-;12466:31;;12518:25;12534:8;12518:25;:::i;:::-;12506:37;;12562:104;12599:66;12589:8;12583:4;12562:104;:::i;:::-;12553:113;;12392:281;;;;:::o;12679:147::-;12780:11;12817:3;12802:18;;12679:147;;;;:::o;12832:114::-;;:::o;12952:398::-;13111:3;13132:83;13213:1;13208:3;13132:83;:::i;:::-;13125:90;;13224:93;13313:3;13224:93;:::i;:::-;13342:1;13337:3;13333:11;13326:18;;12952:398;;;:::o;13356:379::-;13540:3;13562:147;13705:3;13562:147;:::i;:::-;13555:154;;13726:3;13719:10;;13356:379;;;:::o;13741:194::-;13781:4;13801:20;13819:1;13801:20;:::i;:::-;13796:25;;13835:20;13853:1;13835:20;:::i;:::-;13830:25;;13879:1;13876;13872:9;13864:17;;13903:1;13897:4;13894:11;13891:37;;;13908:18;;:::i;:::-;13891:37;13741:194;;;;:::o;13941:442::-;14090:4;14128:2;14117:9;14113:18;14105:26;;14141:71;14209:1;14198:9;14194:17;14185:6;14141:71;:::i;:::-;14222:72;14290:2;14279:9;14275:18;14266:6;14222:72;:::i;:::-;14304;14372:2;14361:9;14357:18;14348:6;14304:72;:::i;:::-;13941:442;;;;;;:::o;14389:332::-;14510:4;14548:2;14537:9;14533:18;14525:26;;14561:71;14629:1;14618:9;14614:17;14605:6;14561:71;:::i;:::-;14642:72;14710:2;14699:9;14695:18;14686:6;14642:72;:::i;:::-;14389:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1729400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "263",
								"ETH_ADDRESS()": "395",
								"USD_DECIMALS()": "399",
								"USD_PRECISION()": "infinite",
								"allowToken(address,address,uint8)": "infinite",
								"depositEth()": "infinite",
								"depositToken(address,uint256)": "infinite",
								"emergencyWithdraw(address,uint256)": "infinite",
								"getBalance(address,address)": "infinite",
								"getTokenConfig(address)": "infinite",
								"getTokenValueUSD(address,uint256)": "infinite",
								"i_bankCapUSD()": "infinite",
								"i_withdrawalLimitUSD()": "infinite",
								"owner()": "2625",
								"renounceOwnership()": "infinite",
								"s_balances(address,address)": "infinite",
								"s_depositCount()": "2492",
								"s_tokenConfig(address)": "infinite",
								"s_totalBankValueUSD()": "2469",
								"s_withdrawalCount()": "2470",
								"transferOwnership(address)": "infinite",
								"updateTokenPriceFeed(address,address)": "infinite",
								"withdraw(address,uint256)": "infinite"
							},
							"internal": {
								"_checkTokenAllowed(address)": "infinite",
								"_handleDeposit(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 384,
									"end": 14368,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 5187,
									"end": 5840,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5317,
									"end": 5327,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5372,
									"end": 5373,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5344,
									"end": 5374,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5344,
									"end": 5374,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5344,
									"end": 5360,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5344,
									"end": 5374,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5344,
									"end": 5374,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5344,
									"end": 5374,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 5340,
									"end": 5454,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 5340,
									"end": 5454,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5425,
									"end": 5441,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "18378D8C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 5398,
									"end": 5442,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5442,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 5340,
									"end": 5454,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 5340,
									"end": 5454,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5481,
									"end": 5492,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5466,
									"end": 5492,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 5466,
									"end": 5492,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5466,
									"end": 5492,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5466,
									"end": 5492,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5466,
									"end": 5492,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5526,
									"end": 5545,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5503,
									"end": 5545,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 5503,
									"end": 5545,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5503,
									"end": 5545,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5503,
									"end": 5545,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5503,
									"end": 5545,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5503,
									"end": 5545,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5680,
									"end": 5696,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5721,
									"end": 5723,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5642,
									"end": 5769,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5642,
									"end": 5769,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5626,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1243,
									"end": 1244,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 5639,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5613,
									"end": 5769,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5811,
									"end": 5827,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1243,
									"end": 1244,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "6D28000829E988111DFD4F9075C2DC3F734E48013BC94E9FFBC8E523687314D7"
								},
								{
									"begin": 5829,
									"end": 5831,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 5785,
									"end": 5832,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5785,
									"end": 5832,
									"modifierDepth": 1,
									"name": "LOG3",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5840,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1979,
									"end": 1984,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1961,
									"end": 1985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1956,
									"end": 1959,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1949,
									"end": 1986,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 1992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2091,
									"end": 2095,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2129,
									"end": 2131,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2118,
									"end": 2127,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2210,
									"end": 2211,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2199,
									"end": 2208,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2195,
									"end": 2212,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2186,
									"end": 2192,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 2142,
									"end": 2213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2312,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 2226,
									"end": 2312,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2272,
									"end": 2279,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2301,
									"end": 2306,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2290,
									"end": 2306,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2290,
									"end": 2306,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2312,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2312,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2312,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2312,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2318,
									"end": 2404,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2318,
									"end": 2404,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2353,
									"end": 2360,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2393,
									"end": 2397,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 2386,
									"end": 2391,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2382,
									"end": 2398,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2371,
									"end": 2398,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2371,
									"end": 2398,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2318,
									"end": 2404,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2318,
									"end": 2404,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2318,
									"end": 2404,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2318,
									"end": 2404,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2410,
									"end": 2470,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2410,
									"end": 2470,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2438,
									"end": 2441,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2459,
									"end": 2464,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2410,
									"end": 2470,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2410,
									"end": 2470,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2410,
									"end": 2470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2410,
									"end": 2470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2476,
									"end": 2632,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 2476,
									"end": 2632,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2533,
									"end": 2542,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2566,
									"end": 2626,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2582,
									"end": 2625,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2591,
									"end": 2624,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2618,
									"end": 2623,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2591,
									"end": 2624,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 2591,
									"end": 2624,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2591,
									"end": 2624,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2591,
									"end": 2624,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2582,
									"end": 2625,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2582,
									"end": 2625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2582,
									"end": 2625,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2582,
									"end": 2625,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2626,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2566,
									"end": 2626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2626,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2566,
									"end": 2626,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2553,
									"end": 2626,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2553,
									"end": 2626,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2476,
									"end": 2632,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2476,
									"end": 2632,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2476,
									"end": 2632,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2476,
									"end": 2632,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2638,
									"end": 2783,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 2638,
									"end": 2783,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2732,
									"end": 2776,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2770,
									"end": 2775,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2732,
									"end": 2776,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 2732,
									"end": 2776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2732,
									"end": 2776,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2732,
									"end": 2776,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2727,
									"end": 2730,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2720,
									"end": 2777,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2638,
									"end": 2783,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2638,
									"end": 2783,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2638,
									"end": 2783,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2789,
									"end": 3025,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 2789,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2889,
									"end": 2893,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2927,
									"end": 2929,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2916,
									"end": 2925,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 2930,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2904,
									"end": 2930,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2904,
									"end": 2930,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2940,
									"end": 3018,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 3015,
									"end": 3016,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3013,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3000,
									"end": 3017,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2991,
									"end": 2997,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2940,
									"end": 3018,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 2940,
									"end": 3018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2940,
									"end": 3018,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2940,
									"end": 3018,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2789,
									"end": 3025,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2789,
									"end": 3025,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2789,
									"end": 3025,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2789,
									"end": 3025,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2789,
									"end": 3025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "909"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "906"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 14368,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207e72c599d82903b29b1af61abf6b94663099371996f78837b10422a80ce169ec64736f6c634300081e0033",
									".code": [
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "A734F06E"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "DCCD58E3"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "DCCD58E3"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "EDD2F190"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "F3FEF3A3"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "FC5C96EE"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "FEE4AAEB"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "A734F06E"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "B2343B1C"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "CAC2E25F"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "CB67E3B1"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "D4FAC45D"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "4BFDFA6F"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "4BFDFA6F"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "6B251A0B"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "82D2F5B1"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "95CCEA67"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "CCEE433"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "2A6DABA3"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "2F6EE695"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "338B5DEA"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH",
											"source": 9,
											"value": "439370B1"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4696,
											"end": 4705,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4696,
											"end": 4710,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4692,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 4692,
											"end": 4741,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "PUSH",
											"source": 9,
											"value": "3F36295200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4692,
											"end": 4741,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 4692,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14144,
											"end": 14182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1243,
											"end": 1244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14172,
											"end": 14181,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 14144,
											"end": 14158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 14144,
											"end": 14182,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14144,
											"end": 14182,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 14144,
											"end": 14182,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 14368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14327,
											"end": 14357,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14327,
											"end": 14357,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14327,
											"end": 14357,
											"name": "PUSH",
											"source": 9,
											"value": "9437E2A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14327,
											"end": 14357,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14327,
											"end": 14357,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14327,
											"end": 14357,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14327,
											"end": 14357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14327,
											"end": 14357,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14327,
											"end": 14357,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14327,
											"end": 14357,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14327,
											"end": 14357,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14327,
											"end": 14357,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14327,
											"end": 14357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14327,
											"end": 14357,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1771,
											"end": 1808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10035,
											"end": 10825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 10035,
											"end": 10825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10035,
											"end": 10825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1332,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1332,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6602,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 6602,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6282,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6172,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 6172,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 6172,
											"end": 6282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6282,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 6172,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6282,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1437,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1893,
											"end": 1938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 12376,
											"end": 12772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 12376,
											"end": 12772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12963,
											"end": 13311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 12963,
											"end": 13311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1197,
											"end": 1245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1197,
											"end": 1245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2262,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2152,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 11173,
											"end": 11319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 11173,
											"end": 11319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 11173,
											"end": 11319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 10924,
											"end": 11083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 10924,
											"end": 11083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10924,
											"end": 11083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 2426,
											"end": 2491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2426,
											"end": 2491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2426,
											"end": 2491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 2036,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8281,
											"end": 9547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 8281,
											"end": 9547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2607,
											"end": 2659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2607,
											"end": 2659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2607,
											"end": 2659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 11778,
											"end": 12292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 11778,
											"end": 12292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6897,
											"end": 8012,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 6897,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7096,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 7115,
											"end": 7121,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7096,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 7096,
											"end": 7122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7096,
											"end": 7122,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 7096,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7135,
											"end": 7158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7161,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 7178,
											"end": 7184,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7186,
											"end": 7193,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7161,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 7161,
											"end": 7194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7161,
											"end": 7194,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 7161,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7135,
											"end": 7194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7135,
											"end": 7194,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7205,
											"end": 7233,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 7236,
											"end": 7273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 7236,
											"end": 7273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7273,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 7236,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7205,
											"end": 7273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7205,
											"end": 7273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7313,
											"end": 7325,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "906"
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7290,
											"end": 7325,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7286,
											"end": 7504,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7286,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 7286,
											"end": 7504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7393,
											"end": 7412,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7393,
											"end": 7412,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7431,
											"end": 7446,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7465,
											"end": 7477,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "906"
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "PUSH",
											"source": 9,
											"value": "C4A0472300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 7349,
											"end": 7492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7349,
											"end": 7492,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7286,
											"end": 7504,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 7286,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7578,
											"end": 7585,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7554,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7561,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7563,
											"end": 7573,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 7544,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7618,
											"end": 7638,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7615,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7596,
											"end": 7638,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7638,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7663,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7649,
											"end": 7663,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 7649,
											"end": 7665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7649,
											"end": 7665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1244,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7749,
											"end": 7770,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7749,
											"end": 7770,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7755,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7770,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7749,
											"end": 7770,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7770,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7745,
											"end": 7932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 7745,
											"end": 7932,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 7837,
											"end": 7847,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 7878,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 7898,
											"end": 7905,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7818,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7787,
											"end": 7818,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 7787,
											"end": 7818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7920,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7920,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7920,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7920,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7787,
											"end": 7920,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7920,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 7787,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7745,
											"end": 7932,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 7745,
											"end": 7932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7971,
											"end": 7977,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7959,
											"end": 7969,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "PUSH",
											"source": 9,
											"value": "F5681F9D0DB1B911AC18EE83D515A1CF1051853A9EAE418316A2FDF7DEA427C5"
										},
										{
											"begin": 7979,
											"end": 7986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8003,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 7949,
											"end": 8004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 8004,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 6962,
											"end": 8012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6962,
											"end": 8012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6897,
											"end": 8012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6897,
											"end": 8012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6897,
											"end": 8012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "906"
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10140,
											"end": 10147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10175,
											"end": 10176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10164,
											"end": 10171,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10176,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10160,
											"end": 10186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 10160,
											"end": 10186,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10185,
											"end": 10186,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10178,
											"end": 10186,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10178,
											"end": 10186,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10178,
											"end": 10186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 10178,
											"end": 10186,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10160,
											"end": 10186,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 10160,
											"end": 10186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10224,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10227,
											"end": 10240,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10241,
											"end": 10247,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10227,
											"end": 10248,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10199,
											"end": 10248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10292,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10263,
											"end": 10293,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10293,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10269,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10263,
											"end": 10279,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10279,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10293,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10293,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10293,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10259,
											"end": 10362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 10259,
											"end": 10362,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10343,
											"end": 10349,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "PUSH",
											"source": 9,
											"value": "FB21D4AA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 10317,
											"end": 10350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10350,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10259,
											"end": 10362,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 10259,
											"end": 10362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10419,
											"end": 10450,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10475,
											"end": 10481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10475,
											"end": 10491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10475,
											"end": 10491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10475,
											"end": 10491,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10419,
											"end": 10492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10419,
											"end": 10492,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10528,
											"end": 10537,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10553,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10528,
											"end": 10553,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10553,
											"name": "PUSH",
											"source": 9,
											"value": "FEAF968C"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 10528,
											"end": 10555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 10528,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10503,
											"end": 10555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10503,
											"end": 10555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10503,
											"end": 10555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10503,
											"end": 10555,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10503,
											"end": 10555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10503,
											"end": 10555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10815,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10800,
											"end": 10815,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10800,
											"end": 10815,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10792,
											"end": 10816,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 10792,
											"end": 10816,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10788,
											"end": 10790,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 10788,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 10788,
											"end": 10816,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10788,
											"end": 10816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10788,
											"end": 10816,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 10788,
											"end": 10816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10788,
											"end": 10816,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 10788,
											"end": 10816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10782,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10759,
											"end": 10766,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10759,
											"end": 10783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 10759,
											"end": 10783,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10759,
											"end": 10783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10759,
											"end": 10783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 10759,
											"end": 10783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10759,
											"end": 10783,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 10759,
											"end": 10783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 10758,
											"end": 10817,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10817,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 10758,
											"end": 10817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10817,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 10758,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10738,
											"end": 10817,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10738,
											"end": 10817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10738,
											"end": 10817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10738,
											"end": 10817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10738,
											"end": 10817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1332,
											"end": 1370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6680,
											"end": 6687,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4530,
											"end": 4531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4519,
											"end": 4526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4519,
											"end": 4531,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 4515,
											"end": 4562,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "PUSH",
											"source": 9,
											"value": "3F36295200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4562,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 4515,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6705,
											"end": 6726,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6705,
											"end": 6711,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6705,
											"end": 6726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6705,
											"end": 6726,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 6701,
											"end": 6764,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6735,
											"end": 6764,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "633BFFF400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6735,
											"end": 6764,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6764,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6735,
											"end": 6764,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6735,
											"end": 6764,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6764,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6764,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6764,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6764,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6735,
											"end": 6764,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6764,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 6701,
											"end": 6764,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6775,
											"end": 6806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 6790,
											"end": 6796,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6798,
											"end": 6805,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6775,
											"end": 6789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 6775,
											"end": 6806,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6775,
											"end": 6806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 6775,
											"end": 6806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6282,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 6172,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4696,
											"end": 4705,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4696,
											"end": 4710,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4692,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 4692,
											"end": 4741,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "PUSH",
											"source": 9,
											"value": "3F36295200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4741,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4692,
											"end": 4741,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 4692,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6236,
											"end": 6274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1243,
											"end": 1244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6264,
											"end": 6273,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6236,
											"end": 6250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 6236,
											"end": 6274,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6236,
											"end": 6274,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 6236,
											"end": 6274,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1477,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1477,
											"end": 1493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1477,
											"end": 1493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1477,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1477,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1477,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1477,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "909"
										},
										{
											"begin": 1893,
											"end": 1938,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12500,
											"end": 12526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 12519,
											"end": 12525,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12500,
											"end": 12518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 12500,
											"end": 12526,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12500,
											"end": 12526,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 12500,
											"end": 12526,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12566,
											"end": 12567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12541,
											"end": 12568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12541,
											"end": 12568,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12541,
											"end": 12554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12541,
											"end": 12568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12541,
											"end": 12568,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12541,
											"end": 12568,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12537,
											"end": 12645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 12537,
											"end": 12645,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12619,
											"end": 12632,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "18378D8C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 12592,
											"end": 12633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12633,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12537,
											"end": 12645,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 12537,
											"end": 12645,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12691,
											"end": 12704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12671,
											"end": 12677,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12657,
											"end": 12678,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12657,
											"end": 12688,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12657,
											"end": 12704,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12750,
											"end": 12763,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12720,
											"end": 12764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12720,
											"end": 12764,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12742,
											"end": 12748,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12720,
											"end": 12764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12720,
											"end": 12764,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12720,
											"end": 12764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "BDC29F691F539931AAC0EB61B6040016944303CD36B1493F9BC5D3F74E10C8E2"
										},
										{
											"begin": 12720,
											"end": 12764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12720,
											"end": 12764,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12720,
											"end": 12764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12720,
											"end": 12764,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12720,
											"end": 12764,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12720,
											"end": 12764,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12720,
											"end": 12764,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12720,
											"end": 12764,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12720,
											"end": 12764,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12376,
											"end": 12772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1243,
											"end": 1244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13057,
											"end": 13078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13057,
											"end": 13078,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13057,
											"end": 13063,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13057,
											"end": 13078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13057,
											"end": 13078,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13057,
											"end": 13078,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13053,
											"end": 13304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 13053,
											"end": 13304,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13096,
											"end": 13108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13124,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13114,
											"end": 13129,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13137,
											"end": 13144,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 13114,
											"end": 13149,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13149,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13149,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13149,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13149,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13169,
											"end": 13176,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13164,
											"end": 13211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 13164,
											"end": 13211,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13185,
											"end": 13211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13185,
											"end": 13211,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13185,
											"end": 13211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2AE871A500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13185,
											"end": 13211,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13185,
											"end": 13211,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13185,
											"end": 13211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13185,
											"end": 13211,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13185,
											"end": 13211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13185,
											"end": 13211,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13185,
											"end": 13211,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13185,
											"end": 13211,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13185,
											"end": 13211,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13185,
											"end": 13211,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13185,
											"end": 13211,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13164,
											"end": 13211,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 13164,
											"end": 13211,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13080,
											"end": 13223,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13053,
											"end": 13304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 13053,
											"end": 13304,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13053,
											"end": 13304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 13053,
											"end": 13304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 13272,
											"end": 13282,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 13284,
											"end": 13291,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13251,
											"end": 13257,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13244,
											"end": 13271,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 13244,
											"end": 13271,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13292,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13292,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13244,
											"end": 13292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13292,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13292,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 13244,
											"end": 13292,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13053,
											"end": 13304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 13053,
											"end": 13304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 13311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1244,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1245,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11252,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 11252,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 11252,
											"end": 11270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11252,
											"end": 11270,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 11252,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11290,
											"end": 11303,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11304,
											"end": 11310,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11290,
											"end": 11311,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11173,
											"end": 11319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11023,
											"end": 11030,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11050,
											"end": 11060,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11061,
											"end": 11067,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11069,
											"end": 11074,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11075,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11043,
											"end": 11075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11043,
											"end": 11075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 11083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8355,
											"end": 8362,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4530,
											"end": 4531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4519,
											"end": 4526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4519,
											"end": 4531,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 4515,
											"end": 4562,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "PUSH",
											"source": 9,
											"value": "3F36295200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4562,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 4515,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8468,
											"end": 8494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 8487,
											"end": 8493,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8468,
											"end": 8486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 8468,
											"end": 8494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8468,
											"end": 8494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 8468,
											"end": 8494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8529,
											"end": 8539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8540,
											"end": 8546,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8529,
											"end": 8547,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8548,
											"end": 8558,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8529,
											"end": 8559,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8584,
											"end": 8595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8574,
											"end": 8581,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8574,
											"end": 8595,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8570,
											"end": 8682,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8570,
											"end": 8682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 8570,
											"end": 8682,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8649,
											"end": 8656,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8658,
											"end": 8669,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "61965C4E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 8619,
											"end": 8670,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8670,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8570,
											"end": 8682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 8570,
											"end": 8682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8694,
											"end": 8718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8721,
											"end": 8754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 8738,
											"end": 8744,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8746,
											"end": 8753,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8721,
											"end": 8737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 8721,
											"end": 8754,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8721,
											"end": 8754,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 8721,
											"end": 8754,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8694,
											"end": 8754,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8694,
											"end": 8754,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8788,
											"end": 8808,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "909"
										},
										{
											"begin": 8769,
											"end": 8785,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8769,
											"end": 8808,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8765,
											"end": 8964,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8765,
											"end": 8964,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 8765,
											"end": 8964,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8882,
											"end": 8898,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8917,
											"end": 8937,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "909"
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8672A83200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 8832,
											"end": 8952,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8832,
											"end": 8952,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8765,
											"end": 8964,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 8765,
											"end": 8964,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9081,
											"end": 9088,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9078,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 9067,
											"end": 9088,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 9067,
											"end": 9088,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9088,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 9067,
											"end": 9088,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9045,
											"end": 9051,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9034,
											"end": 9052,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9063,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9034,
											"end": 9064,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9088,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9034,
											"end": 9088,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9122,
											"end": 9138,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9099,
											"end": 9118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 9099,
											"end": 9138,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9138,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9149,
											"end": 9166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 9149,
											"end": 9168,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9168,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1243,
											"end": 1244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9219,
											"end": 9240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9219,
											"end": 9240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9219,
											"end": 9225,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9219,
											"end": 9240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9219,
											"end": 9240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9219,
											"end": 9240,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9215,
											"end": 9466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 9215,
											"end": 9466,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9276,
											"end": 9286,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9276,
											"end": 9291,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9299,
											"end": 9306,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 9276,
											"end": 9311,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9276,
											"end": 9311,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9257,
											"end": 9311,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9257,
											"end": 9311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9257,
											"end": 9311,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9331,
											"end": 9338,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9326,
											"end": 9373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 9326,
											"end": 9373,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9347,
											"end": 9373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9347,
											"end": 9373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9347,
											"end": 9373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2AE871A500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9347,
											"end": 9373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9347,
											"end": 9373,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9347,
											"end": 9373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9347,
											"end": 9373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9347,
											"end": 9373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9347,
											"end": 9373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9347,
											"end": 9373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9347,
											"end": 9373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9347,
											"end": 9373,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9347,
											"end": 9373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9347,
											"end": 9373,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9326,
											"end": 9373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 9326,
											"end": 9373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9242,
											"end": 9385,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9215,
											"end": 9466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 9215,
											"end": 9466,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9215,
											"end": 9466,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 9215,
											"end": 9466,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9406,
											"end": 9454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 9434,
											"end": 9444,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9446,
											"end": 9453,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9413,
											"end": 9419,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9406,
											"end": 9433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9406,
											"end": 9433,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9406,
											"end": 9433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 9406,
											"end": 9433,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9406,
											"end": 9454,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9406,
											"end": 9454,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9406,
											"end": 9454,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9406,
											"end": 9454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9406,
											"end": 9454,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9406,
											"end": 9454,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9406,
											"end": 9454,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 9406,
											"end": 9454,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9215,
											"end": 9466,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 9215,
											"end": 9466,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9505,
											"end": 9511,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9503,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "91FB9D98B786C57D74C099CCD2BECA1739E9F6A81FB49001CA465C4B7591BBE2"
										},
										{
											"begin": 9513,
											"end": 9520,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9538,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 9483,
											"end": 9539,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9483,
											"end": 9539,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 8364,
											"end": 9547,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8364,
											"end": 9547,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 9547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1243,
											"end": 1244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11919,
											"end": 11940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11919,
											"end": 11940,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11919,
											"end": 11925,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11919,
											"end": 11940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11919,
											"end": 11940,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11919,
											"end": 11940,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 11915,
											"end": 11982,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 11981,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FB21D4AA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 11949,
											"end": 11982,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 11982,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11982,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 11915,
											"end": 11982,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12019,
											"end": 12020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11997,
											"end": 12021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11997,
											"end": 12021,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11997,
											"end": 12007,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11997,
											"end": 12021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11997,
											"end": 12021,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11997,
											"end": 12021,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11993,
											"end": 12095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 11993,
											"end": 12095,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12072,
											"end": 12082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "18378D8C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 12045,
											"end": 12083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12045,
											"end": 12083,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11993,
											"end": 12095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 11993,
											"end": 12095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12169,
											"end": 12179,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12204,
											"end": 12213,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12225,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12131,
											"end": 12225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12127,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12128,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12262,
											"end": 12272,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12254,
											"end": 12260,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6D28000829E988111DFD4F9075C2DC3F734E48013BC94E9FFBC8E523687314D7"
										},
										{
											"begin": 12274,
											"end": 12283,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 12241,
											"end": 12284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12241,
											"end": 12284,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13604,
											"end": 13797,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 13604,
											"end": 13797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13719,
											"end": 13720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13676,
											"end": 13721,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13676,
											"end": 13721,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13689,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13690,
											"end": 13696,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13676,
											"end": 13697,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13676,
											"end": 13707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13676,
											"end": 13707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13707,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13707,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13676,
											"end": 13707,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13707,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13707,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13676,
											"end": 13707,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13721,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13676,
											"end": 13721,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13676,
											"end": 13721,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13672,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 13672,
											"end": 13790,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13771,
											"end": 13777,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "PUSH",
											"source": 9,
											"value": "FB21D4AA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 13745,
											"end": 13778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13745,
											"end": 13778,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13672,
											"end": 13790,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 13672,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13604,
											"end": 13797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13604,
											"end": 13797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "204"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1645,
											"end": 1677,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 1680,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 1825,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1771,
											"end": 1888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 1953,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2115,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2029,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2108,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2097,
											"end": 2102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2115,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2121,
											"end": 2233,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2121,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2220,
											"end": 2225,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2204,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2192,
											"end": 2227,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2121,
											"end": 2233,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2121,
											"end": 2233,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2121,
											"end": 2233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2453,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2239,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2332,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2368,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2355,
											"end": 2364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2369,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2379,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 2443,
											"end": 2444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2441,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2428,
											"end": 2445,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2419,
											"end": 2425,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2379,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2379,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2379,
											"end": 2446,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 2379,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2453,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2453,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2933,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2459,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2527,
											"end": 2533,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2586,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2581,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2582,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2587,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2671,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 2552,
											"end": 2671,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2590,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 2590,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 2590,
											"end": 2669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2590,
											"end": 2669,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 2590,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2671,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 2552,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2769,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2756,
											"end": 2778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2735,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2681,
											"end": 2798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2863,
											"end": 2916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2808,
											"end": 2926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2933,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2933,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2933,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2933,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2933,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 3057,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2939,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3044,
											"end": 3049,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3026,
											"end": 3050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3024,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3014,
											"end": 3051,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 3057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 3057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 3057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3285,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3063,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3160,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3196,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3183,
											"end": 3192,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3179,
											"end": 3197,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3207,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 3275,
											"end": 3276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3264,
											"end": 3273,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3277,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3257,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3207,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 3207,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3207,
											"end": 3278,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 3207,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3285,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3285,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3285,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3285,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3291,
											"end": 3620,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3291,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3401,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3396,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3385,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3374,
											"end": 3397,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3370,
											"end": 3402,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3486,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3367,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 3405,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 3405,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3484,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 3405,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3486,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3367,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3525,
											"end": 3526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 3595,
											"end": 3602,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3586,
											"end": 3592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3584,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 3550,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 3550,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3603,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3603,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3291,
											"end": 3620,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3291,
											"end": 3620,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3291,
											"end": 3620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3291,
											"end": 3620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3291,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3734,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 3626,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3703,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 3721,
											"end": 3726,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3703,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3703,
											"end": 3727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3703,
											"end": 3727,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 3703,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3701,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3728,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3842,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 3740,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3829,
											"end": 3834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 3813,
											"end": 3835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3835,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3813,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3811,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3836,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3914,
											"end": 4432,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 3914,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4062,
											"end": 4065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4058,
											"end": 4072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4159,
											"end": 4163,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4157,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4148,
											"end": 4164,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4165,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 4235,
											"end": 4239,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4230,
											"end": 4233,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4224,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 4178,
											"end": 4241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4241,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 4178,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4082,
											"end": 4251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4326,
											"end": 4342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4320,
											"end": 4343,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4356,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 4409,
											"end": 4413,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4404,
											"end": 4407,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4400,
											"end": 4414,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4356,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4356,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4356,
											"end": 4415,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 4356,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4036,
											"end": 4432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3914,
											"end": 4432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3914,
											"end": 4432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3914,
											"end": 4432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4772,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 4438,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4587,
											"end": 4591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4625,
											"end": 4627,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 4623,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4628,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4638,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4762,
											"end": 4763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4764,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4738,
											"end": 4744,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4638,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 4638,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4638,
											"end": 4765,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4638,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4772,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4772,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 5102,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 4778,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 4899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4935,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4922,
											"end": 4931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4936,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 5014,
											"end": 5015,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5012,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4999,
											"end": 5016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 4996,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 4946,
											"end": 5017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4946,
											"end": 5017,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 4946,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 5091,
											"end": 5093,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5080,
											"end": 5089,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5073,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5027,
											"end": 5095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5095,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 5027,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 5102,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 5102,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 5102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 5102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 5102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 5102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5226,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 5108,
											"end": 5226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5179,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5195,
											"end": 5200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5179,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 5179,
											"end": 5201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5179,
											"end": 5201,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5179,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5172,
											"end": 5177,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5202,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5159,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 5159,
											"end": 5220,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5216,
											"end": 5217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5213,
											"end": 5214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5218,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5159,
											"end": 5220,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 5159,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5232,
											"end": 5367,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5232,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5320,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5321,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5292,
											"end": 5321,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5292,
											"end": 5321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 5355,
											"end": 5360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 5330,
											"end": 5361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5361,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 5330,
											"end": 5361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5232,
											"end": 5367,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5232,
											"end": 5367,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5232,
											"end": 5367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5232,
											"end": 5367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5232,
											"end": 5367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5988,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 5373,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5448,
											"end": 5454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5515,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5501,
											"end": 5510,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5511,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5484,
											"end": 5516,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5481,
											"end": 5600,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5481,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 5481,
											"end": 5600,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5519,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 5519,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 5519,
											"end": 5598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5519,
											"end": 5598,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 5519,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5481,
											"end": 5600,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 5481,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5664,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 5709,
											"end": 5716,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5706,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 5698,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5685,
											"end": 5707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5664,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5664,
											"end": 5717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5664,
											"end": 5717,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 5664,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5717,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5766,
											"end": 5768,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5792,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 5837,
											"end": 5844,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5828,
											"end": 5834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5817,
											"end": 5826,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5792,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5792,
											"end": 5845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5792,
											"end": 5845,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 5792,
											"end": 5845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5782,
											"end": 5845,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5782,
											"end": 5845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5737,
											"end": 5855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5894,
											"end": 5896,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5920,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 5963,
											"end": 5970,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5954,
											"end": 5960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5939,
											"end": 5961,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5920,
											"end": 5971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5971,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 5920,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5910,
											"end": 5971,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5910,
											"end": 5971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5865,
											"end": 5981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5988,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5988,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5988,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6174,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5994,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6042,
											"end": 6119,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6039,
											"end": 6040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6120,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6139,
											"end": 6143,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 6136,
											"end": 6137,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6129,
											"end": 6144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6163,
											"end": 6167,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6160,
											"end": 6161,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6168,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6371,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 6180,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6220,
											"end": 6223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6239,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 6257,
											"end": 6258,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6239,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 6239,
											"end": 6259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6239,
											"end": 6259,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 6239,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6291,
											"end": 6292,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 6273,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6268,
											"end": 6293,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6268,
											"end": 6293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6313,
											"end": 6314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6309,
											"end": 6318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6302,
											"end": 6318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6302,
											"end": 6318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6337,
											"end": 6340,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6331,
											"end": 6341,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6364,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 6328,
											"end": 6364,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 6344,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 6344,
											"end": 6362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6362,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 6344,
											"end": 6362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6364,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 6328,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6371,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6371,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6819,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 6377,
											"end": 6819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6564,
											"end": 6566,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6553,
											"end": 6562,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6567,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 6567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6577,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 6645,
											"end": 6646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6634,
											"end": 6643,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6630,
											"end": 6647,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6621,
											"end": 6627,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6577,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 6577,
											"end": 6648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6577,
											"end": 6648,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 6577,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 6726,
											"end": 6728,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6715,
											"end": 6724,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6711,
											"end": 6729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6702,
											"end": 6708,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 6658,
											"end": 6730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6730,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 6658,
											"end": 6730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6740,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 6808,
											"end": 6810,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6797,
											"end": 6806,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 6811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6784,
											"end": 6790,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6740,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 6740,
											"end": 6812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6740,
											"end": 6812,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 6740,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6819,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6819,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6825,
											"end": 7058,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 6825,
											"end": 7058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 6905,
											"end": 6910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6887,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 6887,
											"end": 6911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6887,
											"end": 6911,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 6887,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6878,
											"end": 6911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6878,
											"end": 6911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6999,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6926,
											"end": 6931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6923,
											"end": 7000,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6920,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 6920,
											"end": 7023,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7003,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 7003,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 7003,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7003,
											"end": 7021,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 7003,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6920,
											"end": 7023,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 6920,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7050,
											"end": 7051,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7043,
											"end": 7048,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7039,
											"end": 7052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7032,
											"end": 7052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7032,
											"end": 7052,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6825,
											"end": 7058,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6825,
											"end": 7058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6825,
											"end": 7058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6825,
											"end": 7058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7064,
											"end": 7396,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 7064,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7223,
											"end": 7225,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7212,
											"end": 7221,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7208,
											"end": 7226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7200,
											"end": 7226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7200,
											"end": 7226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7236,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 7304,
											"end": 7305,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7302,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7306,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7286,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7236,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 7236,
											"end": 7307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7236,
											"end": 7307,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 7236,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7317,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 7385,
											"end": 7387,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7374,
											"end": 7383,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7367,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7317,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 7317,
											"end": 7389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7317,
											"end": 7389,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 7317,
											"end": 7389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7064,
											"end": 7396,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7064,
											"end": 7396,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7064,
											"end": 7396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7064,
											"end": 7396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7064,
											"end": 7396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7064,
											"end": 7396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7507,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 7402,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7500,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7471,
											"end": 7476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7467,
											"end": 7501,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7456,
											"end": 7501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7456,
											"end": 7501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7507,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7507,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7507,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7513,
											"end": 7633,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7513,
											"end": 7633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7585,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7585,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 7585,
											"end": 7608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7585,
											"end": 7608,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 7585,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7578,
											"end": 7583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7609,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7565,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 7565,
											"end": 7627,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7624,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7625,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7565,
											"end": 7627,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 7565,
											"end": 7627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7513,
											"end": 7633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7513,
											"end": 7633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7780,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 7639,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7695,
											"end": 7700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7726,
											"end": 7732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7733,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7711,
											"end": 7733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7711,
											"end": 7733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7742,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 7768,
											"end": 7773,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7742,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7742,
											"end": 7774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7742,
											"end": 7774,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 7742,
											"end": 7774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7780,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7780,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7862,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 7786,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7822,
											"end": 7829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7851,
											"end": 7856,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7840,
											"end": 7856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7840,
											"end": 7856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7862,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7862,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7988,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7868,
											"end": 7988,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7940,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 7957,
											"end": 7962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7940,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 7940,
											"end": 7963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7940,
											"end": 7963,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 7940,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7933,
											"end": 7938,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7930,
											"end": 7964,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7920,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 7920,
											"end": 7982,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 7979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7975,
											"end": 7976,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7968,
											"end": 7980,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7920,
											"end": 7982,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 7920,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8135,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7994,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8050,
											"end": 8055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8087,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8075,
											"end": 8088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8088,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8097,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 8123,
											"end": 8128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8097,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 8097,
											"end": 8129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8097,
											"end": 8129,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 8097,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8135,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8135,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8141,
											"end": 8284,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 8141,
											"end": 8284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8198,
											"end": 8203,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8229,
											"end": 8235,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8236,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8214,
											"end": 8236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8214,
											"end": 8236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8245,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 8272,
											"end": 8277,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8245,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 8245,
											"end": 8278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8245,
											"end": 8278,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 8245,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8141,
											"end": 8284,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8141,
											"end": 8284,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8141,
											"end": 8284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8141,
											"end": 8284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8141,
											"end": 8284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 9261,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 8290,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8393,
											"end": 8399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8409,
											"end": 8415,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8423,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8425,
											"end": 8431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8474,
											"end": 8477,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8462,
											"end": 8471,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8453,
											"end": 8460,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8449,
											"end": 8472,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8478,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8442,
											"end": 8562,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8442,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 8442,
											"end": 8562,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8481,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 8481,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 8481,
											"end": 8560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8481,
											"end": 8560,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 8481,
											"end": 8560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8442,
											"end": 8562,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 8442,
											"end": 8562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8601,
											"end": 8602,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8626,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 8681,
											"end": 8688,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8661,
											"end": 8670,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8657,
											"end": 8679,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8626,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 8626,
											"end": 8689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8626,
											"end": 8689,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 8626,
											"end": 8689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8689,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8572,
											"end": 8699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8738,
											"end": 8740,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8764,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 8819,
											"end": 8826,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8816,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8799,
											"end": 8808,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8817,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8764,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 8764,
											"end": 8827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8764,
											"end": 8827,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 8764,
											"end": 8827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8754,
											"end": 8827,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8754,
											"end": 8827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8709,
											"end": 8837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 8878,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8902,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 8958,
											"end": 8965,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8949,
											"end": 8955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8938,
											"end": 8947,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8934,
											"end": 8956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8902,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 8902,
											"end": 8966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8902,
											"end": 8966,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 8902,
											"end": 8966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 8966,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 8966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8847,
											"end": 8976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9015,
											"end": 9017,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9041,
											"end": 9105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 9097,
											"end": 9104,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9088,
											"end": 9094,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9077,
											"end": 9086,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9073,
											"end": 9095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9041,
											"end": 9105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 9041,
											"end": 9105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9041,
											"end": 9105,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 9041,
											"end": 9105,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9031,
											"end": 9105,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9031,
											"end": 9105,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8986,
											"end": 9115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9154,
											"end": 9157,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9181,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 9236,
											"end": 9243,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9227,
											"end": 9233,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9216,
											"end": 9225,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9212,
											"end": 9234,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9181,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 9181,
											"end": 9244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9181,
											"end": 9244,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 9181,
											"end": 9244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9171,
											"end": 9244,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9171,
											"end": 9244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9125,
											"end": 9254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 9261,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 9261,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 9261,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 9261,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 9261,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 9261,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 9261,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 9261,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 9261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9267,
											"end": 9369,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 9267,
											"end": 9369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9309,
											"end": 9317,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9356,
											"end": 9361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9353,
											"end": 9354,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9349,
											"end": 9362,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 9328,
											"end": 9362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9328,
											"end": 9362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9267,
											"end": 9369,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9267,
											"end": 9369,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9267,
											"end": 9369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9267,
											"end": 9369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9375,
											"end": 10223,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 9375,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9436,
											"end": 9441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9443,
											"end": 9447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9467,
											"end": 9473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9458,
											"end": 9473,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9458,
											"end": 9473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9496,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 10217,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 9505,
											"end": 10217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9527,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9516,
											"end": 9524,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9513,
											"end": 9528,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 10217,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 9505,
											"end": 10217,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9621,
											"end": 9625,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9616,
											"end": 9619,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9612,
											"end": 9626,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9606,
											"end": 9610,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9603,
											"end": 9627,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9600,
											"end": 9650,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9600,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 9600,
											"end": 9650,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 9630,
											"end": 9648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9600,
											"end": 9650,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 9600,
											"end": 9650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9680,
											"end": 9681,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9670,
											"end": 9678,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9666,
											"end": 9682,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9663,
											"end": 10114,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9663,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 9663,
											"end": 10114,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10095,
											"end": 10099,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10088,
											"end": 10093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10100,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10075,
											"end": 10100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9663,
											"end": 10114,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 9663,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10149,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10139,
											"end": 10143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10135,
											"end": 10150,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10127,
											"end": 10150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10127,
											"end": 10150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10175,
											"end": 10207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 10198,
											"end": 10206,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10175,
											"end": 10207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 10175,
											"end": 10207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10175,
											"end": 10207,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 10175,
											"end": 10207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10163,
											"end": 10207,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 10163,
											"end": 10207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 9505,
											"end": 10217,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 10217,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 9505,
											"end": 10217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9375,
											"end": 10223,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9375,
											"end": 10223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9375,
											"end": 10223,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9375,
											"end": 10223,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9375,
											"end": 10223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9375,
											"end": 10223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9375,
											"end": 10223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9375,
											"end": 10223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 11302,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 10229,
											"end": 11302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10283,
											"end": 10288,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10474,
											"end": 10482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10464,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 10464,
											"end": 10504,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10495,
											"end": 10496,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10486,
											"end": 10496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10486,
											"end": 10496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10497,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 10497,
											"end": 10502,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10464,
											"end": 10504,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 10464,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10523,
											"end": 10527,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10513,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 10513,
											"end": 10549,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10540,
											"end": 10541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10531,
											"end": 10541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10542,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 10542,
											"end": 10547,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10513,
											"end": 10549,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 10513,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10609,
											"end": 10613,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10658,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10652,
											"end": 10679,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 10679,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 10652,
											"end": 10679,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10693,
											"end": 10694,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10688,
											"end": 10879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10688,
											"end": 10879,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10688,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 10688,
											"end": 10879,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10602,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 10602,
											"end": 10879,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 10679,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 10652,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10670,
											"end": 10671,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10661,
											"end": 10671,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10661,
											"end": 10671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 10672,
											"end": 10677,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10688,
											"end": 10879,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 10688,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10733,
											"end": 10736,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 10723,
											"end": 10731,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10720,
											"end": 10737,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10717,
											"end": 10760,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10717,
											"end": 10760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 10717,
											"end": 10760,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 10740,
											"end": 10758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 10740,
											"end": 10758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10740,
											"end": 10758,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 10740,
											"end": 10758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10717,
											"end": 10760,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 10717,
											"end": 10760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10789,
											"end": 10797,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10787,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10782,
											"end": 10798,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 10798,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 10798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10824,
											"end": 10827,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10817,
											"end": 10822,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10814,
											"end": 10828,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10851,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 10811,
											"end": 10851,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10831,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 10831,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 10831,
											"end": 10849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10831,
											"end": 10849,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 10831,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10851,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 10811,
											"end": 10851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10864,
											"end": 10869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10864,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 10864,
											"end": 10869,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10602,
											"end": 10879,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 10602,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10602,
											"end": 10879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10988,
											"end": 10990,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10978,
											"end": 10986,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10975,
											"end": 10991,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10969,
											"end": 10972,
											"name": "PUSH",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 10963,
											"end": 10967,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10960,
											"end": 10973,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10956,
											"end": 10992,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10938,
											"end": 10940,
											"name": "PUSH",
											"source": 10,
											"value": "4E"
										},
										{
											"begin": 10928,
											"end": 10936,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10925,
											"end": 10941,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10920,
											"end": 10922,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 10914,
											"end": 10918,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10911,
											"end": 10923,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10907,
											"end": 10942,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10891,
											"end": 11002,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 10888,
											"end": 11134,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10888,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 10888,
											"end": 11134,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11038,
											"end": 11042,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11034,
											"end": 11053,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 11025,
											"end": 11053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11025,
											"end": 11053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11079,
											"end": 11082,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11072,
											"end": 11077,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11069,
											"end": 11083,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11106,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 11066,
											"end": 11106,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 11086,
											"end": 11104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11106,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 11066,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11119,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 11119,
											"end": 11124,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10888,
											"end": 11134,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 10888,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11159,
											"end": 11201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 11197,
											"end": 11200,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11187,
											"end": 11195,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11181,
											"end": 11185,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11159,
											"end": 11201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 11159,
											"end": 11201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11159,
											"end": 11201,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 11159,
											"end": 11201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11144,
											"end": 11201,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11144,
											"end": 11201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11144,
											"end": 11201,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11144,
											"end": 11201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11233,
											"end": 11237,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11228,
											"end": 11231,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11224,
											"end": 11238,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11217,
											"end": 11222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11214,
											"end": 11239,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11262,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 11211,
											"end": 11262,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 11242,
											"end": 11260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11262,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 11211,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11291,
											"end": 11295,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11284,
											"end": 11289,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11280,
											"end": 11296,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 11271,
											"end": 11296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11271,
											"end": 11296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 11302,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 10229,
											"end": 11302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 11302,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 11302,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 11302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 11302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 11302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 11302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11308,
											"end": 11593,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 11308,
											"end": 11593,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11392,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 11410,
											"end": 11414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11392,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 11392,
											"end": 11415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11392,
											"end": 11415,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 11392,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11384,
											"end": 11415,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11384,
											"end": 11415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11436,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 11454,
											"end": 11462,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11436,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 11436,
											"end": 11463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11436,
											"end": 11463,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 11436,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11424,
											"end": 11463,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11424,
											"end": 11463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 11519,
											"end": 11585,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11509,
											"end": 11517,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11503,
											"end": 11507,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 11482,
											"end": 11586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11586,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 11482,
											"end": 11586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11473,
											"end": 11586,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11473,
											"end": 11586,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11308,
											"end": 11593,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11308,
											"end": 11593,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11308,
											"end": 11593,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11308,
											"end": 11593,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11308,
											"end": 11593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11599,
											"end": 12009,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 11599,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11639,
											"end": 11646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11662,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 11680,
											"end": 11681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 11662,
											"end": 11682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 11682,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 11662,
											"end": 11682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11657,
											"end": 11682,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11657,
											"end": 11682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11696,
											"end": 11716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 11714,
											"end": 11715,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11696,
											"end": 11716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 11696,
											"end": 11716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11696,
											"end": 11716,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 11696,
											"end": 11716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11691,
											"end": 11716,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11691,
											"end": 11716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11751,
											"end": 11752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11748,
											"end": 11749,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11744,
											"end": 11753,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 11773,
											"end": 11803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 11791,
											"end": 11802,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11773,
											"end": 11803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 11773,
											"end": 11803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11773,
											"end": 11803,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 11773,
											"end": 11803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11762,
											"end": 11803,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11762,
											"end": 11803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11952,
											"end": 11953,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11943,
											"end": 11950,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11939,
											"end": 11954,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11936,
											"end": 11937,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11933,
											"end": 11955,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 11913,
											"end": 11914,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11906,
											"end": 11915,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11886,
											"end": 11969,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 11863,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 11863,
											"end": 12002,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11982,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 11982,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 11982,
											"end": 12000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11982,
											"end": 12000,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 11982,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11863,
											"end": 12002,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 11863,
											"end": 12002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 12009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11599,
											"end": 12009,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11599,
											"end": 12009,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11599,
											"end": 12009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11599,
											"end": 12009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11599,
											"end": 12009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12015,
											"end": 12195,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 12015,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12063,
											"end": 12140,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12060,
											"end": 12061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12053,
											"end": 12141,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12160,
											"end": 12164,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 12157,
											"end": 12158,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12150,
											"end": 12165,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12184,
											"end": 12188,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12181,
											"end": 12182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12174,
											"end": 12189,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12201,
											"end": 12386,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 12201,
											"end": 12386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12241,
											"end": 12242,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12258,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 12276,
											"end": 12277,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12258,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 12258,
											"end": 12278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12258,
											"end": 12278,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 12258,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12253,
											"end": 12278,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12253,
											"end": 12278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12292,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 12310,
											"end": 12311,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12292,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 12292,
											"end": 12312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12292,
											"end": 12312,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 12292,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12287,
											"end": 12312,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12287,
											"end": 12312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12331,
											"end": 12332,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12321,
											"end": 12356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 12321,
											"end": 12356,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12336,
											"end": 12354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 12336,
											"end": 12354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 12336,
											"end": 12354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12336,
											"end": 12354,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 12336,
											"end": 12354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12321,
											"end": 12356,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 12321,
											"end": 12356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12378,
											"end": 12379,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12375,
											"end": 12376,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12371,
											"end": 12380,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12380,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12201,
											"end": 12386,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12201,
											"end": 12386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12201,
											"end": 12386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12201,
											"end": 12386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12201,
											"end": 12386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12392,
											"end": 12673,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 12392,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12450,
											"end": 12455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12474,
											"end": 12497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 12492,
											"end": 12496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12474,
											"end": 12497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 12474,
											"end": 12497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12474,
											"end": 12497,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 12474,
											"end": 12497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12466,
											"end": 12497,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12466,
											"end": 12497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12518,
											"end": 12543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 12534,
											"end": 12542,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12518,
											"end": 12543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 12518,
											"end": 12543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12518,
											"end": 12543,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 12518,
											"end": 12543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12506,
											"end": 12543,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12506,
											"end": 12543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12562,
											"end": 12666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 12599,
											"end": 12665,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12589,
											"end": 12597,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12583,
											"end": 12587,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12562,
											"end": 12666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 12562,
											"end": 12666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12562,
											"end": 12666,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 12562,
											"end": 12666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12553,
											"end": 12666,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12553,
											"end": 12666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12392,
											"end": 12673,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12392,
											"end": 12673,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12392,
											"end": 12673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12392,
											"end": 12673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12392,
											"end": 12673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12679,
											"end": 12826,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 12679,
											"end": 12826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12780,
											"end": 12791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12817,
											"end": 12820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12802,
											"end": 12820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12802,
											"end": 12820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12679,
											"end": 12826,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12679,
											"end": 12826,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12679,
											"end": 12826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12679,
											"end": 12826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12679,
											"end": 12826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12832,
											"end": 12946,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 12832,
											"end": 12946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12832,
											"end": 12946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12832,
											"end": 12946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 13350,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 12952,
											"end": 13350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13111,
											"end": 13114,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13132,
											"end": 13215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 13213,
											"end": 13214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13208,
											"end": 13211,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13132,
											"end": 13215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 13132,
											"end": 13215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13132,
											"end": 13215,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 13132,
											"end": 13215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13125,
											"end": 13215,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13125,
											"end": 13215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13224,
											"end": 13317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 13313,
											"end": 13316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13224,
											"end": 13317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 13224,
											"end": 13317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13224,
											"end": 13317,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 13224,
											"end": 13317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13342,
											"end": 13343,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13337,
											"end": 13340,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13333,
											"end": 13344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13326,
											"end": 13344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13326,
											"end": 13344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 13350,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 13350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 13350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 13350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13356,
											"end": 13735,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 13356,
											"end": 13735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13540,
											"end": 13543,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13562,
											"end": 13709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 13705,
											"end": 13708,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13562,
											"end": 13709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 13562,
											"end": 13709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13562,
											"end": 13709,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 13562,
											"end": 13709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13555,
											"end": 13709,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13555,
											"end": 13709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13726,
											"end": 13729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13719,
											"end": 13729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13719,
											"end": 13729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13356,
											"end": 13735,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13356,
											"end": 13735,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13356,
											"end": 13735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13356,
											"end": 13735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13741,
											"end": 13935,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 13741,
											"end": 13935,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13781,
											"end": 13785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13801,
											"end": 13821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 13819,
											"end": 13820,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13801,
											"end": 13821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 13801,
											"end": 13821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13801,
											"end": 13821,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 13801,
											"end": 13821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13796,
											"end": 13821,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13796,
											"end": 13821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13835,
											"end": 13855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 13853,
											"end": 13854,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13835,
											"end": 13855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 13835,
											"end": 13855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13835,
											"end": 13855,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 13835,
											"end": 13855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13830,
											"end": 13855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13830,
											"end": 13855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13879,
											"end": 13880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13876,
											"end": 13877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13872,
											"end": 13881,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13864,
											"end": 13881,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13864,
											"end": 13881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13903,
											"end": 13904,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13897,
											"end": 13901,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13894,
											"end": 13905,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13891,
											"end": 13928,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13891,
											"end": 13928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 13891,
											"end": 13928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13908,
											"end": 13926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 13908,
											"end": 13926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 13908,
											"end": 13926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13908,
											"end": 13926,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 13908,
											"end": 13926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13891,
											"end": 13928,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 13891,
											"end": 13928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13741,
											"end": 13935,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13741,
											"end": 13935,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13741,
											"end": 13935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13741,
											"end": 13935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13741,
											"end": 13935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 14383,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 13941,
											"end": 14383,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14090,
											"end": 14094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14128,
											"end": 14130,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14117,
											"end": 14126,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14113,
											"end": 14131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14105,
											"end": 14131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14105,
											"end": 14131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 14209,
											"end": 14210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14198,
											"end": 14207,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14211,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14185,
											"end": 14191,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 14141,
											"end": 14212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 14141,
											"end": 14212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14222,
											"end": 14294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 14290,
											"end": 14292,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14279,
											"end": 14288,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14275,
											"end": 14293,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14266,
											"end": 14272,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14222,
											"end": 14294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 14222,
											"end": 14294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14222,
											"end": 14294,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 14222,
											"end": 14294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14304,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 14372,
											"end": 14374,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14361,
											"end": 14370,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14357,
											"end": 14375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14348,
											"end": 14354,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14304,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 14304,
											"end": 14376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14304,
											"end": 14376,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 14304,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 14383,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 14383,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 14383,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 14383,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 14383,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 14383,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 14383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14389,
											"end": 14721,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 14389,
											"end": 14721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14510,
											"end": 14514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14548,
											"end": 14550,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14537,
											"end": 14546,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14525,
											"end": 14551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14525,
											"end": 14551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14561,
											"end": 14632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 14629,
											"end": 14630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14618,
											"end": 14627,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14614,
											"end": 14631,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14605,
											"end": 14611,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14561,
											"end": 14632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 14561,
											"end": 14632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14561,
											"end": 14632,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 14561,
											"end": 14632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14642,
											"end": 14714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 14710,
											"end": 14712,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14699,
											"end": 14708,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14695,
											"end": 14713,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14686,
											"end": 14692,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14642,
											"end": 14714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 14642,
											"end": 14714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14642,
											"end": 14714,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 14642,
											"end": 14714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14389,
											"end": 14721,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14389,
											"end": 14721,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14389,
											"end": 14721,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14389,
											"end": 14721,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14389,
											"end": 14721,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14389,
											"end": 14721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/kipu-bankV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ETH_ADDRESS()": "a734f06e",
							"USD_DECIMALS()": "2f6ee695",
							"USD_PRECISION()": "4bfdfa6f",
							"allowToken(address,address,uint8)": "fee4aaeb",
							"depositEth()": "439370b1",
							"depositToken(address,uint256)": "338b5dea",
							"emergencyWithdraw(address,uint256)": "95ccea67",
							"getBalance(address,address)": "d4fac45d",
							"getTokenConfig(address)": "cb67e3b1",
							"getTokenValueUSD(address,uint256)": "2a6daba3",
							"i_bankCapUSD()": "0ccee433",
							"i_withdrawalLimitUSD()": "6b251a0b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"s_balances(address,address)": "dccd58e3",
							"s_depositCount()": "cac2e25f",
							"s_tokenConfig(address)": "fc5c96ee",
							"s_totalBankValueUSD()": "edd2f190",
							"s_withdrawalCount()": "b2343b1c",
							"transferOwnership(address)": "f2fde38b",
							"updateTokenPriceFeed(address,address)": "82d2f5b1",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bankCapUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawalLimitUSD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_ethUsdPriceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentBalanceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositValueUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capUSD\",\"type\":\"uint256\"}],\"name\":\"KipuBank__BankCapExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KipuBank__FallbackNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requiredAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableAmount\",\"type\":\"uint256\"}],\"name\":\"KipuBank__InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"KipuBank__InvalidPriceFeed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KipuBank__MustUseDepositEth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"KipuBank__TokenNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KipuBank__TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawValueUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limitUSD\",\"type\":\"uint256\"}],\"name\":\"KipuBank__WithdrawLimitExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"KipuBank__ZeroAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valueUSD\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"TokenAllowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPriceFeed\",\"type\":\"address\"}],\"name\":\"TokenPriceFeedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valueUSD\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"ETH_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USD_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USD_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"name\":\"allowToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct KipuBank.TokenConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getTokenValueUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_bankCapUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_withdrawalLimitUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_depositCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_tokenConfig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalBankValueUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_withdrawalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newPriceFeed\",\"type\":\"address\"}],\"name\":\"updateTokenPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Facundo Criado\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"allowToken(address,address,uint8)\":{\"params\":{\"_decimals\":\"Los decimales del token.\",\"_priceFeed\":\"La direccion del oraculo de precio.\",\"_token\":\"La direccion del contrato ERC-20.\"}},\"constructor\":{\"params\":{\"_bankCapUSD\":\"Limite de capitalizacion del banco en USD.\",\"_ethUsdPriceFeed\":\"Direccion del oraculo ETH/USD de Chainlink.\",\"_withdrawalLimitUSD\":\"Limite de retiro por tx en USD.\"}},\"depositEth()\":{\"details\":\"Usa `msg.value` como la cantidad a depositar.\"},\"depositToken(address,uint256)\":{\"details\":\"El usuario debe haber aprobado al contrato previamente.\",\"params\":{\"_amount\":\"La cantidad de tokens a depositar (en la unidad mas peque\\u00f1a del token).\",\"_token\":\"La direccion del contrato ERC-20.\"}},\"emergencyWithdraw(address,uint256)\":{\"details\":\"No actualiza `s_totalBankValueUSD` intencionalmente, ya que es una funcion de emergencia.\"},\"getTokenValueUSD(address,uint256)\":{\"params\":{\"_amount\":\"La cantidad del token.\",\"_token\":\"La direccion del token.\"},\"returns\":{\"_0\":\"valueUSD El valor equivalente en USD (con 8 decimales).\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"params\":{\"_amount\":\"La cantidad a retirar (en la unidad mas peque\\u00f1a del token).\",\"_token\":\"La direccion del token a retirar (usar `address(0)` para ETH).\"}}},\"stateVariables\":{\"s_balances\":{\"details\":\"(tokenAddress => userAddress => balance)\"}},\"title\":\"Contrato bancario\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ETH_ADDRESS()\":{\"notice\":\"Direccion reservada para representar Ether nativo.\"},\"USD_DECIMALS()\":{\"notice\":\"Los decimales estandar para los precios en USD de Chainlink.\"},\"USD_PRECISION()\":{\"notice\":\"Precision para calculos con USD (10**8).\"},\"allowToken(address,address,uint8)\":{\"notice\":\"(Owner) Permite un nuevo token ERC-20 en el banco.\"},\"depositEth()\":{\"notice\":\"Permite a un usuario depositar Ether nativo.\"},\"depositToken(address,uint256)\":{\"notice\":\"Permite a un usuario depositar tokens ERC-20 permitidos.\"},\"emergencyWithdraw(address,uint256)\":{\"notice\":\"(Owner) Permite retirar fondos de emergencia.\"},\"getBalance(address,address)\":{\"notice\":\"Obtiene el saldo de un usuario para un token especifico.\"},\"getTokenConfig(address)\":{\"notice\":\"Obtiene la configuracion de un token permitido.\"},\"getTokenValueUSD(address,uint256)\":{\"notice\":\"Funcion de conversion de valor. Obtiene el valor en USD de una cantidad de token.\"},\"i_bankCapUSD()\":{\"notice\":\"Limite de capitalizacion del banco en USD (con 8 decimales).\"},\"i_withdrawalLimitUSD()\":{\"notice\":\"Limite de retiro por transaccion en USD (con 8 decimales).\"},\"s_balances(address,address)\":{\"notice\":\"Mapping anidado para la contabilidad multi-token.\"},\"s_depositCount()\":{\"notice\":\"Cantidad de depositos que se realizaron en el contrato.\"},\"s_tokenConfig(address)\":{\"notice\":\"Mapping para almacenar la configuracion (price feed y decimales) de cada token permitido.\"},\"s_totalBankValueUSD()\":{\"notice\":\"Valor total de todos los activos en el banco, en USD (con 8 decimales).\"},\"s_withdrawalCount()\":{\"notice\":\"Cantidad de retiros que se realizaron en el contrato.\"},\"updateTokenPriceFeed(address,address)\":{\"notice\":\"(Owner) Actualiza el oraculo de un token.\"},\"withdraw(address,uint256)\":{\"notice\":\"Permite a un usuario retirar sus fondos (Ether o ERC-20).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/kipu-bankV2.sol\":\"KipuBank\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/kipu-bankV2.sol\":{\"keccak256\":\"0x04651fd2149dbb84a84b50b611a8a3aaa525d27f54b30c5e5cd87c3cd05fc135\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d569ca214812450cb6ac0bdbf5e51cd12dbf4ae1af87f4bab746e777f2eaab1c\",\"dweb:/ipfs/QmRK9jodDn5na1Vk2cYJoaFeFomByKJtBbNSPoyzm4w7Nn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "contracts/kipu-bankV2.sol:KipuBank",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 912,
								"contract": "contracts/kipu-bankV2.sol:KipuBank",
								"label": "s_totalBankValueUSD",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 915,
								"contract": "contracts/kipu-bankV2.sol:KipuBank",
								"label": "s_depositCount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 918,
								"contract": "contracts/kipu-bankV2.sol:KipuBank",
								"label": "s_withdrawalCount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 925,
								"contract": "contracts/kipu-bankV2.sol:KipuBank",
								"label": "s_balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 931,
								"contract": "contracts/kipu-bankV2.sol:KipuBank",
								"label": "s_tokenConfig",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(TokenConfig)886_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(TokenConfig)886_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct KipuBank.TokenConfig)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenConfig)886_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(TokenConfig)886_storage": {
								"encoding": "inplace",
								"label": "struct KipuBank.TokenConfig",
								"members": [
									{
										"astId": 883,
										"contract": "contracts/kipu-bankV2.sol:KipuBank",
										"label": "priceFeed",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 885,
										"contract": "contracts/kipu-bankV2.sol:KipuBank",
										"label": "decimals",
										"offset": 20,
										"slot": "0",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ETH_ADDRESS()": {
								"notice": "Direccion reservada para representar Ether nativo."
							},
							"USD_DECIMALS()": {
								"notice": "Los decimales estandar para los precios en USD de Chainlink."
							},
							"USD_PRECISION()": {
								"notice": "Precision para calculos con USD (10**8)."
							},
							"allowToken(address,address,uint8)": {
								"notice": "(Owner) Permite un nuevo token ERC-20 en el banco."
							},
							"depositEth()": {
								"notice": "Permite a un usuario depositar Ether nativo."
							},
							"depositToken(address,uint256)": {
								"notice": "Permite a un usuario depositar tokens ERC-20 permitidos."
							},
							"emergencyWithdraw(address,uint256)": {
								"notice": "(Owner) Permite retirar fondos de emergencia."
							},
							"getBalance(address,address)": {
								"notice": "Obtiene el saldo de un usuario para un token especifico."
							},
							"getTokenConfig(address)": {
								"notice": "Obtiene la configuracion de un token permitido."
							},
							"getTokenValueUSD(address,uint256)": {
								"notice": "Funcion de conversion de valor. Obtiene el valor en USD de una cantidad de token."
							},
							"i_bankCapUSD()": {
								"notice": "Limite de capitalizacion del banco en USD (con 8 decimales)."
							},
							"i_withdrawalLimitUSD()": {
								"notice": "Limite de retiro por transaccion en USD (con 8 decimales)."
							},
							"s_balances(address,address)": {
								"notice": "Mapping anidado para la contabilidad multi-token."
							},
							"s_depositCount()": {
								"notice": "Cantidad de depositos que se realizaron en el contrato."
							},
							"s_tokenConfig(address)": {
								"notice": "Mapping para almacenar la configuracion (price feed y decimales) de cada token permitido."
							},
							"s_totalBankValueUSD()": {
								"notice": "Valor total de todos los activos en el banco, en USD (con 8 decimales)."
							},
							"s_withdrawalCount()": {
								"notice": "Cantidad de retiros que se realizaron en el contrato."
							},
							"updateTokenPriceFeed(address,address)": {
								"notice": "(Owner) Actualiza el oraculo de un token."
							},
							"withdraw(address,uint256)": {
								"notice": "Permite a un usuario retirar sus fondos (Ether o ERC-20)."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							855
						],
						"Ownable": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 856,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 855,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 51,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 855,
										"src": "692:7:1"
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								855
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 59,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 64,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 70,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 76,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 77,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 85,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 83,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 82,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 88,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 91,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 96,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 193,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 99,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 102,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 104,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 109,
												"id": 111,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 193,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 117,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 119,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 123,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 122,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 126,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 193,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 136,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 133,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 193,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 152,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 159,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 158,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 193,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"id": 180,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 187,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 186,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 193,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 194,
							"src": "663:2438:1",
							"usedErrors": [
								59,
								64
							],
							"usedEvents": [
								70
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							275
						],
						"IERC165": [
							867
						],
						"IERC20": [
							361
						]
					},
					"id": 276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 276,
							"sourceUnit": 284,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 196,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 276,
							"sourceUnit": 280,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 198,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 867,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 201,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 361,
										"src": "590:6:2"
									},
									"id": 202,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 203,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 867,
										"src": "598:7:2"
									},
									"id": 204,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 200,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 275,
							"linearizedBaseContracts": [
								275,
								867,
								361
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 275,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 275,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 275,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 275,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 275,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 275,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 276,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								304
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							867
						]
					},
					"id": 280,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 277,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 280,
							"sourceUnit": 868,
							"src": "133:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 278,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 867,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							361
						]
					},
					"id": 284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 281,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 284,
							"sourceUnit": 362,
							"src": "132:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 282,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "140:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							361
						]
					},
					"id": 362,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 285,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 361,
							"linearizedBaseContracts": [
								361
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 295,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 304,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 361,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 361,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 325,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 361,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 361,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 361,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 361,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 362,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								295,
								304
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							275
						],
						"IERC20": [
							361
						],
						"SafeERC20": [
							825
						]
					},
					"id": 826,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 363,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 826,
							"sourceUnit": 362,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 364,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 826,
							"sourceUnit": 276,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 366,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 275,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 368,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 825,
							"linearizedBaseContracts": [
								825
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 373,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 382,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 394,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 397,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 328,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 399,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 400,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 401,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 395,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 393,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 385,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 384,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 361,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 825,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 420,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 423,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 360,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 425,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 426,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 414,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 427,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 416,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 428,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 421,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 419,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 409,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 408,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 361,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 825,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 450,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 328,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 452,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 453,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 441,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 454,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 448,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 446,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 445,
												"id": 457,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 361,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 825,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 475,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 478,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 360,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 480,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 465,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 481,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 482,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 469,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 483,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 476,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 474,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 473,
												"id": 486,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 361,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 825,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													500
												],
												"declarations": [
													{
														"constant": false,
														"id": 500,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 499,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 509,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 505,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$825",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$825",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 503,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 507,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 501,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 512,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 513,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 514,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 510,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 491,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 490,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 361,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 825,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 560,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															531
														],
														"declarations": [
															{
																"constant": false,
																"id": 531,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 560,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 530,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 540,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 536,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$825",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$825",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 534,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 538,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 532,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$361",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 338,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 541,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 542,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 551,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 550,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 545,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 525,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 546,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 531,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 547,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 527,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 544,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 382,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 549,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 553,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$361",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 554,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 555,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 556,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$361",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 552,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 559,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 522,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 521,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 361,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 825,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 574,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 573,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 577,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 348,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 579,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 580,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 581,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 575,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 585,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 586,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 584,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 607,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 606,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 593,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$361",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 348,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 595,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 568,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 596,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 591,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 600,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 602,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 603,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 601,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 564,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 361,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 825,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 622,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 638,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 226,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 649,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 648,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 644,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 642,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 641,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 647,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 650,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 627,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 612,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 611,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 275,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 825,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 667,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 682,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 683,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 660,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 684,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 685,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 680,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 252,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 696,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 695,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 691,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 656,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 689,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 688,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 694,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 697,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 679,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 673,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 656,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 674,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 675,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 676,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 672,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 678,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 655,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 654,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 275,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 663,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 825,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 712,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 726,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 727,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 728,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 724,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 274,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 739,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 738,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 734,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 703,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 732,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 731,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 737,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 740,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 718,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 703,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 719,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 705,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 720,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 717,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 722,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 702,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 701,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 275,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 708,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 825,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 748,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 748,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 746,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 758,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 769,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 763,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 746,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$361",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$361",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 761,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 776,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 746,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$361",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$361",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 745,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 744,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 361,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 747,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 825,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													795
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 794,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 797,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 799,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													801
												],
												"declarations": [
													{
														"constant": false,
														"id": 801,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 800,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 802,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 789,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 789,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 798,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 801,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 795,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 787,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 803,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 804,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 805,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 816,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 810,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 787,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$361",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$361",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 809,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 808,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 820,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 793,
												"id": 822,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 786,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 785,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 361,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 788,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 791,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 825,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 826,
							"src": "698:9376:6",
							"usedErrors": [
								373,
								382
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							855
						]
					},
					"id": 856,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 827,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 828,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 855,
							"linearizedBaseContracts": [
								855
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 833,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 832,
												"id": 835,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 855,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 842,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 841,
												"id": 844,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 839,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 855,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 850,
												"id": 852,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 855,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 856,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							867
						]
					},
					"id": 868,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 857,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 858,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 867,
							"linearizedBaseContracts": [
								867
							],
							"name": "IERC165",
							"nameLocation": "433:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "819:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 860,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:8"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "862:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:8"
									},
									"scope": 867,
									"src": "792:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 868,
							"src": "423:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:8"
				},
				"id": 8
			},
			"contracts/kipu-bankV2.sol": {
				"ast": {
					"absolutePath": "contracts/kipu-bankV2.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							855
						],
						"IERC1363": [
							275
						],
						"IERC20": [
							361
						],
						"KipuBank": [
							1575
						],
						"Ownable": [
							193
						],
						"SafeERC20": [
							825
						]
					},
					"id": 1576,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 869,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 870,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1576,
							"sourceUnit": 194,
							"src": "60:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 871,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1576,
							"sourceUnit": 362,
							"src": "114:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 872,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1576,
							"sourceUnit": 826,
							"src": "172:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 873,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1576,
							"sourceUnit": 46,
							"src": "239:76:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 875,
										"name": "Ownable",
										"nameLocations": [
											"405:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 193,
										"src": "405:7:9"
									},
									"id": 876,
									"nodeType": "InheritanceSpecifier",
									"src": "405:7:9"
								}
							],
							"canonicalName": "KipuBank",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 874,
								"nodeType": "StructuredDocumentation",
								"src": "319:63:9",
								"text": " @title Contrato bancario\n @author Facundo Criado"
							},
							"fullyImplemented": true,
							"id": 1575,
							"linearizedBaseContracts": [
								1575,
								193,
								855
							],
							"name": "KipuBank",
							"nameLocation": "393:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 880,
									"libraryName": {
										"id": 877,
										"name": "SafeERC20",
										"nameLocations": [
											"428:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 825,
										"src": "428:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "422:27:9",
									"typeName": {
										"id": 879,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 878,
											"name": "IERC20",
											"nameLocations": [
												"442:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 361,
											"src": "442:6:9"
										},
										"referencedDeclaration": 361,
										"src": "442:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$361",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "KipuBank.TokenConfig",
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "651:194:9",
										"text": " @notice Configuracion para cada token permitido en el banco.\n @param priceFeed La direccion del oraculo de Chainlink.\n @param decimals Los decimales del token."
									},
									"id": 886,
									"members": [
										{
											"constant": false,
											"id": 883,
											"mutability": "mutable",
											"name": "priceFeed",
											"nameLocation": "889:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 886,
											"src": "881:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 882,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "881:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 885,
											"mutability": "mutable",
											"name": "decimals",
											"nameLocation": "915:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 886,
											"src": "909:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 884,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "909:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenConfig",
									"nameLocation": "858:11:9",
									"nodeType": "StructDefinition",
									"scope": 1575,
									"src": "851:80:9",
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "1129:62:9",
										"text": "@notice Direccion reservada para representar Ether nativo."
									},
									"functionSelector": "a734f06e",
									"id": 893,
									"mutability": "constant",
									"name": "ETH_ADDRESS",
									"nameLocation": "1221:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1575,
									"src": "1197:48:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 888,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1197:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 891,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1243:1:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 890,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1235:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 889,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1235:7:9",
												"typeDescriptions": {}
											}
										},
										"id": 892,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1235:10:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "1254:72:9",
										"text": "@notice Los decimales estandar para los precios en USD de Chainlink."
									},
									"functionSelector": "2f6ee695",
									"id": 897,
									"mutability": "constant",
									"name": "USD_DECIMALS",
									"nameLocation": "1354:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1575,
									"src": "1332:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 895,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1332:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "38",
										"id": 896,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1369:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8_by_1",
											"typeString": "int_const 8"
										},
										"value": "8"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "1379:52:9",
										"text": "@notice Precision para calculos con USD (10**8)."
									},
									"functionSelector": "4bfdfa6f",
									"id": 903,
									"mutability": "constant",
									"name": "USD_PRECISION",
									"nameLocation": "1461:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1575,
									"src": "1437:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 899,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1437:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 902,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 900,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1477:2:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"id": 901,
											"name": "USD_DECIMALS",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 897,
											"src": "1481:12:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"src": "1477:16:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "1693:72:9",
										"text": "@notice Limite de capitalizacion del banco en USD (con 8 decimales)."
									},
									"functionSelector": "0ccee433",
									"id": 906,
									"mutability": "immutable",
									"name": "i_bankCapUSD",
									"nameLocation": "1796:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1575,
									"src": "1771:37:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 905,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1771:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "1817:70:9",
										"text": "@notice Limite de retiro por transaccion en USD (con 8 decimales)."
									},
									"functionSelector": "6b251a0b",
									"id": 909,
									"mutability": "immutable",
									"name": "i_withdrawalLimitUSD",
									"nameLocation": "1918:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 1575,
									"src": "1893:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 908,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1893:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1947:83:9",
										"text": "@notice Valor total de todos los activos en el banco, en USD (con 8 decimales)."
									},
									"functionSelector": "edd2f190",
									"id": 912,
									"mutability": "mutable",
									"name": "s_totalBankValueUSD",
									"nameLocation": "2051:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 1575,
									"src": "2036:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 911,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2036:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "2079:67:9",
										"text": "@notice Cantidad de depositos que se realizaron en el contrato."
									},
									"functionSelector": "cac2e25f",
									"id": 915,
									"mutability": "mutable",
									"name": "s_depositCount",
									"nameLocation": "2167:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1575,
									"src": "2152:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 914,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2152:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "2191:65:9",
										"text": "@notice Cantidad de retiros que se realizaron en el contrato."
									},
									"functionSelector": "b2343b1c",
									"id": 918,
									"mutability": "mutable",
									"name": "s_withdrawalCount",
									"nameLocation": "2277:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1575,
									"src": "2262:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 917,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2262:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "2304:116:9",
										"text": "@notice Mapping anidado para la contabilidad multi-token.\n @dev (tokenAddress => userAddress => balance)"
									},
									"functionSelector": "dccd58e3",
									"id": 925,
									"mutability": "mutable",
									"name": "s_balances",
									"nameLocation": "2481:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1575,
									"src": "2426:65:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 924,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 920,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2434:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2426:47:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 923,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 921,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2453:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2445:27:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 922,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2464:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "2500:101:9",
										"text": "@notice Mapping para almacenar la configuracion (price feed y decimales) de cada token permitido."
									},
									"functionSelector": "fc5c96ee",
									"id": 931,
									"mutability": "mutable",
									"name": "s_tokenConfig",
									"nameLocation": "2646:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1575,
									"src": "2607:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$886_storage_$",
										"typeString": "mapping(address => struct KipuBank.TokenConfig)"
									},
									"typeName": {
										"id": 930,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 927,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2615:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2607:31:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$886_storage_$",
											"typeString": "mapping(address => struct KipuBank.TokenConfig)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 929,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 928,
												"name": "TokenConfig",
												"nameLocations": [
													"2626:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 886,
												"src": "2626:11:9"
											},
											"referencedDeclaration": 886,
											"src": "2626:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenConfig_$886_storage_ptr",
												"typeString": "struct KipuBank.TokenConfig"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f5681f9d0db1b911ac18ee83d515a1cf1051853a9eae418316a2fdf7dea427c5",
									"id": 941,
									"name": "Deposited",
									"nameLocation": "2857:9:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2893:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2877:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2924:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2908:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2908:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2948:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2940:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"indexed": false,
												"mutability": "mutable",
												"name": "valueUSD",
												"nameLocation": "2973:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2965:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2866:122:9"
									},
									"src": "2851:138:9"
								},
								{
									"anonymous": false,
									"eventSelector": "91fb9d98b786c57d74c099ccd2beca1739e9f6a81fb49001ca465c4b7591bbe2",
									"id": 951,
									"name": "Withdrawn",
									"nameLocation": "3001:9:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3037:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "3021:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3021:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3068:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "3052:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3092:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "3084:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3084:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"indexed": false,
												"mutability": "mutable",
												"name": "valueUSD",
												"nameLocation": "3117:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "3109:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3109:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3010:122:9"
									},
									"src": "2995:138:9"
								},
								{
									"anonymous": false,
									"eventSelector": "6d28000829e988111dfd4f9075c2dc3f734e48013bc94e9ffbc8e523687314d7",
									"id": 959,
									"name": "TokenAllowed",
									"nameLocation": "3145:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "3168:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3168:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"indexed": true,
												"mutability": "mutable",
												"name": "priceFeed",
												"nameLocation": "3216:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "3200:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3200:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"indexed": false,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "3242:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "3236:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 956,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3236:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:100:9"
									},
									"src": "3139:119:9"
								},
								{
									"anonymous": false,
									"eventSelector": "bdc29f691f539931aac0eb61b6040016944303cd36b1493f9bc5d3f74e10c8e2",
									"id": 965,
									"name": "TokenPriceFeedUpdated",
									"nameLocation": "3270:21:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3318:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "3302:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3302:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"indexed": true,
												"mutability": "mutable",
												"name": "newPriceFeed",
												"nameLocation": "3350:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "3334:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3334:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:78:9"
									},
									"src": "3264:106:9"
								},
								{
									"errorSelector": "3f362952",
									"id": 967,
									"name": "KipuBank__ZeroAmount",
									"nameLocation": "3567:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3587:2:9"
									},
									"src": "3561:29:9"
								},
								{
									"errorSelector": "fb21d4aa",
									"id": 971,
									"name": "KipuBank__TokenNotAllowed",
									"nameLocation": "3602:25:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3636:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "3628:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:15:9"
									},
									"src": "3596:47:9"
								},
								{
									"errorSelector": "18378d8c",
									"id": 975,
									"name": "KipuBank__InvalidPriceFeed",
									"nameLocation": "3655:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "priceFeed",
												"nameLocation": "3690:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "3682:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3682:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3681:19:9"
									},
									"src": "3649:52:9"
								},
								{
									"errorSelector": "c4a04723",
									"id": 983,
									"name": "KipuBank__BankCapExceeded",
									"nameLocation": "3713:25:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "currentBalanceUSD",
												"nameLocation": "3757:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "3749:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "depositValueUSD",
												"nameLocation": "3793:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "3785:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3785:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "capUSD",
												"nameLocation": "3827:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "3819:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:102:9"
									},
									"src": "3707:134:9"
								},
								{
									"errorSelector": "8672a832",
									"id": 989,
									"name": "KipuBank__WithdrawLimitExceeded",
									"nameLocation": "3853:31:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "withdrawValueUSD",
												"nameLocation": "3903:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3895:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3895:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "limitUSD",
												"nameLocation": "3938:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3930:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:69:9"
									},
									"src": "3847:107:9"
								},
								{
									"errorSelector": "61965c4e",
									"id": 995,
									"name": "KipuBank__InsufficientBalance",
									"nameLocation": "3966:29:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "requiredAmount",
												"nameLocation": "4014:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "4006:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "availableAmount",
												"nameLocation": "4047:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "4039:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:74:9"
									},
									"src": "3960:110:9"
								},
								{
									"errorSelector": "2ae871a5",
									"id": 997,
									"name": "KipuBank__TransferFailed",
									"nameLocation": "4082:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4106:2:9"
									},
									"src": "4076:33:9"
								},
								{
									"errorSelector": "633bfff4",
									"id": 999,
									"name": "KipuBank__MustUseDepositEth",
									"nameLocation": "4121:27:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4148:2:9"
									},
									"src": "4115:36:9"
								},
								{
									"errorSelector": "9437e2a7",
									"id": 1001,
									"name": "KipuBank__FallbackNotAllowed",
									"nameLocation": "4163:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4191:2:9"
									},
									"src": "4157:37:9"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "4504:78:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1006,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "4519:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4530:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4519:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "4515:47:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1009,
															"name": "KipuBank__ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "4540:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4540:22:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1011,
													"nodeType": "RevertStatement",
													"src": "4533:29:9"
												}
											},
											{
												"id": 1013,
												"nodeType": "PlaceholderStatement",
												"src": "4573:1:9"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "4387:71:9",
										"text": "@dev Modificador que asegura que el valor del parametro no es cero."
									},
									"id": 1015,
									"name": "nonZeroAmount",
									"nameLocation": "4473:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4495:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "4487:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4487:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4486:17:9"
									},
									"src": "4464:118:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "4681:80:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1018,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4696:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4700:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "4696:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4709:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4696:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1025,
												"nodeType": "IfStatement",
												"src": "4692:49:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1022,
															"name": "KipuBank__ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "4719:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4719:22:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1024,
													"nodeType": "RevertStatement",
													"src": "4712:29:9"
												}
											},
											{
												"id": 1026,
												"nodeType": "PlaceholderStatement",
												"src": "4752:1:9"
											}
										]
									},
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "4590:61:9",
										"text": "@dev Modificador que asegura que el msg.value no es cero."
									},
									"id": 1028,
									"name": "nonZeroValue",
									"nameLocation": "4666:12:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4678:2:9"
									},
									"src": "4657:104:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "5329:511:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "_ethUsdPriceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "5344:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5372:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5364:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5364:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5364:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5344:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1053,
												"nodeType": "IfStatement",
												"src": "5340:114:9",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "5376:78:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "_ethUsdPriceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "5425:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1048,
																	"name": "KipuBank__InvalidPriceFeed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "5398:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5398:44:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "5391:51:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1054,
														"name": "i_bankCapUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "5466:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1055,
														"name": "_bankCapUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "5481:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5466:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "5466:26:9"
											},
											{
												"expression": {
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1058,
														"name": "i_withdrawalLimitUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "5503:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1059,
														"name": "_withdrawalLimitUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "5526:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5503:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "5503:42:9"
											},
											{
												"expression": {
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1062,
															"name": "s_tokenConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "5613:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$886_storage_$",
																"typeString": "mapping(address => struct KipuBank.TokenConfig storage ref)"
															}
														},
														"id": 1064,
														"indexExpression": {
															"id": 1063,
															"name": "ETH_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "5627:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5613:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$886_storage",
															"typeString": "struct KipuBank.TokenConfig storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1066,
																"name": "_ethUsdPriceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "5680:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "3138",
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5721:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																}
															],
															"id": 1065,
															"name": "TokenConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "5642:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenConfig_$886_storage_ptr_$",
																"typeString": "type(struct KipuBank.TokenConfig storage pointer)"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"5669:9:9",
															"5711:8:9"
														],
														"names": [
															"priceFeed",
															"decimals"
														],
														"nodeType": "FunctionCall",
														"src": "5642:127:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$886_memory_ptr",
															"typeString": "struct KipuBank.TokenConfig memory"
														}
													},
													"src": "5613:156:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$886_storage",
														"typeString": "struct KipuBank.TokenConfig storage ref"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "5613:156:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1072,
															"name": "ETH_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "5798:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "_ethUsdPriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "5811:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3138",
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5829:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															}
														],
														"id": 1071,
														"name": "TokenAllowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "5785:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint8_$returns$__$",
															"typeString": "function (address,address,uint8)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "EmitStatement",
												"src": "5780:52:9"
											}
										]
									},
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "4956:225:9",
										"text": " @param _bankCapUSD Limite de capitalizacion del banco en USD.\n @param _withdrawalLimitUSD Limite de retiro por tx en USD.\n @param _ethUsdPriceFeed Direccion del oraculo ETH/USD de Chainlink."
									},
									"id": 1078,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1038,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5317:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5321:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5317:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1040,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1037,
												"name": "Ownable",
												"nameLocations": [
													"5309:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 193,
												"src": "5309:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5309:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "_bankCapUSD",
												"nameLocation": "5217:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "5209:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5209:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "_withdrawalLimitUSD",
												"nameLocation": "5247:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "5239:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "_ethUsdPriceFeed",
												"nameLocation": "5285:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "5277:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5277:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5198:110:9"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5329:0:9"
									},
									"scope": 1575,
									"src": "5187:653:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "6224:58:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1085,
															"name": "ETH_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "6251:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1086,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6264:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6268:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6264:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_handleDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "6236:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6236:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "6236:38:9"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "6034:132:9",
										"text": " @notice Permite a un usuario depositar Ether nativo.\n @dev Usa `msg.value` como la cantidad a depositar."
									},
									"functionSelector": "439370b1",
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1082,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1081,
												"name": "nonZeroValue",
												"nameLocations": [
													"6211:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1028,
												"src": "6211:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6211:12:9"
										}
									],
									"name": "depositEth",
									"nameLocation": "6181:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6191:2:9"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6224:0:9"
									},
									"scope": 1575,
									"src": "6172:110:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "6689:125:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1102,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "6705:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1103,
														"name": "ETH_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "6715:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6705:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1108,
												"nodeType": "IfStatement",
												"src": "6701:63:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1105,
															"name": "KipuBank__MustUseDepositEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "6735:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6735:29:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1107,
													"nodeType": "RevertStatement",
													"src": "6728:36:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1110,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "6790:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "6798:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1109,
														"name": "_handleDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "6775:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6775:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "6775:31:9"
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "6290:306:9",
										"text": " @notice Permite a un usuario depositar tokens ERC-20 permitidos.\n @dev El usuario debe haber aprobado al contrato previamente.\n @param _token La direccion del contrato ERC-20.\n @param _amount La cantidad de tokens a depositar (en la unidad mas pequeña del token)."
									},
									"functionSelector": "338b5dea",
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1099,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1096,
													"src": "6680:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1100,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1098,
												"name": "nonZeroAmount",
												"nameLocations": [
													"6666:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1015,
												"src": "6666:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6666:22:9"
										}
									],
									"name": "depositToken",
									"nameLocation": "6611:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "6632:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "6624:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6648:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "6640:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6640:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6623:33:9"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6689:0:9"
									},
									"scope": 1575,
									"src": "6602:212:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "6962:1050:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1124,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "7115:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1123,
														"name": "_checkTokenAllowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "7096:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7096:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "7096:26:9"
											},
											{
												"assignments": [
													1128
												],
												"declarations": [
													{
														"constant": false,
														"id": 1128,
														"mutability": "mutable",
														"name": "depositValueUSD",
														"nameLocation": "7143:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1193,
														"src": "7135:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7135:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1133,
												"initialValue": {
													"arguments": [
														{
															"id": 1130,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "7178:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "7186:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1129,
														"name": "getTokenValueUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "7161:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7161:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7135:59:9"
											},
											{
												"assignments": [
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "newTotalBankValueUSD",
														"nameLocation": "7213:20:9",
														"nodeType": "VariableDeclaration",
														"scope": 1193,
														"src": "7205:28:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7205:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1139,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1136,
														"name": "s_totalBankValueUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "7236:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1137,
														"name": "depositValueUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "7258:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7236:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7205:68:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "newTotalBankValueUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "7290:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1141,
														"name": "i_bankCapUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "7313:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7290:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1150,
												"nodeType": "IfStatement",
												"src": "7286:218:9",
												"trueBody": {
													"id": 1149,
													"nodeType": "Block",
													"src": "7327:177:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1144,
																		"name": "s_totalBankValueUSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "7393:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1145,
																		"name": "depositValueUSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1128,
																		"src": "7431:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1146,
																		"name": "i_bankCapUSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 906,
																		"src": "7465:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1143,
																	"name": "KipuBank__BankCapExceeded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "7349:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7349:143:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1148,
															"nodeType": "RevertStatement",
															"src": "7342:150:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1151,
																"name": "s_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "7544:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1155,
															"indexExpression": {
																"id": 1152,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "7555:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7544:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1156,
														"indexExpression": {
															"expression": {
																"id": 1153,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7563:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7567:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7563:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7544:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1157,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "7578:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7544:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "7544:41:9"
											},
											{
												"expression": {
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1160,
														"name": "s_totalBankValueUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "7596:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1161,
														"name": "newTotalBankValueUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "7618:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7596:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "7596:42:9"
											},
											{
												"expression": {
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "7649:16:9",
													"subExpression": {
														"id": 1164,
														"name": "s_depositCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "7649:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "7649:16:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1167,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "7749:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1168,
														"name": "ETH_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "7759:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7749:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1184,
												"nodeType": "IfStatement",
												"src": "7745:187:9",
												"trueBody": {
													"id": 1183,
													"nodeType": "Block",
													"src": "7772:160:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1174,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7837:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7841:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7837:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1178,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "7874:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_KipuBank_$1575",
																					"typeString": "contract KipuBank"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_KipuBank_$1575",
																					"typeString": "contract KipuBank"
																				}
																			],
																			"id": 1177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7866:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1176,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7866:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7866:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1180,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1120,
																		"src": "7898:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1171,
																				"name": "_token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1118,
																				"src": "7794:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1170,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 361,
																			"src": "7787:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$361_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7787:14:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7802:16:9",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 433,
																	"src": "7787:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$361_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7787:133:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1182,
															"nodeType": "ExpressionStatement",
															"src": "7787:133:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1186,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7959:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7963:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7959:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "7971:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1189,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "7979:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1190,
															"name": "depositValueUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "7988:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1185,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "7949:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7949:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "EmitStatement",
												"src": "7944:60:9"
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "6822:69:9",
										"text": " @notice Logica interna unificada para depositos."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_handleDeposit",
									"nameLocation": "6906:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "6929:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "6921:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6921:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6945:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "6937:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6937:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6920:33:9"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6962:0:9"
									},
									"scope": 1575,
									"src": "6897:1115:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "8364:1183:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1206,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "8487:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1205,
														"name": "_checkTokenAllowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "8468:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8468:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "8468:26:9"
											},
											{
												"assignments": [
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "userBalance",
														"nameLocation": "8515:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1302,
														"src": "8507:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1209,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8507:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1217,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1211,
															"name": "s_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "8529:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1213,
														"indexExpression": {
															"id": 1212,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "8540:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8529:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1216,
													"indexExpression": {
														"expression": {
															"id": 1214,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8548:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8552:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8548:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8529:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8507:52:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1218,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "8574:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1219,
														"name": "userBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "8584:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8574:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1227,
												"nodeType": "IfStatement",
												"src": "8570:112:9",
												"trueBody": {
													"id": 1226,
													"nodeType": "Block",
													"src": "8597:85:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1222,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "8649:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1223,
																		"name": "userBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1210,
																		"src": "8658:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1221,
																	"name": "KipuBank__InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "8619:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8619:51:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1225,
															"nodeType": "RevertStatement",
															"src": "8612:58:9"
														}
													]
												}
											},
											{
												"assignments": [
													1229
												],
												"declarations": [
													{
														"constant": false,
														"id": 1229,
														"mutability": "mutable",
														"name": "withdrawValueUSD",
														"nameLocation": "8702:16:9",
														"nodeType": "VariableDeclaration",
														"scope": 1302,
														"src": "8694:24:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8694:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1234,
												"initialValue": {
													"arguments": [
														{
															"id": 1231,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "8738:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "8746:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1230,
														"name": "getTokenValueUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "8721:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8721:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8694:60:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1235,
														"name": "withdrawValueUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "8769:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1236,
														"name": "i_withdrawalLimitUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "8788:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8769:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1244,
												"nodeType": "IfStatement",
												"src": "8765:199:9",
												"trueBody": {
													"id": 1243,
													"nodeType": "Block",
													"src": "8810:154:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1239,
																		"name": "withdrawValueUSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "8882:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1240,
																		"name": "i_withdrawalLimitUSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "8917:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1238,
																	"name": "KipuBank__WithdrawLimitExceeded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "8832:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8832:120:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1242,
															"nodeType": "RevertStatement",
															"src": "8825:127:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1245,
																"name": "s_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "9034:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1249,
															"indexExpression": {
																"id": 1246,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "9045:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9034:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1250,
														"indexExpression": {
															"expression": {
																"id": 1247,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9053:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9057:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9053:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9034:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1251,
															"name": "userBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "9067:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1252,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "9081:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9067:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9034:54:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "9034:54:9"
											},
											{
												"expression": {
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1256,
														"name": "s_totalBankValueUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "9099:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1257,
														"name": "withdrawValueUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "9122:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9099:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "9099:39:9"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "9149:19:9",
													"subExpression": {
														"id": 1260,
														"name": "s_withdrawalCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "9149:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "9149:19:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1263,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "9219:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1264,
														"name": "ETH_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "9229:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9219:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1292,
													"nodeType": "Block",
													"src": "9391:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1287,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9434:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9438:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9434:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1289,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "9446:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1284,
																				"name": "_token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1197,
																				"src": "9413:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1283,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 361,
																			"src": "9406:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$361_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9406:14:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9421:12:9",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 406,
																	"src": "9406:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$361_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9406:48:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1291,
															"nodeType": "ExpressionStatement",
															"src": "9406:48:9"
														}
													]
												},
												"id": 1293,
												"nodeType": "IfStatement",
												"src": "9215:251:9",
												"trueBody": {
													"id": 1282,
													"nodeType": "Block",
													"src": "9242:143:9",
													"statements": [
														{
															"assignments": [
																1267,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1267,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "9263:7:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1282,
																	"src": "9258:12:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1266,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "9258:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1275,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9308:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1268,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "9276:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9280:6:9",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "9276:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9287:4:9",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "9276:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1271,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1199,
																			"src": "9299:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "9276:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9276:35:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9257:54:9"
														},
														{
															"condition": {
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9330:8:9",
																"subExpression": {
																	"id": 1276,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "9331:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1281,
															"nodeType": "IfStatement",
															"src": "9326:47:9",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1278,
																		"name": "KipuBank__TransferFailed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "9347:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9347:26:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1280,
																"nodeType": "RevertStatement",
																"src": "9340:33:9"
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1295,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9493:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9497:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9493:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1297,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "9505:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1298,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "9513:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1299,
															"name": "withdrawValueUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "9522:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1294,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "9483:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9483:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1301,
												"nodeType": "EmitStatement",
												"src": "9478:61:9"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "8020:255:9",
										"text": " @notice Permite a un usuario retirar sus fondos (Ether o ERC-20).\n @param _token La direccion del token a retirar (usar `address(0)` para ETH).\n @param _amount La cantidad a retirar (en la unidad mas pequeña del token)."
									},
									"functionSelector": "f3fef3a3",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1202,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1199,
													"src": "8355:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1203,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1201,
												"name": "nonZeroAmount",
												"nameLocations": [
													"8341:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1015,
												"src": "8341:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8341:22:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "8290:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "8307:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "8299:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8299:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8323:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "8315:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8315:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8298:33:9"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8364:0:9"
									},
									"scope": 1575,
									"src": "8281:1266:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "10149:676:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1313,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "10164:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10175:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10164:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1318,
												"nodeType": "IfStatement",
												"src": "10160:26:9",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10185:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1312,
													"id": 1317,
													"nodeType": "Return",
													"src": "10178:8:9"
												}
											},
											{
												"assignments": [
													1321
												],
												"declarations": [
													{
														"constant": false,
														"id": 1321,
														"mutability": "mutable",
														"name": "config",
														"nameLocation": "10218:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1370,
														"src": "10199:25:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$886_memory_ptr",
															"typeString": "struct KipuBank.TokenConfig"
														},
														"typeName": {
															"id": 1320,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1319,
																"name": "TokenConfig",
																"nameLocations": [
																	"10199:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 886,
																"src": "10199:11:9"
															},
															"referencedDeclaration": 886,
															"src": "10199:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$886_storage_ptr",
																"typeString": "struct KipuBank.TokenConfig"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1325,
												"initialValue": {
													"baseExpression": {
														"id": 1322,
														"name": "s_tokenConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "10227:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$886_storage_$",
															"typeString": "mapping(address => struct KipuBank.TokenConfig storage ref)"
														}
													},
													"id": 1324,
													"indexExpression": {
														"id": 1323,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "10241:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10227:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$886_storage",
														"typeString": "struct KipuBank.TokenConfig storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10199:49:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1326,
															"name": "config",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "10263:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$886_memory_ptr",
																"typeString": "struct KipuBank.TokenConfig memory"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10270:9:9",
														"memberName": "priceFeed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 883,
														"src": "10263:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10291:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10283:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1328,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10283:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10283:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10263:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1338,
												"nodeType": "IfStatement",
												"src": "10259:103:9",
												"trueBody": {
													"id": 1337,
													"nodeType": "Block",
													"src": "10295:67:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1334,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1306,
																		"src": "10343:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1333,
																	"name": "KipuBank__TokenNotAllowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "10317:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10317:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1336,
															"nodeType": "RevertStatement",
															"src": "10310:40:9"
														}
													]
												}
											},
											{
												"assignments": [
													1341
												],
												"declarations": [
													{
														"constant": false,
														"id": 1341,
														"mutability": "mutable",
														"name": "priceFeed",
														"nameLocation": "10441:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1370,
														"src": "10419:31:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"id": 1340,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1339,
																"name": "AggregatorV3Interface",
																"nameLocations": [
																	"10419:21:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 45,
																"src": "10419:21:9"
															},
															"referencedDeclaration": 45,
															"src": "10419:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1346,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1343,
																"name": "config",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "10475:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenConfig_$886_memory_ptr",
																	"typeString": "struct KipuBank.TokenConfig memory"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10482:9:9",
															"memberName": "priceFeed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 883,
															"src": "10475:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1342,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "10453:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10453:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10419:73:9"
											},
											{
												"assignments": [
													null,
													1348,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1348,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "10513:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1370,
														"src": "10506:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1347,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "10506:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1352,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1349,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "10528:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10538:15:9",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "10528:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10528:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10503:52:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1353,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "10759:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1356,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1348,
																			"src": "10777:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10769:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1354,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10769:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10769:14:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10759:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1359,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10758:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10788:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1363,
																				"name": "config",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1321,
																				"src": "10800:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenConfig_$886_memory_ptr",
																					"typeString": "struct KipuBank.TokenConfig memory"
																				}
																			},
																			"id": 1364,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10807:8:9",
																			"memberName": "decimals",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 885,
																			"src": "10800:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10792:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1361,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10792:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10792:24:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10788:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1367,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10787:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10758:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1312,
												"id": 1369,
												"nodeType": "Return",
												"src": "10738:79:9"
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "9755:274:9",
										"text": " @notice Funcion de conversion de valor. Obtiene el valor en USD de una cantidad de token.\n @param _token La direccion del token.\n @param _amount La cantidad del token.\n @return valueUSD El valor equivalente en USD (con 8 decimales)."
									},
									"functionSelector": "2a6daba3",
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenValueUSD",
									"nameLocation": "10044:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "10079:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "10071:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10071:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10104:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "10096:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10096:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10060:58:9"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "10140:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10140:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10139:9:9"
									},
									"scope": 1575,
									"src": "10035:790:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "11032:51:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1381,
															"name": "s_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "11050:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1383,
														"indexExpression": {
															"id": 1382,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "11061:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11050:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1385,
													"indexExpression": {
														"id": 1384,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1376,
														"src": "11069:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11050:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1380,
												"id": 1386,
												"nodeType": "Return",
												"src": "11043:32:9"
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "10833:85:9",
										"text": " @notice Obtiene el saldo de un usuario para un token especifico."
									},
									"functionSelector": "d4fac45d",
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "10933:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "10962:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "10954:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10954:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "10987:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "10979:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10979:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10943:56:9"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "11023:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11023:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11022:9:9"
									},
									"scope": 1575,
									"src": "10924:159:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "11272:47:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1397,
														"name": "s_tokenConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "11290:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$886_storage_$",
															"typeString": "mapping(address => struct KipuBank.TokenConfig storage ref)"
														}
													},
													"id": 1399,
													"indexExpression": {
														"id": 1398,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "11304:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11290:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$886_storage",
														"typeString": "struct KipuBank.TokenConfig storage ref"
													}
												},
												"functionReturnParameters": 1396,
												"id": 1400,
												"nodeType": "Return",
												"src": "11283:28:9"
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "11091:76:9",
										"text": " @notice Obtiene la configuracion de un token permitido."
									},
									"functionSelector": "cb67e3b1",
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenConfig",
									"nameLocation": "11182:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "11215:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "11207:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11207:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11196:32:9"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "11252:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenConfig_$886_memory_ptr",
													"typeString": "struct KipuBank.TokenConfig"
												},
												"typeName": {
													"id": 1394,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1393,
														"name": "TokenConfig",
														"nameLocations": [
															"11252:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 886,
														"src": "11252:11:9"
													},
													"referencedDeclaration": 886,
													"src": "11252:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$886_storage_ptr",
														"typeString": "struct KipuBank.TokenConfig"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11251:20:9"
									},
									"scope": 1575,
									"src": "11173:146:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "11904:388:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1414,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "11919:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1415,
														"name": "ETH_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "11929:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11919:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1421,
												"nodeType": "IfStatement",
												"src": "11915:67:9",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1418,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "11975:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1417,
															"name": "KipuBank__TokenNotAllowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "11949:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11949:33:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1420,
													"nodeType": "RevertStatement",
													"src": "11942:40:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1422,
														"name": "_priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "11997:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12019:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12011:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1423,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12011:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12011:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11997:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1433,
												"nodeType": "IfStatement",
												"src": "11993:102:9",
												"trueBody": {
													"id": 1432,
													"nodeType": "Block",
													"src": "12023:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1429,
																		"name": "_priceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "12072:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1428,
																	"name": "KipuBank__InvalidPriceFeed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "12045:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12045:38:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1431,
															"nodeType": "RevertStatement",
															"src": "12038:45:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1434,
															"name": "s_tokenConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "12107:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$886_storage_$",
																"typeString": "mapping(address => struct KipuBank.TokenConfig storage ref)"
															}
														},
														"id": 1436,
														"indexExpression": {
															"id": 1435,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "12121:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12107:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$886_storage",
															"typeString": "struct KipuBank.TokenConfig storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1438,
																"name": "_priceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "12169:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1439,
																"name": "_decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "12204:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1437,
															"name": "TokenConfig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "12131:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenConfig_$886_storage_ptr_$",
																"typeString": "type(struct KipuBank.TokenConfig storage pointer)"
															}
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"12158:9:9",
															"12194:8:9"
														],
														"names": [
															"priceFeed",
															"decimals"
														],
														"nodeType": "FunctionCall",
														"src": "12131:94:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenConfig_$886_memory_ptr",
															"typeString": "struct KipuBank.TokenConfig memory"
														}
													},
													"src": "12107:118:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenConfig_$886_storage",
														"typeString": "struct KipuBank.TokenConfig storage ref"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "12107:118:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1444,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "12254:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1445,
															"name": "_priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "12262:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1446,
															"name": "_decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "12274:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1443,
														"name": "TokenAllowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "12241:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint8_$returns$__$",
															"typeString": "function (address,address,uint8)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12241:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1448,
												"nodeType": "EmitStatement",
												"src": "12236:48:9"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "11525:247:9",
										"text": " @notice (Owner) Permite un nuevo token ERC-20 en el banco.\n @param _token La direccion del contrato ERC-20.\n @param _priceFeed La direccion del oraculo de precio.\n @param _decimals Los decimales del token."
									},
									"functionSelector": "fee4aaeb",
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1412,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1411,
												"name": "onlyOwner",
												"nameLocations": [
													"11894:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "11894:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "11894:9:9"
										}
									],
									"name": "allowToken",
									"nameLocation": "11787:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "11816:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "11808:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11808:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "_priceFeed",
												"nameLocation": "11841:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "11833:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11833:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "_decimals",
												"nameLocation": "11868:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "11862:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1408,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11862:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11797:87:9"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11904:0:9"
									},
									"scope": 1575,
									"src": "11778:514:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "12489:283:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1461,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "12519:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1460,
														"name": "_checkTokenAllowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "12500:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12500:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "12500:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1464,
														"name": "_newPriceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "12541:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12566:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12558:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12558:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12558:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12541:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1475,
												"nodeType": "IfStatement",
												"src": "12537:108:9",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "12570:75:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1471,
																		"name": "_newPriceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "12619:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1470,
																	"name": "KipuBank__InvalidPriceFeed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "12592:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12592:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1473,
															"nodeType": "RevertStatement",
															"src": "12585:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1476,
																"name": "s_tokenConfig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "12657:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$886_storage_$",
																	"typeString": "mapping(address => struct KipuBank.TokenConfig storage ref)"
																}
															},
															"id": 1478,
															"indexExpression": {
																"id": 1477,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1453,
																"src": "12671:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12657:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$886_storage",
																"typeString": "struct KipuBank.TokenConfig storage ref"
															}
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12679:9:9",
														"memberName": "priceFeed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 883,
														"src": "12657:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1480,
														"name": "_newPriceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "12691:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12657:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "12657:47:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1484,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "12742:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1485,
															"name": "_newPriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "12750:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1483,
														"name": "TokenPriceFeedUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "12720:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12720:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "EmitStatement",
												"src": "12715:49:9"
											}
										]
									},
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "12300:70:9",
										"text": " @notice (Owner) Actualiza el oraculo de un token."
									},
									"functionSelector": "82d2f5b1",
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1457,
												"name": "onlyOwner",
												"nameLocations": [
													"12479:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "12479:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "12479:9:9"
										}
									],
									"name": "updateTokenPriceFeed",
									"nameLocation": "12385:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "12424:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "12416:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12416:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "_newPriceFeed",
												"nameLocation": "12449:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "12441:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12441:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12405:64:9"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12489:0:9"
									},
									"scope": 1575,
									"src": "12376:396:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "13042:269:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1499,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "13057:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1500,
														"name": "ETH_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "13067:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13057:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1528,
													"nodeType": "Block",
													"src": "13229:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1523,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13272:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13276:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13272:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1525,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1494,
																		"src": "13284:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1520,
																				"name": "_token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1492,
																				"src": "13251:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1519,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 361,
																			"src": "13244:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$361_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13244:14:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13259:12:9",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 406,
																	"src": "13244:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$361_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13244:48:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1527,
															"nodeType": "ExpressionStatement",
															"src": "13244:48:9"
														}
													]
												},
												"id": 1529,
												"nodeType": "IfStatement",
												"src": "13053:251:9",
												"trueBody": {
													"id": 1518,
													"nodeType": "Block",
													"src": "13080:143:9",
													"statements": [
														{
															"assignments": [
																1503,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1503,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "13101:7:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1518,
																	"src": "13096:12:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1502,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "13096:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1511,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13146:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1504,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "13114:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "13118:6:9",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "13114:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13125:4:9",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "13114:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1507,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1494,
																			"src": "13137:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "13114:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13114:35:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13095:54:9"
														},
														{
															"condition": {
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "13168:8:9",
																"subExpression": {
																	"id": 1512,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "13169:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1517,
															"nodeType": "IfStatement",
															"src": "13164:47:9",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1514,
																		"name": "KipuBank__TransferFailed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "13185:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13185:26:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1516,
																"nodeType": "RevertStatement",
																"src": "13178:33:9"
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "12780:177:9",
										"text": " @notice (Owner) Permite retirar fondos de emergencia.\n @dev No actualiza `s_totalBankValueUSD` intencionalmente, ya que es una funcion de emergencia."
									},
									"functionSelector": "95ccea67",
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1497,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1496,
												"name": "onlyOwner",
												"nameLocations": [
													"13032:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "13032:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "13032:9:9"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "12972:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "12998:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "12990:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12990:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "13014:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "13006:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13006:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12989:33:9"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13042:0:9"
									},
									"scope": 1575,
									"src": "12963:348:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "13661:136:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1537,
																"name": "s_tokenConfig",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "13676:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenConfig_$886_storage_$",
																	"typeString": "mapping(address => struct KipuBank.TokenConfig storage ref)"
																}
															},
															"id": 1539,
															"indexExpression": {
																"id": 1538,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "13690:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13676:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenConfig_$886_storage",
																"typeString": "struct KipuBank.TokenConfig storage ref"
															}
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13698:9:9",
														"memberName": "priceFeed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 883,
														"src": "13676:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13719:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13711:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1541,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13711:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13711:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13676:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1551,
												"nodeType": "IfStatement",
												"src": "13672:118:9",
												"trueBody": {
													"id": 1550,
													"nodeType": "Block",
													"src": "13723:67:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1547,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1534,
																		"src": "13771:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1546,
																	"name": "KipuBank__TokenNotAllowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "13745:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13745:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1549,
															"nodeType": "RevertStatement",
															"src": "13738:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "13507:91:9",
										"text": " @dev Revisa si un token esta permitido (tiene un oraculo configurado)."
									},
									"id": 1553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkTokenAllowed",
									"nameLocation": "13613:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "13640:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "13632:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13632:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13631:16:9"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13661:0:9"
									},
									"scope": 1575,
									"src": "13604:193:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "14132:58:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1560,
															"name": "ETH_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "14159:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1561,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14172:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14176:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "14172:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1559,
														"name": "_handleDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "14144:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14144:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "14144:38:9"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "13995:91:9",
										"text": " @notice Permite depositos de ETH directos (sin llamar a `depositEth`)."
									},
									"id": 1566,
									"implemented": true,
									"kind": "receive",
									"modifiers": [
										{
											"id": 1557,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1556,
												"name": "nonZeroValue",
												"nameLocations": [
													"14119:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1028,
												"src": "14119:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "14119:12:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14099:2:9"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14132:0:9"
									},
									"scope": 1575,
									"src": "14092:98:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "14309:56:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1570,
														"name": "KipuBank__FallbackNotAllowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "14327:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14327:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 1572,
												"nodeType": "RevertStatement",
												"src": "14320:37:9"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "14198:77:9",
										"text": " @notice Rechaza cualquier llamada a funcion desconocida."
									},
									"id": 1574,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14289:2:9"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14309:0:9"
									},
									"scope": 1575,
									"src": "14281:84:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1576,
							"src": "384:13984:9",
							"usedErrors": [
								59,
								64,
								373,
								967,
								971,
								975,
								983,
								989,
								995,
								997,
								999,
								1001
							],
							"usedEvents": [
								70,
								941,
								951,
								959,
								965
							]
						}
					],
					"src": "33:14335:9"
				},
				"id": 9
			}
		}
	}
}